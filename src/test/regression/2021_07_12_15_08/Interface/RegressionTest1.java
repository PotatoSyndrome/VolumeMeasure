package Interface;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test501");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray7 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList8 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList8, nodeArray7);
        boolean boolean10 = nodeList8.isEmpty();
        int int12 = nodeList8.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable13 = null;
        Interface.WoodTotalValues woodTotalValues14 = null;
        Interface.AddWood addWood15 = null; // flaky: new Interface.AddWood(woodTable13, woodTotalValues14);
        java.util.ArrayList<javafx.scene.Node> nodeList16 = null; // flaky: addWood15.getAll();
        boolean boolean18 = false; // flaky: nodeList16.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node20 = null;
        javafx.scene.Node node21 = null; // flaky: nodeList16.set((int) (byte) 1, node20);
        boolean boolean22 = nodeList8.add(node21);
        javafx.scene.Node node23 = null; // flaky: nodeList5.set((int) (short) 0, node21);
        javafx.scene.Node[] nodeArray24 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList25 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList25, nodeArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = nodeList25.remove(obj27);
        javafx.scene.Node[] nodeArray29 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList30 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList30, nodeArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = nodeList30.remove(obj32);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        javafx.scene.Node[] nodeArray44 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList45 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList45, nodeArray44);
        boolean boolean47 = nodeList45.isEmpty();
        int int49 = nodeList45.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null;
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable50, woodTotalValues51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood52.getAll();
        boolean boolean55 = false; // flaky: nodeList53.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node57 = null;
        javafx.scene.Node node58 = null; // flaky: nodeList53.set((int) (byte) 1, node57);
        boolean boolean59 = nodeList45.add(node58);
// flaky:         nodeList35.add(1, node58);
        boolean boolean61 = nodeList30.retainAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        boolean boolean62 = nodeList25.retainAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        boolean boolean63 = false; // flaky: nodeList5.retainAll((java.util.Collection<javafx.scene.Node>) nodeList25);
        javafx.scene.Node node64 = null;
        boolean boolean65 = false; // flaky: nodeList5.add(node64);
        boolean boolean66 = false; // flaky: nodeList5.isEmpty();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(nodeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
// flaky:         org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(nodeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(nodeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(nodeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test502");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable8 = null;
        Interface.WoodTotalValues woodTotalValues9 = null;
        Interface.AddWood addWood10 = null; // flaky: new Interface.AddWood(woodTable8, woodTotalValues9);
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: addWood10.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: addWood10.getAll();
        javafx.scene.Node[] nodeArray13 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList14 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList14, nodeArray13);
        boolean boolean16 = nodeList14.isEmpty();
        int int18 = nodeList14.lastIndexOf((java.lang.Object) 100);
        int int20 = nodeList14.lastIndexOf((java.lang.Object) 10);
        boolean boolean21 = false; // flaky: nodeList12.retainAll((java.util.Collection<javafx.scene.Node>) nodeList14);
        boolean boolean22 = nodeList1.containsAll((java.util.Collection<javafx.scene.Node>) nodeList14);
        java.util.ListIterator<javafx.scene.Node> nodeItor24 = nodeList1.listIterator(0);
        java.util.Iterator<javafx.scene.Node> nodeItor25 = nodeList1.iterator();
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node27 = nodeList1.get(11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertNotNull(nodeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(nodeItor24);
        org.junit.Assert.assertNotNull(nodeItor25);
    }

    @Test
    public void test503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test503");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable8 = null;
        Interface.WoodTotalValues woodTotalValues9 = null;
        Interface.AddWood addWood10 = null; // flaky: new Interface.AddWood(woodTable8, woodTotalValues9);
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: addWood10.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: addWood10.getAll();
        javafx.scene.Node[] nodeArray13 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList14 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList14, nodeArray13);
        boolean boolean16 = nodeList14.isEmpty();
        int int18 = nodeList14.lastIndexOf((java.lang.Object) 100);
        int int20 = nodeList14.lastIndexOf((java.lang.Object) 10);
        boolean boolean21 = false; // flaky: nodeList12.retainAll((java.util.Collection<javafx.scene.Node>) nodeList14);
        boolean boolean22 = nodeList1.containsAll((java.util.Collection<javafx.scene.Node>) nodeList14);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList26);
// flaky:         nodeList26.clear();
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = nodeList35.remove(obj37);
        javafx.scene.Node node39 = null;
        boolean boolean40 = nodeList35.add(node39);
        java.util.ListIterator<javafx.scene.Node> nodeItor41 = nodeList35.listIterator();
        Interface.WoodTable woodTable42 = null;
        Interface.WoodTotalValues woodTotalValues43 = null;
        Interface.AddWood addWood44 = null; // flaky: new Interface.AddWood(woodTable42, woodTotalValues43);
        java.util.ArrayList<javafx.scene.Node> nodeList45 = null; // flaky: addWood44.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList46 = null; // flaky: addWood44.getAll();
        javafx.scene.Node[] nodeArray47 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList48 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList48, nodeArray47);
        boolean boolean50 = nodeList48.isEmpty();
        int int52 = nodeList48.lastIndexOf((java.lang.Object) 100);
        int int54 = nodeList48.lastIndexOf((java.lang.Object) 10);
        boolean boolean55 = false; // flaky: nodeList46.retainAll((java.util.Collection<javafx.scene.Node>) nodeList48);
        boolean boolean57 = false; // flaky: nodeList46.contains((java.lang.Object) false);
        Interface.WoodTable woodTable58 = null;
        Interface.WoodTotalValues woodTotalValues59 = null;
        Interface.AddWood addWood60 = null; // flaky: new Interface.AddWood(woodTable58, woodTotalValues59);
        java.util.ArrayList<javafx.scene.Node> nodeList61 = null; // flaky: addWood60.getAll();
        boolean boolean62 = false; // flaky: nodeList61.isEmpty();
        boolean boolean64 = false; // flaky: nodeList61.equals((java.lang.Object) 100);
        int int65 = 0; // flaky: nodeList46.lastIndexOf((java.lang.Object) nodeList61);
        javafx.scene.Node[] nodeArray66 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList67 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList67, nodeArray66);
        java.lang.Object obj69 = null;
        boolean boolean70 = nodeList67.remove(obj69);
        javafx.scene.Node[] nodeArray71 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList72 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList72, nodeArray71);
        boolean boolean74 = nodeList72.isEmpty();
        int int76 = nodeList72.lastIndexOf((java.lang.Object) 100);
        boolean boolean77 = nodeList67.equals((java.lang.Object) nodeList72);
        Interface.WoodTable woodTable78 = null;
        Interface.WoodTotalValues woodTotalValues79 = null;
        Interface.AddWood addWood80 = null; // flaky: new Interface.AddWood(woodTable78, woodTotalValues79);
        java.util.ArrayList<javafx.scene.Node> nodeList81 = null; // flaky: addWood80.getAll();
// flaky:         addWood80.redraw((double) 10.0f, (double) 0L);
        boolean boolean85 = nodeList67.contains((java.lang.Object) 10.0f);
        boolean boolean86 = false; // flaky: nodeList61.contains((java.lang.Object) 10.0f);
        boolean boolean87 = false; // flaky: nodeList35.removeAll((java.util.Collection<javafx.scene.Node>) nodeList61);
        java.lang.Object obj88 = null;
        boolean boolean89 = false; // flaky: nodeList61.remove(obj88);
        boolean boolean90 = false; // flaky: nodeList26.removeAll((java.util.Collection<javafx.scene.Node>) nodeList61);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertNotNull(nodeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(nodeItor41);
// flaky:         org.junit.Assert.assertNotNull(nodeList45);
// flaky:         org.junit.Assert.assertNotNull(nodeList46);
        org.junit.Assert.assertNotNull(nodeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(nodeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(nodeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList81);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test504");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        java.util.stream.Stream<javafx.scene.Node> nodeStream16 = nodeList1.stream();
        nodeList1.clear();
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node19 = nodeList1.remove((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeStream16);
    }

    @Test
    public void test505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test505");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        java.util.stream.Stream<javafx.scene.Node> nodeStream16 = nodeList1.stream();
        javafx.scene.Node node18 = nodeList1.remove(0);
        Interface.WoodTable woodTable20 = null;
        Interface.WoodTotalValues woodTotalValues21 = null; // flaky: new Interface.WoodTotalValues(woodTable20);
// flaky:         woodTotalValues21.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList25 = null; // flaky: woodTotalValues21.getAll();
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        boolean boolean31 = false; // flaky: nodeList29.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node[] nodeArray33 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList34 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList34, nodeArray33);
        boolean boolean36 = nodeList34.isEmpty();
        int int38 = nodeList34.lastIndexOf((java.lang.Object) 100);
        int int40 = nodeList34.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable41 = null;
        Interface.WoodTotalValues woodTotalValues42 = null;
        Interface.AddWood addWood43 = null; // flaky: new Interface.AddWood(woodTable41, woodTotalValues42);
        java.util.ArrayList<javafx.scene.Node> nodeList44 = null; // flaky: addWood43.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList45 = null; // flaky: addWood43.getAll();
        javafx.scene.Node[] nodeArray46 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList47 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList47, nodeArray46);
        boolean boolean49 = nodeList47.isEmpty();
        int int51 = nodeList47.lastIndexOf((java.lang.Object) 100);
        int int53 = nodeList47.lastIndexOf((java.lang.Object) 10);
        boolean boolean54 = false; // flaky: nodeList45.retainAll((java.util.Collection<javafx.scene.Node>) nodeList47);
        boolean boolean55 = nodeList34.containsAll((java.util.Collection<javafx.scene.Node>) nodeList47);
        boolean boolean56 = false; // flaky: nodeList29.addAll(1, (java.util.Collection<javafx.scene.Node>) nodeList34);
        boolean boolean57 = false; // flaky: nodeList25.addAll((java.util.Collection<javafx.scene.Node>) nodeList29);
        boolean boolean58 = false; // flaky: nodeList1.addAll((int) (byte) 0, (java.util.Collection<javafx.scene.Node>) nodeList29);
        java.util.stream.Stream<javafx.scene.Node> nodeStream59 = nodeList1.stream();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeStream16);
// flaky:         org.junit.Assert.assertNotNull(node18);
// flaky:         org.junit.Assert.assertNotNull(nodeList25);
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(nodeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList44);
// flaky:         org.junit.Assert.assertNotNull(nodeList45);
        org.junit.Assert.assertNotNull(nodeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(nodeStream59);
    }

    @Test
    public void test506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test506");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTable woodTable3 = null;
        Interface.WoodTotalValues woodTotalValues4 = null; // flaky: new Interface.WoodTotalValues(woodTable3);
        Interface.AddWood addWood5 = null; // flaky: new Interface.AddWood(woodTable2, woodTotalValues4);
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues4);
        Interface.AddWood addWood7 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues4);
    }

    @Test
    public void test507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test507");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        boolean boolean5 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        Interface.WoodTable woodTable10 = null;
        Interface.WoodTotalValues woodTotalValues11 = null;
        Interface.AddWood addWood12 = null; // flaky: new Interface.AddWood(woodTable10, woodTotalValues11);
        java.util.ArrayList<javafx.scene.Node> nodeList13 = null; // flaky: addWood12.getAll();
        boolean boolean14 = false; // flaky: nodeList7.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList13);
        int int16 = nodeList7.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray18 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList19 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList19, nodeArray18);
        boolean boolean21 = nodeList19.isEmpty();
        int int23 = nodeList19.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTotalValues woodTotalValues25 = null;
        Interface.AddWood addWood26 = null; // flaky: new Interface.AddWood(woodTable24, woodTotalValues25);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood26.getAll();
        boolean boolean29 = false; // flaky: nodeList27.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node31 = null;
        javafx.scene.Node node32 = null; // flaky: nodeList27.set((int) (byte) 1, node31);
        boolean boolean33 = nodeList19.add(node32);
        javafx.scene.Node node34 = null; // flaky: nodeList7.set((int) (short) 0, node32);
        boolean boolean35 = nodeList1.add(node34);
        boolean boolean37 = nodeList1.remove((java.lang.Object) 100L);
        nodeList1.clear();
        Interface.WoodTable woodTable39 = null;
        Interface.WoodTotalValues woodTotalValues40 = null;
        Interface.AddWood addWood41 = null; // flaky: new Interface.AddWood(woodTable39, woodTotalValues40);
        java.util.ArrayList<javafx.scene.Node> nodeList42 = null; // flaky: addWood41.getAll();
// flaky:         addWood41.redraw((double) 10.0f, (double) 0L);
        java.util.ArrayList<javafx.scene.Node> nodeList46 = null; // flaky: addWood41.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList47 = null; // flaky: addWood41.getAll();
        javafx.scene.Node node49 = null; // flaky: nodeList47.get(2);
        boolean boolean50 = nodeList1.add(node49);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList13);
// flaky:         org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(nodeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList42);
// flaky:         org.junit.Assert.assertNotNull(nodeList46);
// flaky:         org.junit.Assert.assertNotNull(nodeList47);
// flaky:         org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test508");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood6.getAll();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        boolean boolean12 = nodeList10.isEmpty();
        int int14 = nodeList10.lastIndexOf((java.lang.Object) 100);
        int int16 = nodeList10.lastIndexOf((java.lang.Object) 10);
        boolean boolean17 = false; // flaky: nodeList8.retainAll((java.util.Collection<javafx.scene.Node>) nodeList10);
        boolean boolean18 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList8);
        javafx.scene.Node[] nodeArray19 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList20 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList20, nodeArray19);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean27 = false; // flaky: nodeList20.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList26);
        java.util.stream.Stream<javafx.scene.Node> nodeStream28 = null; // flaky: nodeList26.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator29 = null; // flaky: nodeList26.spliterator();
        int int30 = 0; // flaky: nodeList8.indexOf((java.lang.Object) nodeList26);
        boolean boolean31 = false; // flaky: nodeList26.isEmpty();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(nodeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
// flaky:         org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream28);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator29);
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test509");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean14 = nodeList1.isEmpty();
        java.util.Iterator<javafx.scene.Node> nodeItor15 = nodeList1.iterator();
        java.lang.Object[] objArray16 = nodeList1.toArray();
        java.util.Collection<javafx.scene.Node> nodeCollection18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = nodeList1.addAll(11, nodeCollection18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(nodeItor15);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
    }

    @Test
    public void test510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test510");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
// flaky:         woodTotalValues1.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: woodTotalValues1.getAll();
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node[] nodeArray13 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList14 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList14, nodeArray13);
        boolean boolean16 = nodeList14.isEmpty();
        int int18 = nodeList14.lastIndexOf((java.lang.Object) 100);
        int int20 = nodeList14.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable21 = null;
        Interface.WoodTotalValues woodTotalValues22 = null;
        Interface.AddWood addWood23 = null; // flaky: new Interface.AddWood(woodTable21, woodTotalValues22);
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood23.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList25 = null; // flaky: addWood23.getAll();
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        boolean boolean29 = nodeList27.isEmpty();
        int int31 = nodeList27.lastIndexOf((java.lang.Object) 100);
        int int33 = nodeList27.lastIndexOf((java.lang.Object) 10);
        boolean boolean34 = false; // flaky: nodeList25.retainAll((java.util.Collection<javafx.scene.Node>) nodeList27);
        boolean boolean35 = nodeList14.containsAll((java.util.Collection<javafx.scene.Node>) nodeList27);
        boolean boolean36 = false; // flaky: nodeList9.addAll(1, (java.util.Collection<javafx.scene.Node>) nodeList14);
        boolean boolean37 = false; // flaky: nodeList5.addAll((java.util.Collection<javafx.scene.Node>) nodeList9);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean43 = false; // flaky: nodeList41.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node[] nodeArray45 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList46 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList46, nodeArray45);
        boolean boolean48 = nodeList46.isEmpty();
        int int50 = nodeList46.lastIndexOf((java.lang.Object) 100);
        int int52 = nodeList46.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable53 = null;
        Interface.WoodTotalValues woodTotalValues54 = null;
        Interface.AddWood addWood55 = null; // flaky: new Interface.AddWood(woodTable53, woodTotalValues54);
        java.util.ArrayList<javafx.scene.Node> nodeList56 = null; // flaky: addWood55.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList57 = null; // flaky: addWood55.getAll();
        javafx.scene.Node[] nodeArray58 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList59 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList59, nodeArray58);
        boolean boolean61 = nodeList59.isEmpty();
        int int63 = nodeList59.lastIndexOf((java.lang.Object) 100);
        int int65 = nodeList59.lastIndexOf((java.lang.Object) 10);
        boolean boolean66 = false; // flaky: nodeList57.retainAll((java.util.Collection<javafx.scene.Node>) nodeList59);
        boolean boolean67 = nodeList46.containsAll((java.util.Collection<javafx.scene.Node>) nodeList59);
        boolean boolean68 = false; // flaky: nodeList41.addAll(1, (java.util.Collection<javafx.scene.Node>) nodeList46);
        boolean boolean69 = false; // flaky: nodeList9.contains((java.lang.Object) nodeList41);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator70 = null; // flaky: nodeList41.spliterator();
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(nodeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
// flaky:         org.junit.Assert.assertNotNull(nodeList25);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(nodeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList56);
// flaky:         org.junit.Assert.assertNotNull(nodeList57);
        org.junit.Assert.assertNotNull(nodeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator70);
    }

    @Test
    public void test511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test511");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList1.equals((java.lang.Object) nodeList6);
        javafx.scene.Node[] nodeArray12 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList13 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList13, nodeArray12);
        boolean boolean15 = nodeList13.isEmpty();
        int int17 = nodeList13.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable18 = null;
        Interface.WoodTotalValues woodTotalValues19 = null;
        Interface.AddWood addWood20 = null; // flaky: new Interface.AddWood(woodTable18, woodTotalValues19);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood20.getAll();
        boolean boolean23 = false; // flaky: nodeList21.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node25 = null;
        javafx.scene.Node node26 = null; // flaky: nodeList21.set((int) (byte) 1, node25);
        boolean boolean27 = nodeList13.add(node26);
        Interface.WoodTable woodTable28 = null;
        Interface.WoodTotalValues woodTotalValues29 = null;
        Interface.AddWood addWood30 = null; // flaky: new Interface.AddWood(woodTable28, woodTotalValues29);
        java.util.ArrayList<javafx.scene.Node> nodeList31 = null; // flaky: addWood30.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood30.getAll();
        javafx.scene.Node[] nodeArray33 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList34 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList34, nodeArray33);
        boolean boolean36 = nodeList34.isEmpty();
        int int38 = nodeList34.lastIndexOf((java.lang.Object) 100);
        int int40 = nodeList34.lastIndexOf((java.lang.Object) 10);
        boolean boolean41 = false; // flaky: nodeList32.retainAll((java.util.Collection<javafx.scene.Node>) nodeList34);
        boolean boolean42 = nodeList13.removeAll((java.util.Collection<javafx.scene.Node>) nodeList34);
        javafx.scene.Node[] nodeArray43 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList44 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList44, nodeArray43);
        boolean boolean46 = nodeList44.isEmpty();
        int int48 = nodeList44.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable49 = null;
        Interface.WoodTotalValues woodTotalValues50 = null;
        Interface.AddWood addWood51 = null; // flaky: new Interface.AddWood(woodTable49, woodTotalValues50);
        java.util.ArrayList<javafx.scene.Node> nodeList52 = null; // flaky: addWood51.getAll();
        boolean boolean54 = false; // flaky: nodeList52.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node56 = null;
        javafx.scene.Node node57 = null; // flaky: nodeList52.set((int) (byte) 1, node56);
        boolean boolean58 = nodeList44.add(node57);
        javafx.scene.Node[] nodeArray59 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList60 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList60, nodeArray59);
        java.lang.Object obj62 = null;
        boolean boolean63 = nodeList60.remove(obj62);
        boolean boolean64 = nodeList44.retainAll((java.util.Collection<javafx.scene.Node>) nodeList60);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator65 = nodeList60.spliterator();
        boolean boolean66 = nodeList34.remove((java.lang.Object) nodeSpliterator65);
        int int67 = nodeList1.lastIndexOf((java.lang.Object) nodeSpliterator65);
        nodeList1.clear();
        javafx.scene.Node[] nodeArray69 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList70 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList70, nodeArray69);
        boolean boolean72 = nodeList70.isEmpty();
        int int74 = nodeList70.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable75 = null;
        Interface.WoodTotalValues woodTotalValues76 = null;
        Interface.AddWood addWood77 = null; // flaky: new Interface.AddWood(woodTable75, woodTotalValues76);
        java.util.ArrayList<javafx.scene.Node> nodeList78 = null; // flaky: addWood77.getAll();
        boolean boolean80 = false; // flaky: nodeList78.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node82 = null;
        javafx.scene.Node node83 = null; // flaky: nodeList78.set((int) (byte) 1, node82);
        boolean boolean84 = nodeList70.add(node83);
        int int85 = nodeList1.indexOf((java.lang.Object) boolean84);
        java.util.function.UnaryOperator<javafx.scene.Node> nodeUnaryOperator86 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList1.replaceAll(nodeUnaryOperator86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(nodeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList31);
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertNotNull(nodeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(nodeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(nodeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(nodeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
// flaky:         org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test512");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
// flaky:         addWood16.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood16.getAll();
        boolean boolean22 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        java.util.Iterator<javafx.scene.Node> nodeItor23 = null; // flaky: nodeList21.iterator();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor23);
    }

    @Test
    public void test513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test513");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood6.getAll();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        boolean boolean12 = nodeList10.isEmpty();
        int int14 = nodeList10.lastIndexOf((java.lang.Object) 100);
        int int16 = nodeList10.lastIndexOf((java.lang.Object) 10);
        boolean boolean17 = false; // flaky: nodeList8.retainAll((java.util.Collection<javafx.scene.Node>) nodeList10);
        boolean boolean18 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList8);
        boolean boolean19 = false; // flaky: nodeList8.isEmpty();
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        java.lang.Object obj23 = null;
        boolean boolean24 = nodeList21.remove(obj23);
        boolean boolean25 = nodeList21.isEmpty();
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        Interface.WoodTable woodTable30 = null;
        Interface.WoodTotalValues woodTotalValues31 = null;
        Interface.AddWood addWood32 = null; // flaky: new Interface.AddWood(woodTable30, woodTotalValues31);
        java.util.ArrayList<javafx.scene.Node> nodeList33 = null; // flaky: addWood32.getAll();
        boolean boolean34 = false; // flaky: nodeList27.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList33);
        int int36 = nodeList27.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray38 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList39 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList39, nodeArray38);
        boolean boolean41 = nodeList39.isEmpty();
        int int43 = nodeList39.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable44 = null;
        Interface.WoodTotalValues woodTotalValues45 = null;
        Interface.AddWood addWood46 = null; // flaky: new Interface.AddWood(woodTable44, woodTotalValues45);
        java.util.ArrayList<javafx.scene.Node> nodeList47 = null; // flaky: addWood46.getAll();
        boolean boolean49 = false; // flaky: nodeList47.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node51 = null;
        javafx.scene.Node node52 = null; // flaky: nodeList47.set((int) (byte) 1, node51);
        boolean boolean53 = nodeList39.add(node52);
        javafx.scene.Node node54 = null; // flaky: nodeList27.set((int) (short) 0, node52);
        boolean boolean55 = nodeList21.add(node54);
        boolean boolean57 = nodeList21.remove((java.lang.Object) 100L);
        int int58 = 0; // flaky: nodeList8.lastIndexOf((java.lang.Object) nodeList21);
        java.lang.Object[] objArray59 = nodeList21.toArray();
        java.util.stream.Stream<javafx.scene.Node> nodeStream60 = nodeList21.stream();
        java.util.stream.Stream<javafx.scene.Node> nodeStream61 = nodeList21.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<javafx.scene.Node> nodeItor63 = nodeList21.listIterator(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList33);
// flaky:         org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
// flaky:         org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertNotNull(nodeStream60);
        org.junit.Assert.assertNotNull(nodeStream61);
    }

    @Test
    public void test514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test514");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList18 = null; // flaky: addWood16.getAll();
        boolean boolean19 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList18);
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        java.lang.Object obj23 = null;
        boolean boolean24 = nodeList21.remove(obj23);
        javafx.scene.Node node25 = null;
        boolean boolean26 = nodeList21.add(node25);
        java.util.ListIterator<javafx.scene.Node> nodeItor27 = nodeList21.listIterator();
        boolean boolean28 = nodeList6.removeAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        java.util.ListIterator<javafx.scene.Node> nodeItor29 = nodeList21.listIterator();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList18);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(nodeItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(nodeItor29);
    }

    @Test
    public void test515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test515");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood18.getAll();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        int int28 = nodeList22.lastIndexOf((java.lang.Object) 10);
        boolean boolean29 = false; // flaky: nodeList20.retainAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        boolean boolean30 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        Interface.WoodTable woodTable31 = null;
        Interface.WoodTotalValues woodTotalValues32 = null;
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable31, woodTotalValues32);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList36 = null; // flaky: addWood33.getAll();
        boolean boolean37 = false; // flaky: nodeList22.addAll((java.util.Collection<javafx.scene.Node>) nodeList36);
        int int38 = nodeList22.size();
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        java.lang.Object obj42 = null;
        boolean boolean43 = nodeList40.remove(obj42);
        int int44 = nodeList40.size();
        boolean boolean45 = nodeList22.addAll((java.util.Collection<javafx.scene.Node>) nodeList40);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertNotNull(nodeList36);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test516");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) 10.0f, (double) 0L);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood2.getAll();
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList8.parallelStream();
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        boolean boolean13 = nodeList11.isEmpty();
        int int15 = nodeList11.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean21 = false; // flaky: nodeList19.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node23 = null;
        javafx.scene.Node node24 = null; // flaky: nodeList19.set((int) (byte) 1, node23);
        boolean boolean25 = nodeList11.add(node24);
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = nodeList27.remove(obj29);
        boolean boolean31 = nodeList11.retainAll((java.util.Collection<javafx.scene.Node>) nodeList27);
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        java.lang.Object obj35 = null;
        boolean boolean36 = nodeList33.remove(obj35);
        javafx.scene.Node node37 = null;
        boolean boolean38 = nodeList33.add(node37);
        boolean boolean39 = nodeList27.equals((java.lang.Object) boolean38);
        boolean boolean40 = false; // flaky: nodeList8.removeAll((java.util.Collection<javafx.scene.Node>) nodeList27);
        java.util.ListIterator<javafx.scene.Node> nodeItor41 = nodeList27.listIterator();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(nodeItor41);
    }

    @Test
    public void test517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test517");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        boolean boolean5 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        Interface.WoodTable woodTable10 = null;
        Interface.WoodTotalValues woodTotalValues11 = null;
        Interface.AddWood addWood12 = null; // flaky: new Interface.AddWood(woodTable10, woodTotalValues11);
        java.util.ArrayList<javafx.scene.Node> nodeList13 = null; // flaky: addWood12.getAll();
        boolean boolean14 = false; // flaky: nodeList7.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList13);
        int int16 = nodeList7.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray18 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList19 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList19, nodeArray18);
        boolean boolean21 = nodeList19.isEmpty();
        int int23 = nodeList19.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTotalValues woodTotalValues25 = null;
        Interface.AddWood addWood26 = null; // flaky: new Interface.AddWood(woodTable24, woodTotalValues25);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood26.getAll();
        boolean boolean29 = false; // flaky: nodeList27.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node31 = null;
        javafx.scene.Node node32 = null; // flaky: nodeList27.set((int) (byte) 1, node31);
        boolean boolean33 = nodeList19.add(node32);
        javafx.scene.Node node34 = null; // flaky: nodeList7.set((int) (short) 0, node32);
        boolean boolean35 = nodeList1.add(node34);
        nodeList1.clear();
        java.util.Iterator<javafx.scene.Node> nodeItor37 = nodeList1.iterator();
        int int38 = nodeList1.size();
        java.lang.Object obj39 = null;
        boolean boolean40 = nodeList1.equals(obj39);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList13);
// flaky:         org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(nodeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test518");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean15 = false; // flaky: nodeList4.contains((java.lang.Object) false);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean20 = false; // flaky: nodeList19.isEmpty();
        boolean boolean22 = false; // flaky: nodeList19.equals((java.lang.Object) 100);
        int int23 = 0; // flaky: nodeList4.lastIndexOf((java.lang.Object) nodeList19);
        javafx.scene.Node[] nodeArray24 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList25 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList25, nodeArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = nodeList25.remove(obj27);
        javafx.scene.Node[] nodeArray29 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList30 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList30, nodeArray29);
        boolean boolean32 = nodeList30.isEmpty();
        int int34 = nodeList30.lastIndexOf((java.lang.Object) 100);
        boolean boolean35 = nodeList25.equals((java.lang.Object) nodeList30);
        Interface.WoodTable woodTable36 = null;
        Interface.WoodTotalValues woodTotalValues37 = null;
        Interface.AddWood addWood38 = null; // flaky: new Interface.AddWood(woodTable36, woodTotalValues37);
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood38.getAll();
// flaky:         addWood38.redraw((double) 10.0f, (double) 0L);
        boolean boolean43 = nodeList25.contains((java.lang.Object) 10.0f);
        boolean boolean44 = false; // flaky: nodeList19.contains((java.lang.Object) 10.0f);
        javafx.scene.Node[] nodeArray46 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList47 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList47, nodeArray46);
        java.lang.Object obj49 = null;
        boolean boolean50 = nodeList47.remove(obj49);
        javafx.scene.Node[] nodeArray51 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList52 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList52, nodeArray51);
        boolean boolean54 = nodeList52.isEmpty();
        int int56 = nodeList52.lastIndexOf((java.lang.Object) 100);
        boolean boolean57 = nodeList52.isEmpty();
        nodeList52.clear();
        boolean boolean59 = nodeList47.removeAll((java.util.Collection<javafx.scene.Node>) nodeList52);
        Interface.WoodTable woodTable60 = null;
        Interface.WoodTotalValues woodTotalValues61 = null;
        Interface.AddWood addWood62 = null; // flaky: new Interface.AddWood(woodTable60, woodTotalValues61);
        java.util.ArrayList<javafx.scene.Node> nodeList63 = null; // flaky: addWood62.getAll();
// flaky:         addWood62.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList67 = null; // flaky: addWood62.getAll();
        boolean boolean68 = false; // flaky: nodeList52.addAll((java.util.Collection<javafx.scene.Node>) nodeList67);
        javafx.scene.Node node70 = null; // flaky: nodeList52.remove((int) (short) 1);
// flaky:         nodeList19.add((int) (short) 1, node70);
        java.util.stream.Stream<javafx.scene.Node> nodeStream72 = null; // flaky: nodeList19.parallelStream();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(nodeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(nodeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(nodeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(nodeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList63);
// flaky:         org.junit.Assert.assertNotNull(nodeList67);
// flaky:         org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
// flaky:         org.junit.Assert.assertNotNull(node70);
// flaky:         org.junit.Assert.assertNotNull(nodeStream72);
    }

    @Test
    public void test519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test519");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean15 = false; // flaky: nodeList4.contains((java.lang.Object) false);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean20 = false; // flaky: nodeList19.isEmpty();
        boolean boolean22 = false; // flaky: nodeList19.equals((java.lang.Object) 100);
        int int23 = 0; // flaky: nodeList4.lastIndexOf((java.lang.Object) nodeList19);
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTotalValues woodTotalValues25 = null;
        Interface.AddWood addWood26 = null; // flaky: new Interface.AddWood(woodTable24, woodTotalValues25);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood26.getAll();
        boolean boolean28 = false; // flaky: nodeList27.isEmpty();
        javafx.scene.Node[] nodeArray30 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList31 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList31, nodeArray30);
        Interface.WoodTable woodTable34 = null;
        Interface.WoodTotalValues woodTotalValues35 = null;
        Interface.AddWood addWood36 = null; // flaky: new Interface.AddWood(woodTable34, woodTotalValues35);
        java.util.ArrayList<javafx.scene.Node> nodeList37 = null; // flaky: addWood36.getAll();
        boolean boolean38 = false; // flaky: nodeList31.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList37);
        javafx.scene.Node[] nodeArray40 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList41 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList41, nodeArray40);
        boolean boolean43 = nodeList41.isEmpty();
        int int45 = nodeList41.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable46 = null;
        Interface.WoodTotalValues woodTotalValues47 = null;
        Interface.AddWood addWood48 = null; // flaky: new Interface.AddWood(woodTable46, woodTotalValues47);
        java.util.ArrayList<javafx.scene.Node> nodeList49 = null; // flaky: addWood48.getAll();
        boolean boolean51 = false; // flaky: nodeList49.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node53 = null;
        javafx.scene.Node node54 = null; // flaky: nodeList49.set((int) (byte) 1, node53);
        boolean boolean55 = nodeList41.add(node54);
// flaky:         nodeList31.add(1, node54);
        javafx.scene.Node node57 = null; // flaky: nodeList27.set(0, node54);
        int int58 = 0; // flaky: nodeList4.indexOf((java.lang.Object) node54);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(nodeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList37);
// flaky:         org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(nodeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
// flaky:         org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
// flaky:         org.junit.Assert.assertNotNull(node57);
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test520");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        java.lang.Object[] objArray8 = nodeList1.toArray();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
    }

    @Test
    public void test521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test521");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        boolean boolean33 = false; // flaky: nodeList7.add(node31);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        java.util.stream.Stream<javafx.scene.Node> nodeStream43 = null; // flaky: nodeList41.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator44 = null; // flaky: nodeList41.spliterator();
        javafx.scene.Node[] nodeArray45 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList46 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList46, nodeArray45);
        boolean boolean48 = nodeList46.isEmpty();
        int int50 = nodeList46.lastIndexOf((java.lang.Object) 100);
        boolean boolean51 = nodeList46.isEmpty();
        boolean boolean52 = false; // flaky: nodeList41.contains((java.lang.Object) boolean51);
        boolean boolean53 = false; // flaky: nodeList7.addAll((java.util.Collection<javafx.scene.Node>) nodeList41);
        java.util.stream.Stream<javafx.scene.Node> nodeStream54 = null; // flaky: nodeList41.parallelStream();
        javafx.scene.Node[] nodeArray55 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList56 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList56, nodeArray55);
        Interface.WoodTable woodTable59 = null;
        Interface.WoodTotalValues woodTotalValues60 = null;
        Interface.AddWood addWood61 = null; // flaky: new Interface.AddWood(woodTable59, woodTotalValues60);
        java.util.ArrayList<javafx.scene.Node> nodeList62 = null; // flaky: addWood61.getAll();
        boolean boolean63 = false; // flaky: nodeList56.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList62);
        int int65 = nodeList56.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray67 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList68 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList68, nodeArray67);
        boolean boolean70 = nodeList68.isEmpty();
        int int72 = nodeList68.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable73 = null;
        Interface.WoodTotalValues woodTotalValues74 = null;
        Interface.AddWood addWood75 = null; // flaky: new Interface.AddWood(woodTable73, woodTotalValues74);
        java.util.ArrayList<javafx.scene.Node> nodeList76 = null; // flaky: addWood75.getAll();
        boolean boolean78 = false; // flaky: nodeList76.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node80 = null;
        javafx.scene.Node node81 = null; // flaky: nodeList76.set((int) (byte) 1, node80);
        boolean boolean82 = nodeList68.add(node81);
        javafx.scene.Node node83 = null; // flaky: nodeList56.set((int) (short) 0, node81);
        boolean boolean84 = false; // flaky: nodeList41.add(node83);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream43);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertNotNull(nodeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream54);
        org.junit.Assert.assertNotNull(nodeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList62);
// flaky:         org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(nodeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
// flaky:         org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
// flaky:         org.junit.Assert.assertNotNull(node83);
// flaky:         org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test522");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        javafx.scene.Node[] nodeArray14 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList15 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList15, nodeArray14);
        Interface.WoodTable woodTable18 = null;
        Interface.WoodTotalValues woodTotalValues19 = null;
        Interface.AddWood addWood20 = null; // flaky: new Interface.AddWood(woodTable18, woodTotalValues19);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood20.getAll();
        boolean boolean22 = false; // flaky: nodeList15.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList21);
        int int24 = nodeList15.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray25 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList26 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList26, nodeArray25);
        java.lang.Object obj28 = null;
        boolean boolean29 = nodeList26.remove(obj28);
        boolean boolean30 = nodeList26.isEmpty();
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.lang.String[] strArray34 = nodeList26.toArray(strArray33);
        boolean boolean35 = nodeList15.equals((java.lang.Object) strArray34);
        int int36 = 0; // flaky: nodeList4.lastIndexOf((java.lang.Object) boolean35);
        javafx.scene.Node[] nodeArray37 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList38 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList38, nodeArray37);
        Interface.WoodTable woodTable41 = null;
        Interface.WoodTotalValues woodTotalValues42 = null;
        Interface.AddWood addWood43 = null; // flaky: new Interface.AddWood(woodTable41, woodTotalValues42);
        java.util.ArrayList<javafx.scene.Node> nodeList44 = null; // flaky: addWood43.getAll();
        boolean boolean45 = false; // flaky: nodeList38.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList44);
        int int47 = nodeList38.indexOf((java.lang.Object) true);
        boolean boolean48 = false; // flaky: nodeList4.removeAll((java.util.Collection<javafx.scene.Node>) nodeList38);
        javafx.scene.Node[] nodeArray49 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList50 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList50, nodeArray49);
        boolean boolean52 = nodeList50.isEmpty();
        int int54 = nodeList50.lastIndexOf((java.lang.Object) 100);
        int int56 = nodeList50.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor57 = nodeList50.listIterator();
        int int58 = nodeList50.size();
        boolean boolean59 = nodeList50.isEmpty();
        boolean boolean60 = false; // flaky: nodeList4.removeAll((java.util.Collection<javafx.scene.Node>) nodeList50);
        javafx.scene.Node[] nodeArray62 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList63 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList63, nodeArray62);
        Interface.WoodTable woodTable66 = null;
        Interface.WoodTotalValues woodTotalValues67 = null;
        Interface.AddWood addWood68 = null; // flaky: new Interface.AddWood(woodTable66, woodTotalValues67);
        java.util.ArrayList<javafx.scene.Node> nodeList69 = null; // flaky: addWood68.getAll();
        boolean boolean70 = false; // flaky: nodeList63.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList69);
        java.util.stream.Stream<javafx.scene.Node> nodeStream71 = null; // flaky: nodeList69.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator72 = null; // flaky: nodeList69.spliterator();
        javafx.scene.Node[] nodeArray73 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList74 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList74, nodeArray73);
        java.lang.Object obj76 = null;
        boolean boolean77 = nodeList74.remove(obj76);
        boolean boolean78 = false; // flaky: nodeList69.removeAll((java.util.Collection<javafx.scene.Node>) nodeList74);
        Interface.WoodTable woodTable79 = null;
        Interface.WoodTotalValues woodTotalValues80 = null;
        Interface.AddWood addWood81 = null; // flaky: new Interface.AddWood(woodTable79, woodTotalValues80);
        java.util.ArrayList<javafx.scene.Node> nodeList82 = null; // flaky: addWood81.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList83 = null; // flaky: addWood81.getAll();
        int int84 = 0; // flaky: nodeList83.size();
        boolean boolean85 = false; // flaky: nodeList69.containsAll((java.util.Collection<javafx.scene.Node>) nodeList83);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = nodeList50.addAll((int) (byte) 1, (java.util.Collection<javafx.scene.Node>) nodeList69);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(nodeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(nodeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList44);
// flaky:         org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(nodeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(nodeItor57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(nodeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList69);
// flaky:         org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream71);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator72);
        org.junit.Assert.assertNotNull(nodeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList82);
// flaky:         org.junit.Assert.assertNotNull(nodeList83);
// flaky:         org.junit.Assert.assertTrue("'" + int84 + "' != '" + 5 + "'", int84 == 5);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test523");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        boolean boolean4 = nodeList1.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node6 = nodeList1.get((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test524");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood6.getAll();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        boolean boolean12 = nodeList10.isEmpty();
        int int14 = nodeList10.lastIndexOf((java.lang.Object) 100);
        int int16 = nodeList10.lastIndexOf((java.lang.Object) 10);
        boolean boolean17 = false; // flaky: nodeList8.retainAll((java.util.Collection<javafx.scene.Node>) nodeList10);
        boolean boolean18 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList8);
        java.util.List<javafx.scene.Node> nodeList21 = null; // flaky: nodeList8.subList(0, (int) (byte) 0);
        java.util.stream.Stream<javafx.scene.Node> nodeStream22 = null; // flaky: nodeList21.stream();
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node24 = null; // flaky: nodeList21.get((int) (byte) 10);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertNotNull(nodeStream22);
    }

    @Test
    public void test525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test525");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        boolean boolean13 = nodeList11.isEmpty();
        int int15 = nodeList11.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean21 = false; // flaky: nodeList19.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node23 = null;
        javafx.scene.Node node24 = null; // flaky: nodeList19.set((int) (byte) 1, node23);
        boolean boolean25 = nodeList11.add(node24);
// flaky:         nodeList1.add(1, node24);
        java.lang.Object[] objArray27 = nodeList1.toArray();
        Interface.WoodTable woodTable28 = null;
        Interface.WoodTable woodTable29 = null;
        Interface.WoodTotalValues woodTotalValues30 = null; // flaky: new Interface.WoodTotalValues(woodTable29);
        java.util.ArrayList<javafx.scene.Node> nodeList31 = null; // flaky: woodTotalValues30.getAll();
        Interface.AddWood addWood32 = null; // flaky: new Interface.AddWood(woodTable28, woodTotalValues30);
        java.util.ArrayList<javafx.scene.Node> nodeList33 = null; // flaky: addWood32.getAll();
        boolean boolean34 = false; // flaky: nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList33);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null; // flaky: new Interface.WoodTotalValues(woodTable35);
        java.util.ArrayList<javafx.scene.Node> nodeList37 = null; // flaky: woodTotalValues36.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: woodTotalValues36.getAll();
// flaky:         woodTotalValues36.redraw((double) 2, (double) 5);
// flaky:         woodTotalValues36.redraw((double) (byte) 1, (double) 1);
        java.util.ArrayList<javafx.scene.Node> nodeList45 = null; // flaky: woodTotalValues36.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList46 = null; // flaky: woodTotalValues36.getAll();
// flaky:         woodTotalValues36.redraw((double) (short) 1, 1.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList50 = null; // flaky: woodTotalValues36.getAll();
        boolean boolean51 = nodeList1.remove((java.lang.Object) nodeList50);
        boolean boolean52 = nodeList1.isEmpty();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objArray27);
// flaky:         org.junit.Assert.assertNotNull(nodeList31);
// flaky:         org.junit.Assert.assertNotNull(nodeList33);
// flaky:         org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList37);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
// flaky:         org.junit.Assert.assertNotNull(nodeList45);
// flaky:         org.junit.Assert.assertNotNull(nodeList46);
// flaky:         org.junit.Assert.assertNotNull(nodeList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test526");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: woodTotalValues2.getAll();
// flaky:         woodTotalValues2.redraw((double) 2, (double) 5);
// flaky:         woodTotalValues2.redraw((double) (byte) 1, (double) 1);
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: woodTotalValues2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: woodTotalValues2.getAll();
// flaky:         woodTotalValues2.redraw((double) (short) 1, 1.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList16 = null; // flaky: woodTotalValues2.getAll();
        Interface.AddWood addWood17 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
        java.util.ArrayList<javafx.scene.Node> nodeList18 = null; // flaky: woodTotalValues2.getAll();
        Interface.WoodTable woodTable20 = null;
        Interface.WoodTotalValues woodTotalValues21 = null;
        Interface.AddWood addWood22 = null; // flaky: new Interface.AddWood(woodTable20, woodTotalValues21);
        java.util.ArrayList<javafx.scene.Node> nodeList23 = null; // flaky: addWood22.getAll();
// flaky:         addWood22.redraw((double) 10.0f, (double) 0L);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood22.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList28 = null; // flaky: addWood22.getAll();
        Interface.WoodTable woodTable30 = null;
        Interface.WoodTotalValues woodTotalValues31 = null;
        Interface.AddWood addWood32 = null; // flaky: new Interface.AddWood(woodTable30, woodTotalValues31);
        java.util.ArrayList<javafx.scene.Node> nodeList33 = null; // flaky: addWood32.getAll();
        boolean boolean34 = false; // flaky: nodeList33.isEmpty();
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        boolean boolean39 = false; // flaky: nodeList38.isEmpty();
        javafx.scene.Node[] nodeArray41 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList42 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList42, nodeArray41);
        Interface.WoodTable woodTable45 = null;
        Interface.WoodTotalValues woodTotalValues46 = null;
        Interface.AddWood addWood47 = null; // flaky: new Interface.AddWood(woodTable45, woodTotalValues46);
        java.util.ArrayList<javafx.scene.Node> nodeList48 = null; // flaky: addWood47.getAll();
        boolean boolean49 = false; // flaky: nodeList42.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList48);
        javafx.scene.Node[] nodeArray51 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList52 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList52, nodeArray51);
        boolean boolean54 = nodeList52.isEmpty();
        int int56 = nodeList52.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable57 = null;
        Interface.WoodTotalValues woodTotalValues58 = null;
        Interface.AddWood addWood59 = null; // flaky: new Interface.AddWood(woodTable57, woodTotalValues58);
        java.util.ArrayList<javafx.scene.Node> nodeList60 = null; // flaky: addWood59.getAll();
        boolean boolean62 = false; // flaky: nodeList60.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node64 = null;
        javafx.scene.Node node65 = null; // flaky: nodeList60.set((int) (byte) 1, node64);
        boolean boolean66 = nodeList52.add(node65);
// flaky:         nodeList42.add(1, node65);
        javafx.scene.Node node68 = null; // flaky: nodeList38.set(0, node65);
        boolean boolean69 = false; // flaky: nodeList33.add(node68);
        javafx.scene.Node node70 = null; // flaky: nodeList28.set((int) (short) 1, node68);
        javafx.scene.Node node71 = null; // flaky: nodeList18.set(0, node68);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
// flaky:         org.junit.Assert.assertNotNull(nodeList16);
// flaky:         org.junit.Assert.assertNotNull(nodeList18);
// flaky:         org.junit.Assert.assertNotNull(nodeList23);
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
// flaky:         org.junit.Assert.assertNotNull(nodeList28);
// flaky:         org.junit.Assert.assertNotNull(nodeList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(nodeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList48);
// flaky:         org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(nodeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
// flaky:         org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
// flaky:         org.junit.Assert.assertNotNull(node68);
// flaky:         org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
// flaky:         org.junit.Assert.assertNotNull(node70);
// flaky:         org.junit.Assert.assertNotNull(node71);
    }

    @Test
    public void test527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test527");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood6.getAll();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        boolean boolean12 = nodeList10.isEmpty();
        int int14 = nodeList10.lastIndexOf((java.lang.Object) 100);
        int int16 = nodeList10.lastIndexOf((java.lang.Object) 10);
        boolean boolean17 = false; // flaky: nodeList8.retainAll((java.util.Collection<javafx.scene.Node>) nodeList10);
        boolean boolean18 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList8);
        java.util.List<javafx.scene.Node> nodeList21 = null; // flaky: nodeList8.subList(0, (int) (byte) 0);
        java.util.stream.Stream<javafx.scene.Node> nodeStream22 = null; // flaky: nodeList21.parallelStream();
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node[] nodeArray30 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList31 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList31, nodeArray30);
        boolean boolean33 = nodeList31.isEmpty();
        int int35 = nodeList31.lastIndexOf((java.lang.Object) 100);
        int int37 = nodeList31.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList42 = null; // flaky: addWood40.getAll();
        javafx.scene.Node[] nodeArray43 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList44 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList44, nodeArray43);
        boolean boolean46 = nodeList44.isEmpty();
        int int48 = nodeList44.lastIndexOf((java.lang.Object) 100);
        int int50 = nodeList44.lastIndexOf((java.lang.Object) 10);
        boolean boolean51 = false; // flaky: nodeList42.retainAll((java.util.Collection<javafx.scene.Node>) nodeList44);
        boolean boolean52 = nodeList31.containsAll((java.util.Collection<javafx.scene.Node>) nodeList44);
        boolean boolean53 = false; // flaky: nodeList26.addAll(1, (java.util.Collection<javafx.scene.Node>) nodeList31);
        boolean boolean54 = false; // flaky: nodeList21.contains((java.lang.Object) nodeList26);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertNotNull(nodeStream22);
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(nodeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertNotNull(nodeList42);
        org.junit.Assert.assertNotNull(nodeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test528");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
// flaky:         woodTotalValues2.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList6 = null; // flaky: woodTotalValues2.getAll();
// flaky:         woodTotalValues2.redraw(10.0d, 1.0d);
        Interface.AddWood addWood10 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
        // The following exception was thrown during execution in test generation
        try {
            woodTotalValues2.renew();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList6);
    }

    @Test
    public void test529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test529");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
        int int4 = 0; // flaky: nodeList2.indexOf((java.lang.Object) (byte) 0);
        java.lang.Object[] objArray5 = null; // flaky: nodeList2.toArray();
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        boolean boolean12 = false; // flaky: nodeList2.addAll((java.util.Collection<javafx.scene.Node>) nodeList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<javafx.scene.Node> nodeItor14 = null; // flaky: nodeList9.listIterator((int) ' ');
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
// flaky:         org.junit.Assert.assertNotNull(objArray5);
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test530");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList1.equals((java.lang.Object) nodeList6);
        java.util.stream.Stream<javafx.scene.Node> nodeStream12 = nodeList1.stream();
        javafx.css.Styleable[][][] styleableArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            javafx.css.Styleable[][][] styleableArray14 = nodeList1.toArray(styleableArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(nodeStream12);
    }

    @Test
    public void test531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test531");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTotalValues woodTotalValues3 = null; // flaky: new Interface.WoodTotalValues(woodTable2);
        Interface.AddWood addWood4 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues3);
        Interface.AddWood addWood5 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues3);
// flaky:         woodTotalValues3.redraw((double) 1L, (double) '#');
    }

    @Test
    public void test532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test532");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        boolean boolean13 = nodeList11.isEmpty();
        int int15 = nodeList11.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean21 = false; // flaky: nodeList19.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node23 = null;
        javafx.scene.Node node24 = null; // flaky: nodeList19.set((int) (byte) 1, node23);
        boolean boolean25 = nodeList11.add(node24);
// flaky:         nodeList1.add(1, node24);
        java.util.stream.Stream<javafx.scene.Node> nodeStream27 = nodeList1.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<javafx.scene.Node> nodeList30 = nodeList1.subList((int) '#', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeStream27);
    }

    @Test
    public void test533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test533");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTotalValues woodTotalValues3 = null; // flaky: new Interface.WoodTotalValues(woodTable2);
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: woodTotalValues3.getAll();
        Interface.AddWood addWood5 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues3);
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues3);
// flaky:         addWood6.redraw((double) (-1), (double) 5);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
    }

    @Test
    public void test534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test534");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        boolean boolean33 = false; // flaky: nodeList7.add(node31);
        Interface.WoodTable woodTable34 = null;
        Interface.WoodTotalValues woodTotalValues35 = null;
        Interface.AddWood addWood36 = null; // flaky: new Interface.AddWood(woodTable34, woodTotalValues35);
        java.util.ArrayList<javafx.scene.Node> nodeList37 = null; // flaky: addWood36.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood36.getAll();
// flaky:         addWood36.redraw((double) 0, (double) (byte) 0);
        int int42 = 0; // flaky: nodeList7.lastIndexOf((java.lang.Object) 0);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList37);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test535");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        javafx.scene.Node[] nodeArray14 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList15 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList15, nodeArray14);
        Interface.WoodTable woodTable18 = null;
        Interface.WoodTotalValues woodTotalValues19 = null;
        Interface.AddWood addWood20 = null; // flaky: new Interface.AddWood(woodTable18, woodTotalValues19);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood20.getAll();
        boolean boolean22 = false; // flaky: nodeList15.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList21);
        int int24 = nodeList15.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray25 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList26 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList26, nodeArray25);
        java.lang.Object obj28 = null;
        boolean boolean29 = nodeList26.remove(obj28);
        boolean boolean30 = nodeList26.isEmpty();
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.lang.String[] strArray34 = nodeList26.toArray(strArray33);
        boolean boolean35 = nodeList15.equals((java.lang.Object) strArray34);
        int int36 = 0; // flaky: nodeList4.lastIndexOf((java.lang.Object) boolean35);
        javafx.scene.Node[] nodeArray37 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList38 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList38, nodeArray37);
        Interface.WoodTable woodTable41 = null;
        Interface.WoodTotalValues woodTotalValues42 = null;
        Interface.AddWood addWood43 = null; // flaky: new Interface.AddWood(woodTable41, woodTotalValues42);
        java.util.ArrayList<javafx.scene.Node> nodeList44 = null; // flaky: addWood43.getAll();
        boolean boolean45 = false; // flaky: nodeList38.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList44);
        int int47 = nodeList38.indexOf((java.lang.Object) true);
        boolean boolean48 = false; // flaky: nodeList4.removeAll((java.util.Collection<javafx.scene.Node>) nodeList38);
// flaky:         nodeList4.clear();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(nodeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(nodeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList44);
// flaky:         org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test536");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList18 = null; // flaky: addWood16.getAll();
        boolean boolean19 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList18);
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        java.lang.Object obj23 = null;
        boolean boolean24 = nodeList21.remove(obj23);
        javafx.scene.Node node25 = null;
        boolean boolean26 = nodeList21.add(node25);
        java.util.ListIterator<javafx.scene.Node> nodeItor27 = nodeList21.listIterator();
        boolean boolean28 = nodeList6.removeAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        java.lang.Class<?> wildcardClass29 = nodeList21.getClass();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList18);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(nodeItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test537");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
// flaky:         addWood16.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood16.getAll();
        boolean boolean22 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        javafx.scene.Node[] nodeArray23 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList24 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList24, nodeArray23);
        boolean boolean26 = nodeList24.isEmpty();
        boolean boolean27 = nodeList24.isEmpty();
        nodeList24.clear();
        boolean boolean29 = nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList24);
        int int30 = nodeList24.size();
        javafx.scene.Node[] nodeArray31 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList32 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList32, nodeArray31);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        boolean boolean39 = false; // flaky: nodeList32.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList38);
        javafx.scene.Node[] nodeArray41 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList42 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList42, nodeArray41);
        boolean boolean44 = nodeList42.isEmpty();
        int int46 = nodeList42.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable47 = null;
        Interface.WoodTotalValues woodTotalValues48 = null;
        Interface.AddWood addWood49 = null; // flaky: new Interface.AddWood(woodTable47, woodTotalValues48);
        java.util.ArrayList<javafx.scene.Node> nodeList50 = null; // flaky: addWood49.getAll();
        boolean boolean52 = false; // flaky: nodeList50.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node54 = null;
        javafx.scene.Node node55 = null; // flaky: nodeList50.set((int) (byte) 1, node54);
        boolean boolean56 = nodeList42.add(node55);
// flaky:         nodeList32.add(1, node55);
        boolean boolean58 = nodeList24.add(node55);
        javafx.scene.Node node60 = null;
        nodeList24.add((int) (byte) 0, node60);
        java.util.Iterator<javafx.scene.Node> nodeItor62 = nodeList24.iterator();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(nodeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(nodeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(nodeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(nodeItor62);
    }

    @Test
    public void test538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test538");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        javafx.scene.Node[] nodeArray14 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList15 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList15, nodeArray14);
        boolean boolean17 = nodeList15.isEmpty();
        int int19 = nodeList15.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable20 = null;
        Interface.WoodTotalValues woodTotalValues21 = null;
        Interface.AddWood addWood22 = null; // flaky: new Interface.AddWood(woodTable20, woodTotalValues21);
        java.util.ArrayList<javafx.scene.Node> nodeList23 = null; // flaky: addWood22.getAll();
        boolean boolean25 = false; // flaky: nodeList23.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node27 = null;
        javafx.scene.Node node28 = null; // flaky: nodeList23.set((int) (byte) 1, node27);
        boolean boolean29 = nodeList15.add(node28);
        java.util.stream.Stream<javafx.scene.Node> nodeStream30 = nodeList15.stream();
        boolean boolean31 = nodeList6.equals((java.lang.Object) nodeStream30);
        boolean boolean32 = nodeList6.isEmpty();
        Interface.WoodTable woodTable33 = null;
        Interface.WoodTotalValues woodTotalValues34 = null; // flaky: new Interface.WoodTotalValues(woodTable33);
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: woodTotalValues34.getAll();
        Interface.WoodTable woodTable36 = null;
        Interface.WoodTotalValues woodTotalValues37 = null;
        Interface.AddWood addWood38 = null; // flaky: new Interface.AddWood(woodTable36, woodTotalValues37);
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood38.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList40 = null; // flaky: addWood38.getAll();
        int int41 = 0; // flaky: nodeList35.indexOf((java.lang.Object) addWood38);
        javafx.scene.Node[] nodeArray42 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList43 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList43, nodeArray42);
        boolean boolean45 = nodeList43.isEmpty();
        int int47 = nodeList43.lastIndexOf((java.lang.Object) 100);
        int int49 = nodeList43.lastIndexOf((java.lang.Object) 10);
        boolean boolean50 = nodeList43.isEmpty();
        boolean boolean51 = false; // flaky: nodeList35.contains((java.lang.Object) nodeList43);
        boolean boolean52 = nodeList6.remove((java.lang.Object) nodeList35);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(nodeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(nodeStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
// flaky:         org.junit.Assert.assertNotNull(nodeList40);
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(nodeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test539");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor8 = nodeList1.listIterator();
        int int9 = nodeList1.size();
        boolean boolean10 = nodeList1.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream11 = nodeList1.parallelStream();
        javafx.scene.Node[] nodeArray12 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList13 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList13, nodeArray12);
        boolean boolean15 = nodeList13.isEmpty();
        int int17 = nodeList13.lastIndexOf((java.lang.Object) 100);
        int int19 = nodeList13.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable20 = null;
        Interface.WoodTotalValues woodTotalValues21 = null;
        Interface.AddWood addWood22 = null; // flaky: new Interface.AddWood(woodTable20, woodTotalValues21);
        java.util.ArrayList<javafx.scene.Node> nodeList23 = null; // flaky: addWood22.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood22.getAll();
        javafx.scene.Node[] nodeArray25 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList26 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList26, nodeArray25);
        boolean boolean28 = nodeList26.isEmpty();
        int int30 = nodeList26.lastIndexOf((java.lang.Object) 100);
        int int32 = nodeList26.lastIndexOf((java.lang.Object) 10);
        boolean boolean33 = false; // flaky: nodeList24.retainAll((java.util.Collection<javafx.scene.Node>) nodeList26);
        boolean boolean34 = nodeList13.containsAll((java.util.Collection<javafx.scene.Node>) nodeList26);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        boolean boolean40 = false; // flaky: nodeList38.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node42 = null;
        javafx.scene.Node node43 = null; // flaky: nodeList38.set((int) (byte) 1, node42);
        boolean boolean44 = false; // flaky: nodeList13.removeAll((java.util.Collection<javafx.scene.Node>) nodeList38);
        int int45 = nodeList1.lastIndexOf((java.lang.Object) nodeList13);
        Interface.WoodTable woodTable46 = null;
        Interface.WoodTotalValues woodTotalValues47 = null; // flaky: new Interface.WoodTotalValues(woodTable46);
        java.util.ArrayList<javafx.scene.Node> nodeList48 = null; // flaky: woodTotalValues47.getAll();
        int int49 = nodeList13.lastIndexOf((java.lang.Object) woodTotalValues47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<javafx.scene.Node> nodeList52 = nodeList13.subList((int) (byte) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(nodeItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(nodeStream11);
        org.junit.Assert.assertNotNull(nodeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList23);
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertNotNull(nodeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test540");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = nodeList6.remove(obj8);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        boolean boolean18 = false; // flaky: nodeList11.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList17);
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        boolean boolean23 = nodeList21.isEmpty();
        int int25 = nodeList21.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        boolean boolean31 = false; // flaky: nodeList29.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node33 = null;
        javafx.scene.Node node34 = null; // flaky: nodeList29.set((int) (byte) 1, node33);
        boolean boolean35 = nodeList21.add(node34);
// flaky:         nodeList11.add(1, node34);
        boolean boolean37 = nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList11);
        boolean boolean38 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList11);
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        boolean boolean42 = nodeList40.isEmpty();
        boolean boolean43 = nodeList40.isEmpty();
        nodeList40.clear();
        java.util.ListIterator<javafx.scene.Node> nodeItor46 = nodeList40.listIterator(0);
        Interface.WoodTable woodTable47 = null;
        Interface.WoodTotalValues woodTotalValues48 = null;
        Interface.AddWood addWood49 = null; // flaky: new Interface.AddWood(woodTable47, woodTotalValues48);
        java.util.ArrayList<javafx.scene.Node> nodeList50 = null; // flaky: addWood49.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList51 = null; // flaky: addWood49.getAll();
        javafx.scene.Node[] nodeArray52 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList53 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList53, nodeArray52);
        boolean boolean55 = nodeList53.isEmpty();
        int int57 = nodeList53.lastIndexOf((java.lang.Object) 100);
        int int59 = nodeList53.lastIndexOf((java.lang.Object) 10);
        boolean boolean60 = false; // flaky: nodeList51.retainAll((java.util.Collection<javafx.scene.Node>) nodeList53);
        boolean boolean62 = false; // flaky: nodeList51.contains((java.lang.Object) false);
        Interface.WoodTable woodTable63 = null;
        Interface.WoodTotalValues woodTotalValues64 = null;
        Interface.AddWood addWood65 = null; // flaky: new Interface.AddWood(woodTable63, woodTotalValues64);
        java.util.ArrayList<javafx.scene.Node> nodeList66 = null; // flaky: addWood65.getAll();
        boolean boolean67 = false; // flaky: nodeList66.isEmpty();
        boolean boolean69 = false; // flaky: nodeList66.equals((java.lang.Object) 100);
        int int70 = 0; // flaky: nodeList51.lastIndexOf((java.lang.Object) nodeList66);
        java.lang.Object[] objArray71 = null; // flaky: nodeList51.toArray();
        int int72 = nodeList40.lastIndexOf((java.lang.Object) objArray71);
        java.util.stream.Stream<javafx.scene.Node> nodeStream73 = nodeList40.stream();
        nodeList40.clear();
        boolean boolean75 = nodeList11.retainAll((java.util.Collection<javafx.scene.Node>) nodeList40);
        java.util.ListIterator<javafx.scene.Node> nodeItor76 = nodeList40.listIterator();
        javafx.scene.Node[] nodeArray77 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList78 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList78, nodeArray77);
        boolean boolean80 = nodeList78.isEmpty();
        int int82 = nodeList78.lastIndexOf((java.lang.Object) 100);
        boolean boolean83 = nodeList78.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream84 = nodeList78.stream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator85 = nodeList78.spliterator();
        java.util.stream.Stream<javafx.scene.Node> nodeStream86 = nodeList78.parallelStream();
        boolean boolean87 = nodeList40.contains((java.lang.Object) nodeStream86);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(nodeItor46);
// flaky:         org.junit.Assert.assertNotNull(nodeList50);
// flaky:         org.junit.Assert.assertNotNull(nodeList51);
        org.junit.Assert.assertNotNull(nodeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
// flaky:         org.junit.Assert.assertNotNull(objArray71);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(nodeStream73);
// flaky:         org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(nodeItor76);
        org.junit.Assert.assertNotNull(nodeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(nodeStream84);
        org.junit.Assert.assertNotNull(nodeSpliterator85);
        org.junit.Assert.assertNotNull(nodeStream86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test541");
        Interface.WoodTable woodTable0 = null;
        javafx.scene.Node[] nodeArray1 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList2 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList2, nodeArray1);
        boolean boolean4 = nodeList2.isEmpty();
        int int6 = nodeList2.lastIndexOf((java.lang.Object) 100);
        int int8 = nodeList2.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor9 = nodeList2.listIterator();
        int int10 = nodeList2.size();
        boolean boolean11 = nodeList2.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream12 = nodeList2.parallelStream();
        javafx.scene.Node[] nodeArray13 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList14 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList14, nodeArray13);
        boolean boolean16 = nodeList14.isEmpty();
        int int18 = nodeList14.lastIndexOf((java.lang.Object) 100);
        int int20 = nodeList14.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable21 = null;
        Interface.WoodTotalValues woodTotalValues22 = null;
        Interface.AddWood addWood23 = null; // flaky: new Interface.AddWood(woodTable21, woodTotalValues22);
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood23.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList25 = null; // flaky: addWood23.getAll();
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        boolean boolean29 = nodeList27.isEmpty();
        int int31 = nodeList27.lastIndexOf((java.lang.Object) 100);
        int int33 = nodeList27.lastIndexOf((java.lang.Object) 10);
        boolean boolean34 = false; // flaky: nodeList25.retainAll((java.util.Collection<javafx.scene.Node>) nodeList27);
        boolean boolean35 = nodeList14.containsAll((java.util.Collection<javafx.scene.Node>) nodeList27);
        Interface.WoodTable woodTable36 = null;
        Interface.WoodTotalValues woodTotalValues37 = null;
        Interface.AddWood addWood38 = null; // flaky: new Interface.AddWood(woodTable36, woodTotalValues37);
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood38.getAll();
        boolean boolean41 = false; // flaky: nodeList39.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node43 = null;
        javafx.scene.Node node44 = null; // flaky: nodeList39.set((int) (byte) 1, node43);
        boolean boolean45 = false; // flaky: nodeList14.removeAll((java.util.Collection<javafx.scene.Node>) nodeList39);
        int int46 = nodeList2.lastIndexOf((java.lang.Object) nodeList14);
        Interface.WoodTable woodTable47 = null;
        Interface.WoodTotalValues woodTotalValues48 = null; // flaky: new Interface.WoodTotalValues(woodTable47);
        java.util.ArrayList<javafx.scene.Node> nodeList49 = null; // flaky: woodTotalValues48.getAll();
        int int50 = nodeList14.lastIndexOf((java.lang.Object) woodTotalValues48);
        Interface.AddWood addWood51 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues48);
// flaky:         addWood51.redraw((double) (short) -1, (double) (short) -1);
        org.junit.Assert.assertNotNull(nodeArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(nodeItor9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(nodeStream12);
        org.junit.Assert.assertNotNull(nodeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
// flaky:         org.junit.Assert.assertNotNull(nodeList25);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
// flaky:         org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test542");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTotalValues woodTotalValues3 = null; // flaky: new Interface.WoodTotalValues(woodTable2);
        Interface.AddWood addWood4 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues3);
        Interface.AddWood addWood5 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues3);
        java.util.ArrayList<javafx.scene.Node> nodeList6 = null; // flaky: addWood5.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood5.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood5.getAll();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<javafx.scene.Node> nodeItor10 = null; // flaky: nodeList8.listIterator((int) (short) -1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList6);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
    }

    @Test
    public void test543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test543");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        Interface.WoodTable woodTable9 = null;
        Interface.WoodTotalValues woodTotalValues10 = null;
        Interface.AddWood addWood11 = null; // flaky: new Interface.AddWood(woodTable9, woodTotalValues10);
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: addWood11.getAll();
        boolean boolean13 = false; // flaky: nodeList6.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray15 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList16 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList16, nodeArray15);
        boolean boolean18 = nodeList16.isEmpty();
        int int20 = nodeList16.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable21 = null;
        Interface.WoodTotalValues woodTotalValues22 = null;
        Interface.AddWood addWood23 = null; // flaky: new Interface.AddWood(woodTable21, woodTotalValues22);
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood23.getAll();
        boolean boolean26 = false; // flaky: nodeList24.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node28 = null;
        javafx.scene.Node node29 = null; // flaky: nodeList24.set((int) (byte) 1, node28);
        boolean boolean30 = nodeList16.add(node29);
// flaky:         nodeList6.add(1, node29);
        boolean boolean32 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        javafx.scene.Node[] nodeArray33 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList34 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList34, nodeArray33);
        Interface.WoodTable woodTable37 = null;
        Interface.WoodTotalValues woodTotalValues38 = null;
        Interface.AddWood addWood39 = null; // flaky: new Interface.AddWood(woodTable37, woodTotalValues38);
        java.util.ArrayList<javafx.scene.Node> nodeList40 = null; // flaky: addWood39.getAll();
        boolean boolean41 = false; // flaky: nodeList34.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList40);
        javafx.scene.Node[] nodeArray43 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList44 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList44, nodeArray43);
        boolean boolean46 = nodeList44.isEmpty();
        int int48 = nodeList44.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable49 = null;
        Interface.WoodTotalValues woodTotalValues50 = null;
        Interface.AddWood addWood51 = null; // flaky: new Interface.AddWood(woodTable49, woodTotalValues50);
        java.util.ArrayList<javafx.scene.Node> nodeList52 = null; // flaky: addWood51.getAll();
        boolean boolean54 = false; // flaky: nodeList52.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node56 = null;
        javafx.scene.Node node57 = null; // flaky: nodeList52.set((int) (byte) 1, node56);
        boolean boolean58 = nodeList44.add(node57);
// flaky:         nodeList34.add(1, node57);
        java.util.stream.Stream<javafx.scene.Node> nodeStream60 = nodeList34.stream();
        boolean boolean61 = nodeList34.isEmpty();
        int int62 = nodeList6.lastIndexOf((java.lang.Object) nodeList34);
        java.util.stream.Stream<javafx.scene.Node> nodeStream63 = nodeList34.parallelStream();
        java.util.function.UnaryOperator<javafx.scene.Node> nodeUnaryOperator64 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList34.replaceAll(nodeUnaryOperator64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(nodeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
// flaky:         org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(nodeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList40);
// flaky:         org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(nodeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(nodeStream60);
// flaky:         org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(nodeStream63);
    }

    @Test
    public void test544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test544");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood18.getAll();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        int int28 = nodeList22.lastIndexOf((java.lang.Object) 10);
        boolean boolean29 = false; // flaky: nodeList20.retainAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        boolean boolean30 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        Interface.WoodTable woodTable31 = null;
        Interface.WoodTotalValues woodTotalValues32 = null;
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable31, woodTotalValues32);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList36 = null; // flaky: addWood33.getAll();
        boolean boolean37 = false; // flaky: nodeList22.addAll((java.util.Collection<javafx.scene.Node>) nodeList36);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator38 = nodeList22.spliterator();
        java.lang.Class<?> wildcardClass39 = nodeList22.getClass();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertNotNull(nodeList36);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test545");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood18.getAll();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        int int28 = nodeList22.lastIndexOf((java.lang.Object) 10);
        boolean boolean29 = false; // flaky: nodeList20.retainAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        boolean boolean30 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        Interface.WoodTable woodTable31 = null;
        Interface.WoodTotalValues woodTotalValues32 = null;
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable31, woodTotalValues32);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList36 = null; // flaky: addWood33.getAll();
        boolean boolean37 = false; // flaky: nodeList22.addAll((java.util.Collection<javafx.scene.Node>) nodeList36);
        int int38 = nodeList22.size();
        java.util.stream.Stream<javafx.scene.Node> nodeStream39 = nodeList22.stream();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertNotNull(nodeList36);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
        org.junit.Assert.assertNotNull(nodeStream39);
    }

    @Test
    public void test546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test546");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        boolean boolean33 = false; // flaky: nodeList7.add(node31);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        java.util.stream.Stream<javafx.scene.Node> nodeStream43 = null; // flaky: nodeList41.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator44 = null; // flaky: nodeList41.spliterator();
        javafx.scene.Node[] nodeArray45 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList46 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList46, nodeArray45);
        boolean boolean48 = nodeList46.isEmpty();
        int int50 = nodeList46.lastIndexOf((java.lang.Object) 100);
        boolean boolean51 = nodeList46.isEmpty();
        boolean boolean52 = false; // flaky: nodeList41.contains((java.lang.Object) boolean51);
        boolean boolean53 = false; // flaky: nodeList7.addAll((java.util.Collection<javafx.scene.Node>) nodeList41);
        int int54 = 0; // flaky: nodeList7.size();
        javafx.scene.Node node56 = null; // flaky: nodeList7.remove(2);
        javafx.scene.Node node58 = null;
        // The following exception was thrown during execution in test generation
        try {
// flaky:             nodeList7.add((int) (short) -1, node58);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream43);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertNotNull(nodeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 11 + "'", int54 == 11);
// flaky:         org.junit.Assert.assertNotNull(node56);
    }

    @Test
    public void test547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test547");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) 10.0f, (double) 0L);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood2.getAll();
        int int9 = 0; // flaky: nodeList8.size();
        Interface.WoodTable woodTable11 = null;
        Interface.WoodTotalValues woodTotalValues12 = null;
        Interface.AddWood addWood13 = null; // flaky: new Interface.AddWood(woodTable11, woodTotalValues12);
        java.util.ArrayList<javafx.scene.Node> nodeList14 = null; // flaky: addWood13.getAll();
        boolean boolean15 = false; // flaky: nodeList14.isEmpty();
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        int int44 = nodeList35.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray46 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList47 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList47, nodeArray46);
        boolean boolean49 = nodeList47.isEmpty();
        int int51 = nodeList47.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable52 = null;
        Interface.WoodTotalValues woodTotalValues53 = null;
        Interface.AddWood addWood54 = null; // flaky: new Interface.AddWood(woodTable52, woodTotalValues53);
        java.util.ArrayList<javafx.scene.Node> nodeList55 = null; // flaky: addWood54.getAll();
        boolean boolean57 = false; // flaky: nodeList55.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node59 = null;
        javafx.scene.Node node60 = null; // flaky: nodeList55.set((int) (byte) 1, node59);
        boolean boolean61 = nodeList47.add(node60);
        javafx.scene.Node node62 = null; // flaky: nodeList35.set((int) (short) 0, node60);
        javafx.scene.Node node63 = nodeList18.set((int) (byte) 0, node60);
// flaky:         nodeList14.add((int) (short) 0, node63);
        boolean boolean65 = false; // flaky: nodeList8.addAll((int) (byte) 0, (java.util.Collection<javafx.scene.Node>) nodeList14);
        int int66 = 0; // flaky: nodeList8.size();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
// flaky:         org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(nodeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
// flaky:         org.junit.Assert.assertNotNull(node62);
// flaky:         org.junit.Assert.assertNotNull(node63);
// flaky:         org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int66 + "' != '" + 11 + "'", int66 == 11);
    }

    @Test
    public void test548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test548");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
        Interface.AddWood addWood3 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: woodTotalValues2.getAll();
        boolean boolean5 = false; // flaky: nodeList4.isEmpty();
        javafx.scene.Node[] nodeArray7 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList8 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList8, nodeArray7);
        Interface.WoodTable woodTable11 = null;
        Interface.WoodTotalValues woodTotalValues12 = null;
        Interface.AddWood addWood13 = null; // flaky: new Interface.AddWood(woodTable11, woodTotalValues12);
        java.util.ArrayList<javafx.scene.Node> nodeList14 = null; // flaky: addWood13.getAll();
        boolean boolean15 = false; // flaky: nodeList8.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList14);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
// flaky:         nodeList8.add(1, node31);
        java.util.Iterator<javafx.scene.Node> nodeItor34 = nodeList8.iterator();
        javafx.scene.Node node36 = null; // flaky: nodeList8.remove((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
// flaky:             nodeList4.add(100, node36);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(nodeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList14);
// flaky:         org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(nodeItor34);
// flaky:         org.junit.Assert.assertNotNull(node36);
    }

    @Test
    public void test549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test549");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood6.getAll();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        boolean boolean12 = nodeList10.isEmpty();
        int int14 = nodeList10.lastIndexOf((java.lang.Object) 100);
        int int16 = nodeList10.lastIndexOf((java.lang.Object) 10);
        boolean boolean17 = false; // flaky: nodeList8.retainAll((java.util.Collection<javafx.scene.Node>) nodeList10);
        boolean boolean18 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList8);
        boolean boolean19 = false; // flaky: nodeList8.isEmpty();
        boolean boolean20 = false; // flaky: nodeList8.isEmpty();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test550");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean15 = false; // flaky: nodeList4.contains((java.lang.Object) false);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean20 = false; // flaky: nodeList19.isEmpty();
        boolean boolean22 = false; // flaky: nodeList19.equals((java.lang.Object) 100);
        int int23 = 0; // flaky: nodeList4.lastIndexOf((java.lang.Object) nodeList19);
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTable woodTable25 = null;
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTable woodTable27 = null;
        Interface.WoodTable woodTable28 = null;
        Interface.WoodTotalValues woodTotalValues29 = null; // flaky: new Interface.WoodTotalValues(woodTable28);
        Interface.AddWood addWood30 = null; // flaky: new Interface.AddWood(woodTable27, woodTotalValues29);
// flaky:         woodTotalValues29.redraw(0.0d, (double) 0L);
        Interface.AddWood addWood34 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues29);
        Interface.AddWood addWood35 = null; // flaky: new Interface.AddWood(woodTable25, woodTotalValues29);
        Interface.AddWood addWood36 = null; // flaky: new Interface.AddWood(woodTable24, woodTotalValues29);
        boolean boolean37 = false; // flaky: nodeList4.remove((java.lang.Object) addWood36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood36.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood36.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList40 = null; // flaky: addWood36.getAll();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
// flaky:         org.junit.Assert.assertNotNull(nodeList40);
    }

    @Test
    public void test551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test551");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        boolean boolean6 = nodeList1.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream7 = nodeList1.stream();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = nodeList10.remove(obj12);
        javafx.scene.Node[] nodeArray14 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList15 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList15, nodeArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = nodeList15.remove(obj17);
        javafx.scene.Node[] nodeArray19 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList20 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList20, nodeArray19);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean27 = false; // flaky: nodeList20.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList26);
        javafx.scene.Node[] nodeArray29 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList30 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList30, nodeArray29);
        boolean boolean32 = nodeList30.isEmpty();
        int int34 = nodeList30.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        boolean boolean40 = false; // flaky: nodeList38.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node42 = null;
        javafx.scene.Node node43 = null; // flaky: nodeList38.set((int) (byte) 1, node42);
        boolean boolean44 = nodeList30.add(node43);
// flaky:         nodeList20.add(1, node43);
        boolean boolean46 = nodeList15.retainAll((java.util.Collection<javafx.scene.Node>) nodeList20);
        boolean boolean47 = nodeList10.retainAll((java.util.Collection<javafx.scene.Node>) nodeList20);
        boolean boolean48 = nodeList1.addAll((int) (short) 0, (java.util.Collection<javafx.scene.Node>) nodeList20);
        Interface.WoodTable woodTable49 = null;
        Interface.WoodTotalValues woodTotalValues50 = null;
        Interface.AddWood addWood51 = null; // flaky: new Interface.AddWood(woodTable49, woodTotalValues50);
        java.util.ArrayList<javafx.scene.Node> nodeList52 = null; // flaky: addWood51.getAll();
        boolean boolean54 = false; // flaky: nodeList52.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node56 = null;
        javafx.scene.Node node57 = null; // flaky: nodeList52.set((int) (byte) 1, node56);
        boolean boolean58 = nodeList20.add(node57);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(nodeStream7);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(nodeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(nodeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
// flaky:         org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(nodeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test552");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = nodeList6.remove(obj8);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        boolean boolean18 = false; // flaky: nodeList11.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList17);
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        boolean boolean23 = nodeList21.isEmpty();
        int int25 = nodeList21.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        boolean boolean31 = false; // flaky: nodeList29.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node33 = null;
        javafx.scene.Node node34 = null; // flaky: nodeList29.set((int) (byte) 1, node33);
        boolean boolean35 = nodeList21.add(node34);
// flaky:         nodeList11.add(1, node34);
        boolean boolean37 = nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList11);
        boolean boolean38 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList11);
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        boolean boolean42 = nodeList40.isEmpty();
        int int44 = nodeList40.lastIndexOf((java.lang.Object) 100);
        boolean boolean45 = nodeList40.isEmpty();
        nodeList40.clear();
        boolean boolean47 = nodeList11.addAll((java.util.Collection<javafx.scene.Node>) nodeList40);
        java.lang.Object obj48 = null;
        boolean boolean49 = nodeList11.remove(obj48);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null; // flaky: new Interface.WoodTotalValues(woodTable50);
// flaky:         woodTotalValues51.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList55 = null; // flaky: woodTotalValues51.getAll();
        java.util.stream.Stream<javafx.scene.Node> nodeStream56 = null; // flaky: nodeList55.stream();
        boolean boolean57 = nodeList11.equals((java.lang.Object) nodeList55);
        javafx.scene.Node[] nodeArray58 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList59 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList59, nodeArray58);
        boolean boolean61 = nodeList59.isEmpty();
        Interface.WoodTable woodTable62 = null;
        Interface.WoodTotalValues woodTotalValues63 = null;
        Interface.AddWood addWood64 = null; // flaky: new Interface.AddWood(woodTable62, woodTotalValues63);
        java.util.ArrayList<javafx.scene.Node> nodeList65 = null; // flaky: addWood64.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList66 = null; // flaky: addWood64.getAll();
        javafx.scene.Node[] nodeArray67 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList68 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList68, nodeArray67);
        boolean boolean70 = nodeList68.isEmpty();
        int int72 = nodeList68.lastIndexOf((java.lang.Object) 100);
        int int74 = nodeList68.lastIndexOf((java.lang.Object) 10);
        boolean boolean75 = false; // flaky: nodeList66.retainAll((java.util.Collection<javafx.scene.Node>) nodeList68);
        boolean boolean76 = false; // flaky: nodeList59.removeAll((java.util.Collection<javafx.scene.Node>) nodeList66);
        java.util.List<javafx.scene.Node> nodeList79 = null; // flaky: nodeList66.subList(0, (int) (byte) 0);
        java.util.stream.Stream<javafx.scene.Node> nodeStream80 = null; // flaky: nodeList79.parallelStream();
        int int81 = nodeList11.lastIndexOf((java.lang.Object) nodeList79);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList55);
// flaky:         org.junit.Assert.assertNotNull(nodeStream56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(nodeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList65);
// flaky:         org.junit.Assert.assertNotNull(nodeList66);
        org.junit.Assert.assertNotNull(nodeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList79);
// flaky:         org.junit.Assert.assertNotNull(nodeStream80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test553");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean14 = nodeList1.isEmpty();
        java.util.Iterator<javafx.scene.Node> nodeItor15 = nodeList1.iterator();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator16 = nodeList1.spliterator();
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = nodeList18.remove(obj20);
        javafx.scene.Node node22 = null;
        boolean boolean23 = nodeList18.add(node22);
        java.util.ListIterator<javafx.scene.Node> nodeItor24 = nodeList18.listIterator();
        Interface.WoodTable woodTable25 = null;
        Interface.WoodTotalValues woodTotalValues26 = null;
        Interface.AddWood addWood27 = null; // flaky: new Interface.AddWood(woodTable25, woodTotalValues26);
        java.util.ArrayList<javafx.scene.Node> nodeList28 = null; // flaky: addWood27.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood27.getAll();
        javafx.scene.Node[] nodeArray30 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList31 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList31, nodeArray30);
        boolean boolean33 = nodeList31.isEmpty();
        int int35 = nodeList31.lastIndexOf((java.lang.Object) 100);
        int int37 = nodeList31.lastIndexOf((java.lang.Object) 10);
        boolean boolean38 = false; // flaky: nodeList29.retainAll((java.util.Collection<javafx.scene.Node>) nodeList31);
        boolean boolean40 = false; // flaky: nodeList29.contains((java.lang.Object) false);
        Interface.WoodTable woodTable41 = null;
        Interface.WoodTotalValues woodTotalValues42 = null;
        Interface.AddWood addWood43 = null; // flaky: new Interface.AddWood(woodTable41, woodTotalValues42);
        java.util.ArrayList<javafx.scene.Node> nodeList44 = null; // flaky: addWood43.getAll();
        boolean boolean45 = false; // flaky: nodeList44.isEmpty();
        boolean boolean47 = false; // flaky: nodeList44.equals((java.lang.Object) 100);
        int int48 = 0; // flaky: nodeList29.lastIndexOf((java.lang.Object) nodeList44);
        javafx.scene.Node[] nodeArray49 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList50 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList50, nodeArray49);
        java.lang.Object obj52 = null;
        boolean boolean53 = nodeList50.remove(obj52);
        javafx.scene.Node[] nodeArray54 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList55 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList55, nodeArray54);
        boolean boolean57 = nodeList55.isEmpty();
        int int59 = nodeList55.lastIndexOf((java.lang.Object) 100);
        boolean boolean60 = nodeList50.equals((java.lang.Object) nodeList55);
        Interface.WoodTable woodTable61 = null;
        Interface.WoodTotalValues woodTotalValues62 = null;
        Interface.AddWood addWood63 = null; // flaky: new Interface.AddWood(woodTable61, woodTotalValues62);
        java.util.ArrayList<javafx.scene.Node> nodeList64 = null; // flaky: addWood63.getAll();
// flaky:         addWood63.redraw((double) 10.0f, (double) 0L);
        boolean boolean68 = nodeList50.contains((java.lang.Object) 10.0f);
        boolean boolean69 = false; // flaky: nodeList44.contains((java.lang.Object) 10.0f);
        boolean boolean70 = false; // flaky: nodeList18.removeAll((java.util.Collection<javafx.scene.Node>) nodeList44);
        Interface.WoodTable woodTable71 = null;
        Interface.WoodTotalValues woodTotalValues72 = null;
        Interface.AddWood addWood73 = null; // flaky: new Interface.AddWood(woodTable71, woodTotalValues72);
        java.util.ArrayList<javafx.scene.Node> nodeList74 = null; // flaky: addWood73.getAll();
        boolean boolean75 = false; // flaky: nodeList74.isEmpty();
        boolean boolean77 = false; // flaky: nodeList74.equals((java.lang.Object) 100);
        java.util.Iterator<javafx.scene.Node> nodeItor78 = null; // flaky: nodeList74.iterator();
        boolean boolean79 = false; // flaky: nodeList44.equals((java.lang.Object) nodeList74);
        javafx.scene.Node[] nodeArray81 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList82 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList82, nodeArray81);
        Interface.WoodTable woodTable85 = null;
        Interface.WoodTotalValues woodTotalValues86 = null;
        Interface.AddWood addWood87 = null; // flaky: new Interface.AddWood(woodTable85, woodTotalValues86);
        java.util.ArrayList<javafx.scene.Node> nodeList88 = null; // flaky: addWood87.getAll();
        boolean boolean89 = false; // flaky: nodeList82.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList88);
        int int91 = nodeList82.indexOf((java.lang.Object) true);
        javafx.scene.Node node93 = null; // flaky: nodeList82.get((int) (byte) 0);
        javafx.scene.Node node94 = null; // flaky: nodeList44.set((int) (short) 0, node93);
        boolean boolean95 = nodeList1.add(node94);
        java.lang.Object[] objArray96 = nodeList1.toArray();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(nodeItor15);
        org.junit.Assert.assertNotNull(nodeSpliterator16);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(nodeItor24);
// flaky:         org.junit.Assert.assertNotNull(nodeList28);
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertNotNull(nodeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(nodeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(nodeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(nodeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList88);
// flaky:         org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
// flaky:         org.junit.Assert.assertNotNull(node93);
// flaky:         org.junit.Assert.assertNotNull(node94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(objArray96);
    }

    @Test
    public void test554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test554");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        Interface.WoodTable woodTable21 = null;
        Interface.WoodTotalValues woodTotalValues22 = null;
        Interface.AddWood addWood23 = null; // flaky: new Interface.AddWood(woodTable21, woodTotalValues22);
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood23.getAll();
        boolean boolean25 = false; // flaky: nodeList18.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList24);
        int int27 = nodeList18.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray29 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList30 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList30, nodeArray29);
        boolean boolean32 = nodeList30.isEmpty();
        int int34 = nodeList30.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        boolean boolean40 = false; // flaky: nodeList38.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node42 = null;
        javafx.scene.Node node43 = null; // flaky: nodeList38.set((int) (byte) 1, node42);
        boolean boolean44 = nodeList30.add(node43);
        javafx.scene.Node node45 = null; // flaky: nodeList18.set((int) (short) 0, node43);
        javafx.scene.Node node46 = nodeList1.set((int) (byte) 0, node43);
        Interface.WoodTable woodTable47 = null;
        Interface.WoodTotalValues woodTotalValues48 = null;
        Interface.AddWood addWood49 = null; // flaky: new Interface.AddWood(woodTable47, woodTotalValues48);
        java.util.ArrayList<javafx.scene.Node> nodeList50 = null; // flaky: addWood49.getAll();
        boolean boolean51 = false; // flaky: nodeList50.isEmpty();
        javafx.scene.Node[] nodeArray53 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList54 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList54, nodeArray53);
        Interface.WoodTable woodTable57 = null;
        Interface.WoodTotalValues woodTotalValues58 = null;
        Interface.AddWood addWood59 = null; // flaky: new Interface.AddWood(woodTable57, woodTotalValues58);
        java.util.ArrayList<javafx.scene.Node> nodeList60 = null; // flaky: addWood59.getAll();
        boolean boolean61 = false; // flaky: nodeList54.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList60);
        javafx.scene.Node[] nodeArray63 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList64 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList64, nodeArray63);
        boolean boolean66 = nodeList64.isEmpty();
        int int68 = nodeList64.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable69 = null;
        Interface.WoodTotalValues woodTotalValues70 = null;
        Interface.AddWood addWood71 = null; // flaky: new Interface.AddWood(woodTable69, woodTotalValues70);
        java.util.ArrayList<javafx.scene.Node> nodeList72 = null; // flaky: addWood71.getAll();
        boolean boolean74 = false; // flaky: nodeList72.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node76 = null;
        javafx.scene.Node node77 = null; // flaky: nodeList72.set((int) (byte) 1, node76);
        boolean boolean78 = nodeList64.add(node77);
// flaky:         nodeList54.add(1, node77);
        javafx.scene.Node node80 = null; // flaky: nodeList50.set(0, node77);
        java.util.ListIterator<javafx.scene.Node> nodeItor81 = null; // flaky: nodeList50.listIterator();
        javafx.scene.Node[] nodeArray82 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList83 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList83, nodeArray82);
        Interface.WoodTable woodTable86 = null;
        Interface.WoodTotalValues woodTotalValues87 = null;
        Interface.AddWood addWood88 = null; // flaky: new Interface.AddWood(woodTable86, woodTotalValues87);
        java.util.ArrayList<javafx.scene.Node> nodeList89 = null; // flaky: addWood88.getAll();
        boolean boolean90 = false; // flaky: nodeList83.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList89);
        int int92 = nodeList83.indexOf((java.lang.Object) true);
        java.util.stream.Stream<javafx.scene.Node> nodeStream93 = nodeList83.parallelStream();
        int int94 = 0; // flaky: nodeList50.indexOf((java.lang.Object) nodeStream93);
        boolean boolean95 = nodeList1.equals((java.lang.Object) nodeStream93);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
// flaky:         org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(nodeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
// flaky:         org.junit.Assert.assertNotNull(node45);
// flaky:         org.junit.Assert.assertNotNull(node46);
// flaky:         org.junit.Assert.assertNotNull(nodeList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(nodeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList60);
// flaky:         org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(nodeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
// flaky:         org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
// flaky:         org.junit.Assert.assertNotNull(node80);
// flaky:         org.junit.Assert.assertNotNull(nodeItor81);
        org.junit.Assert.assertNotNull(nodeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList89);
// flaky:         org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(nodeStream93);
// flaky:         org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test555");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
// flaky:         woodTotalValues1.redraw((double) 0, (double) 10);
        // The following exception was thrown during execution in test generation
        try {
            woodTotalValues1.renew();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test556");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: woodTotalValues2.getAll();
// flaky:         woodTotalValues2.redraw((double) 2, (double) 5);
// flaky:         woodTotalValues2.redraw((double) (byte) 1, (double) 1);
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: woodTotalValues2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: woodTotalValues2.getAll();
// flaky:         woodTotalValues2.redraw((double) (short) 1, 1.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList16 = null; // flaky: woodTotalValues2.getAll();
        Interface.AddWood addWood17 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
        java.util.ArrayList<javafx.scene.Node> nodeList18 = null; // flaky: woodTotalValues2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: woodTotalValues2.getAll();
        int int20 = 0; // flaky: nodeList19.size();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
// flaky:         org.junit.Assert.assertNotNull(nodeList16);
// flaky:         org.junit.Assert.assertNotNull(nodeList18);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
    }

    @Test
    public void test557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test557");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues1.getAll();
// flaky:         woodTotalValues1.redraw((double) 2, (double) 5);
// flaky:         woodTotalValues1.redraw((double) (byte) 1, (double) 1);
        java.util.ArrayList<javafx.scene.Node> nodeList10 = null; // flaky: woodTotalValues1.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: woodTotalValues1.getAll();
// flaky:         woodTotalValues1.redraw((double) 1, (double) (byte) 0);
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList10);
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
    }

    @Test
    public void test558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test558");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray7 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList8 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList8, nodeArray7);
        boolean boolean10 = nodeList8.isEmpty();
        int int12 = nodeList8.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable13 = null;
        Interface.WoodTotalValues woodTotalValues14 = null;
        Interface.AddWood addWood15 = null; // flaky: new Interface.AddWood(woodTable13, woodTotalValues14);
        java.util.ArrayList<javafx.scene.Node> nodeList16 = null; // flaky: addWood15.getAll();
        boolean boolean18 = false; // flaky: nodeList16.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node20 = null;
        javafx.scene.Node node21 = null; // flaky: nodeList16.set((int) (byte) 1, node20);
        boolean boolean22 = nodeList8.add(node21);
        javafx.scene.Node node23 = null; // flaky: nodeList5.set((int) (short) 0, node21);
        javafx.scene.Node[] nodeArray24 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList25 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList25, nodeArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = nodeList25.remove(obj27);
        javafx.scene.Node[] nodeArray29 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList30 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList30, nodeArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = nodeList30.remove(obj32);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        javafx.scene.Node[] nodeArray44 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList45 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList45, nodeArray44);
        boolean boolean47 = nodeList45.isEmpty();
        int int49 = nodeList45.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null;
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable50, woodTotalValues51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood52.getAll();
        boolean boolean55 = false; // flaky: nodeList53.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node57 = null;
        javafx.scene.Node node58 = null; // flaky: nodeList53.set((int) (byte) 1, node57);
        boolean boolean59 = nodeList45.add(node58);
// flaky:         nodeList35.add(1, node58);
        boolean boolean61 = nodeList30.retainAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        boolean boolean62 = nodeList25.retainAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        boolean boolean63 = false; // flaky: nodeList5.retainAll((java.util.Collection<javafx.scene.Node>) nodeList25);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator64 = nodeList25.spliterator();
        Interface.WoodTable woodTable65 = null;
        Interface.WoodTotalValues woodTotalValues66 = null;
        Interface.AddWood addWood67 = null; // flaky: new Interface.AddWood(woodTable65, woodTotalValues66);
        java.util.ArrayList<javafx.scene.Node> nodeList68 = null; // flaky: addWood67.getAll();
// flaky:         addWood67.redraw((double) 10.0f, (double) 0L);
        java.util.ArrayList<javafx.scene.Node> nodeList72 = null; // flaky: addWood67.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList73 = null; // flaky: addWood67.getAll();
        javafx.scene.Node node75 = null; // flaky: nodeList73.get(2);
        boolean boolean76 = nodeList25.add(node75);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(nodeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
// flaky:         org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(nodeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(nodeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(nodeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator64);
// flaky:         org.junit.Assert.assertNotNull(nodeList68);
// flaky:         org.junit.Assert.assertNotNull(nodeList72);
// flaky:         org.junit.Assert.assertNotNull(nodeList73);
// flaky:         org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test559");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        javafx.scene.Node[] nodeArray16 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList17 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList17, nodeArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = nodeList17.remove(obj19);
        boolean boolean21 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList17);
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        boolean boolean30 = false; // flaky: nodeList23.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList29);
        java.util.stream.Stream<javafx.scene.Node> nodeStream31 = null; // flaky: nodeList29.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator32 = null; // flaky: nodeList29.spliterator();
        boolean boolean33 = false; // flaky: nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList29);
// flaky:         nodeList29.clear();
        java.lang.Object[] objArray35 = null; // flaky: nodeList29.toArray();
        javafx.scene.Node[] nodeArray36 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList37 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList37, nodeArray36);
        Interface.WoodTable woodTable40 = null;
        Interface.WoodTotalValues woodTotalValues41 = null;
        Interface.AddWood addWood42 = null; // flaky: new Interface.AddWood(woodTable40, woodTotalValues41);
        java.util.ArrayList<javafx.scene.Node> nodeList43 = null; // flaky: addWood42.getAll();
        boolean boolean44 = false; // flaky: nodeList37.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList43);
        javafx.scene.Node[] nodeArray46 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList47 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList47, nodeArray46);
        boolean boolean49 = nodeList47.isEmpty();
        int int51 = nodeList47.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable52 = null;
        Interface.WoodTotalValues woodTotalValues53 = null;
        Interface.AddWood addWood54 = null; // flaky: new Interface.AddWood(woodTable52, woodTotalValues53);
        java.util.ArrayList<javafx.scene.Node> nodeList55 = null; // flaky: addWood54.getAll();
        boolean boolean57 = false; // flaky: nodeList55.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node59 = null;
        javafx.scene.Node node60 = null; // flaky: nodeList55.set((int) (byte) 1, node59);
        boolean boolean61 = nodeList47.add(node60);
// flaky:         nodeList37.add(1, node60);
        java.lang.Object[] objArray63 = nodeList37.toArray();
        Interface.WoodTable woodTable64 = null;
        Interface.WoodTable woodTable65 = null;
        Interface.WoodTotalValues woodTotalValues66 = null; // flaky: new Interface.WoodTotalValues(woodTable65);
        java.util.ArrayList<javafx.scene.Node> nodeList67 = null; // flaky: woodTotalValues66.getAll();
        Interface.AddWood addWood68 = null; // flaky: new Interface.AddWood(woodTable64, woodTotalValues66);
        java.util.ArrayList<javafx.scene.Node> nodeList69 = null; // flaky: addWood68.getAll();
        boolean boolean70 = false; // flaky: nodeList37.addAll((java.util.Collection<javafx.scene.Node>) nodeList69);
        boolean boolean71 = false; // flaky: nodeList29.containsAll((java.util.Collection<javafx.scene.Node>) nodeList69);
        java.util.Iterator<javafx.scene.Node> nodeItor72 = null; // flaky: nodeList29.iterator();
        java.lang.Object[] objArray73 = null; // flaky: nodeList29.toArray();
        Interface.AddWood[][] addWoodArray74 = new Interface.AddWood[][] {};
        Interface.AddWood[][] addWoodArray75 = null; // flaky: nodeList29.toArray(addWoodArray74);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream31);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator32);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertNotNull(objArray35);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(nodeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList43);
// flaky:         org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(nodeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objArray63);
// flaky:         org.junit.Assert.assertNotNull(nodeList67);
// flaky:         org.junit.Assert.assertNotNull(nodeList69);
// flaky:         org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor72);
// flaky:         org.junit.Assert.assertNotNull(objArray73);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(addWoodArray74);
// flaky:         org.junit.Assert.assertNotNull(addWoodArray75);
    }

    @Test
    public void test560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test560");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        boolean boolean4 = false; // flaky: nodeList3.isEmpty();
        java.util.function.UnaryOperator<javafx.scene.Node> nodeUnaryOperator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList3.replaceAll(nodeUnaryOperator5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test561");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node node5 = null;
        boolean boolean6 = nodeList1.add(node5);
        java.util.ListIterator<javafx.scene.Node> nodeItor7 = nodeList1.listIterator();
        Interface.WoodTable woodTable8 = null;
        Interface.WoodTotalValues woodTotalValues9 = null;
        Interface.AddWood addWood10 = null; // flaky: new Interface.AddWood(woodTable8, woodTotalValues9);
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: addWood10.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: addWood10.getAll();
        javafx.scene.Node[] nodeArray13 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList14 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList14, nodeArray13);
        boolean boolean16 = nodeList14.isEmpty();
        int int18 = nodeList14.lastIndexOf((java.lang.Object) 100);
        int int20 = nodeList14.lastIndexOf((java.lang.Object) 10);
        boolean boolean21 = false; // flaky: nodeList12.retainAll((java.util.Collection<javafx.scene.Node>) nodeList14);
        boolean boolean23 = false; // flaky: nodeList12.contains((java.lang.Object) false);
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTotalValues woodTotalValues25 = null;
        Interface.AddWood addWood26 = null; // flaky: new Interface.AddWood(woodTable24, woodTotalValues25);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood26.getAll();
        boolean boolean28 = false; // flaky: nodeList27.isEmpty();
        boolean boolean30 = false; // flaky: nodeList27.equals((java.lang.Object) 100);
        int int31 = 0; // flaky: nodeList12.lastIndexOf((java.lang.Object) nodeList27);
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        java.lang.Object obj35 = null;
        boolean boolean36 = nodeList33.remove(obj35);
        javafx.scene.Node[] nodeArray37 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList38 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList38, nodeArray37);
        boolean boolean40 = nodeList38.isEmpty();
        int int42 = nodeList38.lastIndexOf((java.lang.Object) 100);
        boolean boolean43 = nodeList33.equals((java.lang.Object) nodeList38);
        Interface.WoodTable woodTable44 = null;
        Interface.WoodTotalValues woodTotalValues45 = null;
        Interface.AddWood addWood46 = null; // flaky: new Interface.AddWood(woodTable44, woodTotalValues45);
        java.util.ArrayList<javafx.scene.Node> nodeList47 = null; // flaky: addWood46.getAll();
// flaky:         addWood46.redraw((double) 10.0f, (double) 0L);
        boolean boolean51 = nodeList33.contains((java.lang.Object) 10.0f);
        boolean boolean52 = false; // flaky: nodeList27.contains((java.lang.Object) 10.0f);
        boolean boolean53 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList27);
        Interface.WoodTable woodTable54 = null;
        Interface.WoodTotalValues woodTotalValues55 = null;
        Interface.AddWood addWood56 = null; // flaky: new Interface.AddWood(woodTable54, woodTotalValues55);
        java.util.ArrayList<javafx.scene.Node> nodeList57 = null; // flaky: addWood56.getAll();
        boolean boolean58 = false; // flaky: nodeList57.isEmpty();
        boolean boolean60 = false; // flaky: nodeList57.equals((java.lang.Object) 100);
        java.util.Iterator<javafx.scene.Node> nodeItor61 = null; // flaky: nodeList57.iterator();
        boolean boolean62 = false; // flaky: nodeList27.equals((java.lang.Object) nodeList57);
        javafx.scene.Node[] nodeArray64 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList65 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList65, nodeArray64);
        Interface.WoodTable woodTable68 = null;
        Interface.WoodTotalValues woodTotalValues69 = null;
        Interface.AddWood addWood70 = null; // flaky: new Interface.AddWood(woodTable68, woodTotalValues69);
        java.util.ArrayList<javafx.scene.Node> nodeList71 = null; // flaky: addWood70.getAll();
        boolean boolean72 = false; // flaky: nodeList65.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList71);
        int int74 = nodeList65.indexOf((java.lang.Object) true);
        javafx.scene.Node node76 = null; // flaky: nodeList65.get((int) (byte) 0);
        javafx.scene.Node node77 = null; // flaky: nodeList27.set((int) (short) 0, node76);
        java.util.stream.Stream<javafx.scene.Node> nodeStream78 = null; // flaky: nodeList27.parallelStream();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(nodeItor7);
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertNotNull(nodeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(nodeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(nodeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList71);
// flaky:         org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
// flaky:         org.junit.Assert.assertNotNull(node76);
// flaky:         org.junit.Assert.assertNotNull(node77);
// flaky:         org.junit.Assert.assertNotNull(nodeStream78);
    }

    @Test
    public void test562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test562");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        boolean boolean33 = false; // flaky: nodeList7.add(node31);
        Interface.WoodTable woodTable34 = null;
        Interface.WoodTotalValues woodTotalValues35 = null;
        Interface.AddWood addWood36 = null; // flaky: new Interface.AddWood(woodTable34, woodTotalValues35);
        java.util.ArrayList<javafx.scene.Node> nodeList37 = null; // flaky: addWood36.getAll();
        boolean boolean38 = false; // flaky: nodeList37.isEmpty();
        boolean boolean39 = false; // flaky: nodeList7.addAll((java.util.Collection<javafx.scene.Node>) nodeList37);
        java.util.ListIterator<javafx.scene.Node> nodeItor40 = null; // flaky: nodeList37.listIterator();
        javafx.scene.Node[] nodeArray42 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList43 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList43, nodeArray42);
        boolean boolean45 = nodeList43.isEmpty();
        int int47 = nodeList43.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable48 = null;
        Interface.WoodTotalValues woodTotalValues49 = null;
        Interface.AddWood addWood50 = null; // flaky: new Interface.AddWood(woodTable48, woodTotalValues49);
        java.util.ArrayList<javafx.scene.Node> nodeList51 = null; // flaky: addWood50.getAll();
        boolean boolean53 = false; // flaky: nodeList51.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node55 = null;
        javafx.scene.Node node56 = null; // flaky: nodeList51.set((int) (byte) 1, node55);
        boolean boolean57 = nodeList43.add(node56);
        javafx.scene.Node[] nodeArray58 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList59 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList59, nodeArray58);
        java.lang.Object obj61 = null;
        boolean boolean62 = nodeList59.remove(obj61);
        boolean boolean63 = nodeList43.retainAll((java.util.Collection<javafx.scene.Node>) nodeList59);
        javafx.scene.Node[] nodeArray64 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList65 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList65, nodeArray64);
        Interface.WoodTable woodTable68 = null;
        Interface.WoodTotalValues woodTotalValues69 = null;
        Interface.AddWood addWood70 = null; // flaky: new Interface.AddWood(woodTable68, woodTotalValues69);
        java.util.ArrayList<javafx.scene.Node> nodeList71 = null; // flaky: addWood70.getAll();
        boolean boolean72 = false; // flaky: nodeList65.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList71);
        java.util.stream.Stream<javafx.scene.Node> nodeStream73 = null; // flaky: nodeList71.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator74 = null; // flaky: nodeList71.spliterator();
        boolean boolean75 = false; // flaky: nodeList43.addAll((java.util.Collection<javafx.scene.Node>) nodeList71);
        java.util.Iterator<javafx.scene.Node> nodeItor76 = null; // flaky: nodeList71.iterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean77 = false; // flaky: nodeList37.addAll((int) '#', (java.util.Collection<javafx.scene.Node>) nodeList71);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor40);
        org.junit.Assert.assertNotNull(nodeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
// flaky:         org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(nodeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(nodeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList71);
// flaky:         org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream73);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator74);
// flaky:         org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor76);
    }

    @Test
    public void test563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test563");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues1.getAll();
        java.util.Iterator<javafx.scene.Node> nodeItor4 = null; // flaky: nodeList3.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor5 = null; // flaky: nodeList3.listIterator();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        boolean boolean9 = nodeList7.isEmpty();
        int int11 = nodeList7.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable12 = null;
        Interface.WoodTotalValues woodTotalValues13 = null;
        Interface.AddWood addWood14 = null; // flaky: new Interface.AddWood(woodTable12, woodTotalValues13);
        java.util.ArrayList<javafx.scene.Node> nodeList15 = null; // flaky: addWood14.getAll();
        boolean boolean17 = false; // flaky: nodeList15.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node19 = null;
        javafx.scene.Node node20 = null; // flaky: nodeList15.set((int) (byte) 1, node19);
        boolean boolean21 = nodeList7.add(node20);
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = nodeList23.remove(obj25);
        boolean boolean27 = nodeList7.retainAll((java.util.Collection<javafx.scene.Node>) nodeList23);
        javafx.scene.Node[] nodeArray28 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList29 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList29, nodeArray28);
        Interface.WoodTable woodTable32 = null;
        Interface.WoodTotalValues woodTotalValues33 = null;
        Interface.AddWood addWood34 = null; // flaky: new Interface.AddWood(woodTable32, woodTotalValues33);
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood34.getAll();
        boolean boolean36 = false; // flaky: nodeList29.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList35);
        java.util.stream.Stream<javafx.scene.Node> nodeStream37 = null; // flaky: nodeList35.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator38 = null; // flaky: nodeList35.spliterator();
        boolean boolean39 = false; // flaky: nodeList7.addAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        java.util.Iterator<javafx.scene.Node> nodeItor40 = null; // flaky: nodeList35.iterator();
        boolean boolean41 = false; // flaky: nodeList3.removeAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        javafx.scene.Node[] nodeArray42 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList43 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList43, nodeArray42);
        java.lang.Object obj45 = null;
        boolean boolean46 = nodeList43.remove(obj45);
        boolean boolean47 = nodeList43.isEmpty();
        boolean boolean48 = false; // flaky: nodeList3.addAll((java.util.Collection<javafx.scene.Node>) nodeList43);
        java.util.function.UnaryOperator<javafx.scene.Node> nodeUnaryOperator49 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList43.replaceAll(nodeUnaryOperator49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeItor4);
// flaky:         org.junit.Assert.assertNotNull(nodeItor5);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(nodeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream37);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator38);
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(nodeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test564");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTotalValues woodTotalValues3 = null; // flaky: new Interface.WoodTotalValues(woodTable2);
        Interface.AddWood addWood4 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues3);
// flaky:         woodTotalValues3.redraw(0.0d, (double) 0L);
// flaky:         woodTotalValues3.redraw((double) (byte) 10, (double) 100);
        Interface.AddWood addWood11 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues3);
    }

    @Test
    public void test565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test565");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        boolean boolean4 = false; // flaky: nodeList3.isEmpty();
        boolean boolean6 = false; // flaky: nodeList3.equals((java.lang.Object) 100);
        java.util.Iterator<javafx.scene.Node> nodeItor7 = null; // flaky: nodeList3.iterator();
        javafx.scene.Node[] nodeArray8 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList9 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList9, nodeArray8);
        boolean boolean11 = nodeList9.isEmpty();
        boolean boolean12 = nodeList9.isEmpty();
        nodeList9.clear();
        java.util.ListIterator<javafx.scene.Node> nodeItor15 = nodeList9.listIterator(0);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean21 = false; // flaky: nodeList19.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node23 = null;
        javafx.scene.Node node24 = null; // flaky: nodeList19.set((int) (byte) 1, node23);
        javafx.css.Styleable[] styleableArray25 = new javafx.css.Styleable[] { node24 };
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        boolean boolean31 = false; // flaky: nodeList29.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node33 = null;
        javafx.scene.Node node34 = null; // flaky: nodeList29.set((int) (byte) 1, node33);
        javafx.css.Styleable[] styleableArray35 = new javafx.css.Styleable[] { node34 };
        javafx.css.Styleable[][] styleableArray36 = new javafx.css.Styleable[][] { styleableArray25, styleableArray35 };
        javafx.css.Styleable[][] styleableArray37 = nodeList9.toArray(styleableArray36);
        boolean boolean38 = false; // flaky: nodeList3.addAll((java.util.Collection<javafx.scene.Node>) nodeList9);
        Interface.WoodTable woodTable39 = null;
        Interface.WoodTable woodTable40 = null;
        Interface.WoodTotalValues woodTotalValues41 = null; // flaky: new Interface.WoodTotalValues(woodTable40);
        java.util.ArrayList<javafx.scene.Node> nodeList42 = null; // flaky: woodTotalValues41.getAll();
        Interface.AddWood addWood43 = null; // flaky: new Interface.AddWood(woodTable39, woodTotalValues41);
        boolean boolean44 = nodeList9.equals((java.lang.Object) woodTotalValues41);
        Interface.WoodTable woodTable45 = null;
        Interface.WoodTable woodTable46 = null;
        Interface.WoodTotalValues woodTotalValues47 = null; // flaky: new Interface.WoodTotalValues(woodTable46);
        Interface.AddWood addWood48 = null; // flaky: new Interface.AddWood(woodTable45, woodTotalValues47);
        java.util.ArrayList<javafx.scene.Node> nodeList49 = null; // flaky: woodTotalValues47.getAll();
        boolean boolean50 = false; // flaky: nodeList49.isEmpty();
        int int51 = nodeList9.lastIndexOf((java.lang.Object) boolean50);
        javafx.scene.Node[] nodeArray52 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList53 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList53, nodeArray52);
        java.lang.Object obj55 = null;
        boolean boolean56 = nodeList53.remove(obj55);
        javafx.scene.Node[] nodeArray57 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList58 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList58, nodeArray57);
        boolean boolean60 = nodeList58.isEmpty();
        int int62 = nodeList58.lastIndexOf((java.lang.Object) 100);
        boolean boolean63 = nodeList53.equals((java.lang.Object) nodeList58);
        int int64 = nodeList9.lastIndexOf((java.lang.Object) nodeList53);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor7);
        org.junit.Assert.assertNotNull(nodeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(nodeItor15);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(styleableArray25);
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(styleableArray35);
        org.junit.Assert.assertNotNull(styleableArray36);
        org.junit.Assert.assertNotNull(styleableArray37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(nodeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(nodeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test566");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood18.getAll();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        int int28 = nodeList22.lastIndexOf((java.lang.Object) 10);
        boolean boolean29 = false; // flaky: nodeList20.retainAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        boolean boolean30 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        java.lang.Object obj35 = null;
        boolean boolean36 = nodeList33.remove(obj35);
        javafx.scene.Node node37 = null;
        boolean boolean38 = nodeList33.add(node37);
        java.util.ListIterator<javafx.scene.Node> nodeItor39 = nodeList33.listIterator();
        Interface.WoodTable woodTable40 = null;
        Interface.WoodTotalValues woodTotalValues41 = null;
        Interface.AddWood addWood42 = null; // flaky: new Interface.AddWood(woodTable40, woodTotalValues41);
        java.util.ArrayList<javafx.scene.Node> nodeList43 = null; // flaky: addWood42.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList44 = null; // flaky: addWood42.getAll();
        javafx.scene.Node[] nodeArray45 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList46 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList46, nodeArray45);
        boolean boolean48 = nodeList46.isEmpty();
        int int50 = nodeList46.lastIndexOf((java.lang.Object) 100);
        int int52 = nodeList46.lastIndexOf((java.lang.Object) 10);
        boolean boolean53 = false; // flaky: nodeList44.retainAll((java.util.Collection<javafx.scene.Node>) nodeList46);
        boolean boolean55 = false; // flaky: nodeList44.contains((java.lang.Object) false);
        Interface.WoodTable woodTable56 = null;
        Interface.WoodTotalValues woodTotalValues57 = null;
        Interface.AddWood addWood58 = null; // flaky: new Interface.AddWood(woodTable56, woodTotalValues57);
        java.util.ArrayList<javafx.scene.Node> nodeList59 = null; // flaky: addWood58.getAll();
        boolean boolean60 = false; // flaky: nodeList59.isEmpty();
        boolean boolean62 = false; // flaky: nodeList59.equals((java.lang.Object) 100);
        int int63 = 0; // flaky: nodeList44.lastIndexOf((java.lang.Object) nodeList59);
        javafx.scene.Node[] nodeArray64 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList65 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList65, nodeArray64);
        java.lang.Object obj67 = null;
        boolean boolean68 = nodeList65.remove(obj67);
        javafx.scene.Node[] nodeArray69 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList70 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList70, nodeArray69);
        boolean boolean72 = nodeList70.isEmpty();
        int int74 = nodeList70.lastIndexOf((java.lang.Object) 100);
        boolean boolean75 = nodeList65.equals((java.lang.Object) nodeList70);
        Interface.WoodTable woodTable76 = null;
        Interface.WoodTotalValues woodTotalValues77 = null;
        Interface.AddWood addWood78 = null; // flaky: new Interface.AddWood(woodTable76, woodTotalValues77);
        java.util.ArrayList<javafx.scene.Node> nodeList79 = null; // flaky: addWood78.getAll();
// flaky:         addWood78.redraw((double) 10.0f, (double) 0L);
        boolean boolean83 = nodeList65.contains((java.lang.Object) 10.0f);
        boolean boolean84 = false; // flaky: nodeList59.contains((java.lang.Object) 10.0f);
        boolean boolean85 = false; // flaky: nodeList33.removeAll((java.util.Collection<javafx.scene.Node>) nodeList59);
        Interface.WoodTable woodTable86 = null;
        Interface.WoodTotalValues woodTotalValues87 = null;
        Interface.AddWood addWood88 = null; // flaky: new Interface.AddWood(woodTable86, woodTotalValues87);
        java.util.ArrayList<javafx.scene.Node> nodeList89 = null; // flaky: addWood88.getAll();
        boolean boolean90 = false; // flaky: nodeList89.isEmpty();
        boolean boolean92 = false; // flaky: nodeList89.equals((java.lang.Object) 100);
        java.util.Iterator<javafx.scene.Node> nodeItor93 = null; // flaky: nodeList89.iterator();
        boolean boolean94 = false; // flaky: nodeList59.equals((java.lang.Object) nodeList89);
        boolean boolean95 = false; // flaky: nodeList1.addAll((int) (byte) 0, (java.util.Collection<javafx.scene.Node>) nodeList59);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(nodeItor39);
// flaky:         org.junit.Assert.assertNotNull(nodeList43);
// flaky:         org.junit.Assert.assertNotNull(nodeList44);
        org.junit.Assert.assertNotNull(nodeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(nodeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(nodeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test567");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
        Interface.WoodTable woodTable3 = null;
        Interface.WoodTotalValues woodTotalValues4 = null;
        Interface.AddWood addWood5 = null; // flaky: new Interface.AddWood(woodTable3, woodTotalValues4);
        java.util.ArrayList<javafx.scene.Node> nodeList6 = null; // flaky: addWood5.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood5.getAll();
        int int8 = 0; // flaky: nodeList2.indexOf((java.lang.Object) addWood5);
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        Interface.WoodTable woodTable13 = null;
        Interface.WoodTotalValues woodTotalValues14 = null;
        Interface.AddWood addWood15 = null; // flaky: new Interface.AddWood(woodTable13, woodTotalValues14);
        java.util.ArrayList<javafx.scene.Node> nodeList16 = null; // flaky: addWood15.getAll();
        boolean boolean17 = false; // flaky: nodeList10.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList16);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator18 = nodeList10.spliterator();
        nodeList10.clear();
        int int20 = 0; // flaky: nodeList2.indexOf((java.lang.Object) nodeList10);
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
// flaky:         org.junit.Assert.assertNotNull(nodeList6);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList16);
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator18);
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test568");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        javafx.scene.Node[] nodeArray16 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList17 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList17, nodeArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = nodeList17.remove(obj19);
        boolean boolean21 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList17);
        boolean boolean22 = nodeList1.isEmpty();
        java.util.Iterator<javafx.scene.Node> nodeItor23 = nodeList1.iterator();
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTotalValues woodTotalValues25 = null;
        Interface.AddWood addWood26 = null; // flaky: new Interface.AddWood(woodTable24, woodTotalValues25);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood26.getAll();
// flaky:         addWood26.redraw((double) 10.0f, (double) 0L);
        java.util.ArrayList<javafx.scene.Node> nodeList31 = null; // flaky: addWood26.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood26.getAll();
        java.util.stream.Stream<javafx.scene.Node> nodeStream33 = null; // flaky: nodeList32.parallelStream();
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        boolean boolean37 = nodeList35.isEmpty();
        int int39 = nodeList35.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable40 = null;
        Interface.WoodTotalValues woodTotalValues41 = null;
        Interface.AddWood addWood42 = null; // flaky: new Interface.AddWood(woodTable40, woodTotalValues41);
        java.util.ArrayList<javafx.scene.Node> nodeList43 = null; // flaky: addWood42.getAll();
        boolean boolean45 = false; // flaky: nodeList43.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node47 = null;
        javafx.scene.Node node48 = null; // flaky: nodeList43.set((int) (byte) 1, node47);
        boolean boolean49 = nodeList35.add(node48);
        javafx.scene.Node[] nodeArray50 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList51 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList51, nodeArray50);
        java.lang.Object obj53 = null;
        boolean boolean54 = nodeList51.remove(obj53);
        boolean boolean55 = nodeList35.retainAll((java.util.Collection<javafx.scene.Node>) nodeList51);
        javafx.scene.Node[] nodeArray56 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList57 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList57, nodeArray56);
        java.lang.Object obj59 = null;
        boolean boolean60 = nodeList57.remove(obj59);
        javafx.scene.Node node61 = null;
        boolean boolean62 = nodeList57.add(node61);
        boolean boolean63 = nodeList51.equals((java.lang.Object) boolean62);
        boolean boolean64 = false; // flaky: nodeList32.removeAll((java.util.Collection<javafx.scene.Node>) nodeList51);
        Interface.WoodTable woodTable65 = null;
        Interface.WoodTotalValues woodTotalValues66 = null; // flaky: new Interface.WoodTotalValues(woodTable65);
// flaky:         woodTotalValues66.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList70 = null; // flaky: woodTotalValues66.getAll();
        boolean boolean71 = false; // flaky: nodeList32.contains((java.lang.Object) nodeList70);
        boolean boolean72 = false; // flaky: nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList70);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<javafx.scene.Node> nodeItor74 = nodeList1.listIterator(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(nodeItor23);
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
// flaky:         org.junit.Assert.assertNotNull(nodeList31);
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
// flaky:         org.junit.Assert.assertNotNull(nodeStream33);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(nodeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(nodeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test569");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node node5 = null;
        boolean boolean6 = nodeList1.add(node5);
        java.util.ListIterator<javafx.scene.Node> nodeItor7 = nodeList1.listIterator();
        int int9 = nodeList1.lastIndexOf((java.lang.Object) (byte) 100);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        java.lang.Object obj13 = null;
        boolean boolean14 = nodeList11.remove(obj13);
        javafx.scene.Node[] nodeArray15 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList16 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList16, nodeArray15);
        boolean boolean18 = nodeList16.isEmpty();
        int int20 = nodeList16.lastIndexOf((java.lang.Object) 100);
        boolean boolean21 = nodeList11.equals((java.lang.Object) nodeList16);
        Interface.WoodTable woodTable22 = null;
        Interface.WoodTotalValues woodTotalValues23 = null;
        Interface.AddWood addWood24 = null; // flaky: new Interface.AddWood(woodTable22, woodTotalValues23);
        java.util.ArrayList<javafx.scene.Node> nodeList25 = null; // flaky: addWood24.getAll();
// flaky:         addWood24.redraw((double) 10.0f, (double) 0L);
        boolean boolean29 = nodeList11.contains((java.lang.Object) 10.0f);
        boolean boolean30 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList11);
        nodeList1.clear();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(nodeItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(nodeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test570");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        boolean boolean9 = nodeList7.isEmpty();
        int int11 = nodeList7.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable12 = null;
        Interface.WoodTotalValues woodTotalValues13 = null;
        Interface.AddWood addWood14 = null; // flaky: new Interface.AddWood(woodTable12, woodTotalValues13);
        java.util.ArrayList<javafx.scene.Node> nodeList15 = null; // flaky: addWood14.getAll();
        boolean boolean17 = false; // flaky: nodeList15.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node19 = null;
        javafx.scene.Node node20 = null; // flaky: nodeList15.set((int) (byte) 1, node19);
        boolean boolean21 = nodeList7.add(node20);
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = nodeList23.remove(obj25);
        boolean boolean27 = nodeList7.retainAll((java.util.Collection<javafx.scene.Node>) nodeList23);
        boolean boolean28 = nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList7);
        int int30 = nodeList1.lastIndexOf((java.lang.Object) (short) 0);
        int int32 = nodeList1.lastIndexOf((java.lang.Object) 10L);
        int int33 = nodeList1.size();
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node35 = nodeList1.remove((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test571");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues1.getAll();
// flaky:         woodTotalValues1.redraw((double) 2, (double) 5);
// flaky:         woodTotalValues1.redraw((double) (byte) 1, (double) 1);
        java.util.ArrayList<javafx.scene.Node> nodeList10 = null; // flaky: woodTotalValues1.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: woodTotalValues1.getAll();
        java.util.function.UnaryOperator<javafx.scene.Node> nodeUnaryOperator12 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList11.replaceAll(nodeUnaryOperator12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList10);
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
    }

    @Test
    public void test572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test572");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor8 = nodeList1.listIterator();
        int int9 = nodeList1.size();
        java.lang.Object[] objArray10 = nodeList1.toArray();
        Interface.WoodTable woodTable11 = null;
        Interface.WoodTotalValues woodTotalValues12 = null; // flaky: new Interface.WoodTotalValues(woodTable11);
        java.util.ArrayList<javafx.scene.Node> nodeList13 = null; // flaky: woodTotalValues12.getAll();
        boolean boolean14 = nodeList1.remove((java.lang.Object) woodTotalValues12);
// flaky:         woodTotalValues12.redraw((double) 10.0f, (double) (short) 1);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(nodeItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
// flaky:         org.junit.Assert.assertNotNull(nodeList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test573");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
// flaky:         woodTotalValues2.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList6 = null; // flaky: woodTotalValues2.getAll();
// flaky:         woodTotalValues2.redraw(10.0d, 1.0d);
        Interface.AddWood addWood10 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
// flaky:         addWood10.redraw((double) (byte) 1, (double) 0);
// flaky:         org.junit.Assert.assertNotNull(nodeList6);
    }

    @Test
    public void test574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test574");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator9 = nodeList1.spliterator();
        boolean boolean10 = nodeList1.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream11 = nodeList1.stream();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
// flaky:         org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(nodeStream11);
    }

    @Test
    public void test575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test575");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean15 = false; // flaky: nodeList4.contains((java.lang.Object) false);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean20 = false; // flaky: nodeList19.isEmpty();
        boolean boolean22 = false; // flaky: nodeList19.equals((java.lang.Object) 100);
        int int23 = 0; // flaky: nodeList4.lastIndexOf((java.lang.Object) nodeList19);
        int int24 = 0; // flaky: nodeList4.size();
        java.util.Iterator<javafx.scene.Node> nodeItor25 = null; // flaky: nodeList4.iterator();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
// flaky:         org.junit.Assert.assertNotNull(nodeItor25);
    }

    @Test
    public void test576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test576");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        boolean boolean33 = false; // flaky: nodeList7.add(node31);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood37.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList40 = null; // flaky: addWood37.getAll();
        javafx.scene.Node[] nodeArray42 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList43 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList43, nodeArray42);
        boolean boolean45 = nodeList43.isEmpty();
        int int47 = nodeList43.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable48 = null;
        Interface.WoodTotalValues woodTotalValues49 = null;
        Interface.AddWood addWood50 = null; // flaky: new Interface.AddWood(woodTable48, woodTotalValues49);
        java.util.ArrayList<javafx.scene.Node> nodeList51 = null; // flaky: addWood50.getAll();
        boolean boolean53 = false; // flaky: nodeList51.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node55 = null;
        javafx.scene.Node node56 = null; // flaky: nodeList51.set((int) (byte) 1, node55);
        boolean boolean57 = nodeList43.add(node56);
        javafx.scene.Node node58 = null; // flaky: nodeList40.set((int) (short) 0, node56);
// flaky:         nodeList7.add(5, node56);
        Interface.WoodTable woodTable60 = null;
        Interface.WoodTotalValues woodTotalValues61 = null;
        Interface.AddWood addWood62 = null; // flaky: new Interface.AddWood(woodTable60, woodTotalValues61);
        java.util.ArrayList<javafx.scene.Node> nodeList63 = null; // flaky: addWood62.getAll();
        boolean boolean65 = false; // flaky: nodeList63.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node67 = null;
        javafx.scene.Node node68 = null; // flaky: nodeList63.set((int) (byte) 1, node67);
        boolean boolean69 = false; // flaky: nodeList7.remove((java.lang.Object) node68);
        java.lang.Object[] objArray70 = null; // flaky: nodeList7.toArray();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
// flaky:         org.junit.Assert.assertNotNull(nodeList40);
        org.junit.Assert.assertNotNull(nodeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
// flaky:         org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
// flaky:         org.junit.Assert.assertNotNull(node58);
// flaky:         org.junit.Assert.assertNotNull(nodeList63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
// flaky:         org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
// flaky:         org.junit.Assert.assertNotNull(objArray70);
    }

    @Test
    public void test577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test577");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood2.getAll();
        boolean boolean9 = false; // flaky: nodeList8.isEmpty();
        Interface.WoodTable woodTable10 = null;
        Interface.WoodTotalValues woodTotalValues11 = null; // flaky: new Interface.WoodTotalValues(woodTable10);
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: woodTotalValues11.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList13 = null; // flaky: woodTotalValues11.getAll();
        java.util.Iterator<javafx.scene.Node> nodeItor14 = null; // flaky: nodeList13.iterator();
        java.lang.Object obj15 = null;
        boolean boolean16 = false; // flaky: nodeList13.equals(obj15);
        boolean boolean17 = false; // flaky: nodeList8.equals((java.lang.Object) boolean16);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
// flaky:         org.junit.Assert.assertNotNull(nodeList13);
// flaky:         org.junit.Assert.assertNotNull(nodeItor14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test578");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<javafx.scene.Node> nodeList10 = nodeList1.subList((int) (byte) 100, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test579");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        javafx.scene.Node[] nodeArray16 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList17 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList17, nodeArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = nodeList17.remove(obj19);
        boolean boolean21 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList17);
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        boolean boolean30 = false; // flaky: nodeList23.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList29);
        java.util.stream.Stream<javafx.scene.Node> nodeStream31 = null; // flaky: nodeList29.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator32 = null; // flaky: nodeList29.spliterator();
        boolean boolean33 = false; // flaky: nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList29);
// flaky:         nodeList29.clear();
        java.lang.Object[] objArray35 = null; // flaky: nodeList29.toArray();
        javafx.scene.Node[] nodeArray36 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList37 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList37, nodeArray36);
        boolean boolean39 = nodeList37.isEmpty();
        Interface.WoodTable woodTable40 = null;
        Interface.WoodTotalValues woodTotalValues41 = null;
        Interface.AddWood addWood42 = null; // flaky: new Interface.AddWood(woodTable40, woodTotalValues41);
        java.util.ArrayList<javafx.scene.Node> nodeList43 = null; // flaky: addWood42.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList44 = null; // flaky: addWood42.getAll();
        javafx.scene.Node[] nodeArray45 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList46 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList46, nodeArray45);
        boolean boolean48 = nodeList46.isEmpty();
        int int50 = nodeList46.lastIndexOf((java.lang.Object) 100);
        int int52 = nodeList46.lastIndexOf((java.lang.Object) 10);
        boolean boolean53 = false; // flaky: nodeList44.retainAll((java.util.Collection<javafx.scene.Node>) nodeList46);
        boolean boolean54 = false; // flaky: nodeList37.removeAll((java.util.Collection<javafx.scene.Node>) nodeList44);
        boolean boolean55 = false; // flaky: nodeList44.isEmpty();
        java.util.Iterator<javafx.scene.Node> nodeItor56 = null; // flaky: nodeList44.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor58 = null; // flaky: nodeList44.listIterator(0);
        boolean boolean59 = false; // flaky: nodeList29.addAll((java.util.Collection<javafx.scene.Node>) nodeList44);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream31);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator32);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertNotNull(objArray35);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(nodeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList43);
// flaky:         org.junit.Assert.assertNotNull(nodeList44);
        org.junit.Assert.assertNotNull(nodeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor56);
// flaky:         org.junit.Assert.assertNotNull(nodeItor58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test580");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
// flaky:         woodTotalValues1.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: woodTotalValues1.getAll();
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node[] nodeArray13 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList14 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList14, nodeArray13);
        boolean boolean16 = nodeList14.isEmpty();
        int int18 = nodeList14.lastIndexOf((java.lang.Object) 100);
        int int20 = nodeList14.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable21 = null;
        Interface.WoodTotalValues woodTotalValues22 = null;
        Interface.AddWood addWood23 = null; // flaky: new Interface.AddWood(woodTable21, woodTotalValues22);
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood23.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList25 = null; // flaky: addWood23.getAll();
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        boolean boolean29 = nodeList27.isEmpty();
        int int31 = nodeList27.lastIndexOf((java.lang.Object) 100);
        int int33 = nodeList27.lastIndexOf((java.lang.Object) 10);
        boolean boolean34 = false; // flaky: nodeList25.retainAll((java.util.Collection<javafx.scene.Node>) nodeList27);
        boolean boolean35 = nodeList14.containsAll((java.util.Collection<javafx.scene.Node>) nodeList27);
        boolean boolean36 = false; // flaky: nodeList9.addAll(1, (java.util.Collection<javafx.scene.Node>) nodeList14);
        boolean boolean37 = false; // flaky: nodeList5.addAll((java.util.Collection<javafx.scene.Node>) nodeList9);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean43 = false; // flaky: nodeList41.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node[] nodeArray45 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList46 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList46, nodeArray45);
        boolean boolean48 = nodeList46.isEmpty();
        int int50 = nodeList46.lastIndexOf((java.lang.Object) 100);
        int int52 = nodeList46.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable53 = null;
        Interface.WoodTotalValues woodTotalValues54 = null;
        Interface.AddWood addWood55 = null; // flaky: new Interface.AddWood(woodTable53, woodTotalValues54);
        java.util.ArrayList<javafx.scene.Node> nodeList56 = null; // flaky: addWood55.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList57 = null; // flaky: addWood55.getAll();
        javafx.scene.Node[] nodeArray58 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList59 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList59, nodeArray58);
        boolean boolean61 = nodeList59.isEmpty();
        int int63 = nodeList59.lastIndexOf((java.lang.Object) 100);
        int int65 = nodeList59.lastIndexOf((java.lang.Object) 10);
        boolean boolean66 = false; // flaky: nodeList57.retainAll((java.util.Collection<javafx.scene.Node>) nodeList59);
        boolean boolean67 = nodeList46.containsAll((java.util.Collection<javafx.scene.Node>) nodeList59);
        boolean boolean68 = false; // flaky: nodeList41.addAll(1, (java.util.Collection<javafx.scene.Node>) nodeList46);
        boolean boolean69 = false; // flaky: nodeList9.contains((java.lang.Object) nodeList41);
        javafx.scene.Node[] nodeArray70 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList71 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList71, nodeArray70);
        boolean boolean73 = nodeList71.isEmpty();
        int int75 = nodeList71.lastIndexOf((java.lang.Object) 100);
        boolean boolean76 = false; // flaky: nodeList41.addAll((java.util.Collection<javafx.scene.Node>) nodeList71);
        java.util.Iterator<javafx.scene.Node> nodeItor77 = nodeList71.iterator();
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(nodeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
// flaky:         org.junit.Assert.assertNotNull(nodeList25);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(nodeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList56);
// flaky:         org.junit.Assert.assertNotNull(nodeList57);
        org.junit.Assert.assertNotNull(nodeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(nodeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(nodeItor77);
    }

    @Test
    public void test581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test581");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
// flaky:         addWood16.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood16.getAll();
        boolean boolean22 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        javafx.scene.Node[] nodeArray23 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList24 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList24, nodeArray23);
        boolean boolean26 = nodeList24.isEmpty();
        int int28 = nodeList24.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable29 = null;
        Interface.WoodTotalValues woodTotalValues30 = null;
        Interface.AddWood addWood31 = null; // flaky: new Interface.AddWood(woodTable29, woodTotalValues30);
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood31.getAll();
        boolean boolean34 = false; // flaky: nodeList32.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node36 = null;
        javafx.scene.Node node37 = null; // flaky: nodeList32.set((int) (byte) 1, node36);
        boolean boolean38 = nodeList24.add(node37);
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        java.lang.Object obj42 = null;
        boolean boolean43 = nodeList40.remove(obj42);
        boolean boolean44 = nodeList24.retainAll((java.util.Collection<javafx.scene.Node>) nodeList40);
        boolean boolean45 = nodeList24.isEmpty();
        boolean boolean46 = nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList24);
        Interface.WoodTable woodTable47 = null;
        Interface.WoodTable woodTable48 = null;
        Interface.WoodTotalValues woodTotalValues49 = null; // flaky: new Interface.WoodTotalValues(woodTable48);
// flaky:         woodTotalValues49.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: woodTotalValues49.getAll();
// flaky:         woodTotalValues49.redraw(10.0d, 1.0d);
// flaky:         woodTotalValues49.redraw((double) 10, (double) 10);
        Interface.AddWood addWood60 = null; // flaky: new Interface.AddWood(woodTable47, woodTotalValues49);
        boolean boolean61 = nodeList24.contains((java.lang.Object) addWood60);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(nodeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test582");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor8 = nodeList1.listIterator();
        int int9 = nodeList1.size();
        boolean boolean10 = nodeList1.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream11 = nodeList1.parallelStream();
        javafx.scene.Node[] nodeArray12 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList13 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList13, nodeArray12);
        boolean boolean15 = nodeList13.isEmpty();
        int int17 = nodeList13.lastIndexOf((java.lang.Object) 100);
        int int19 = nodeList13.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable20 = null;
        Interface.WoodTotalValues woodTotalValues21 = null;
        Interface.AddWood addWood22 = null; // flaky: new Interface.AddWood(woodTable20, woodTotalValues21);
        java.util.ArrayList<javafx.scene.Node> nodeList23 = null; // flaky: addWood22.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood22.getAll();
        javafx.scene.Node[] nodeArray25 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList26 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList26, nodeArray25);
        boolean boolean28 = nodeList26.isEmpty();
        int int30 = nodeList26.lastIndexOf((java.lang.Object) 100);
        int int32 = nodeList26.lastIndexOf((java.lang.Object) 10);
        boolean boolean33 = false; // flaky: nodeList24.retainAll((java.util.Collection<javafx.scene.Node>) nodeList26);
        boolean boolean34 = nodeList13.containsAll((java.util.Collection<javafx.scene.Node>) nodeList26);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        boolean boolean40 = false; // flaky: nodeList38.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node42 = null;
        javafx.scene.Node node43 = null; // flaky: nodeList38.set((int) (byte) 1, node42);
        boolean boolean44 = false; // flaky: nodeList13.removeAll((java.util.Collection<javafx.scene.Node>) nodeList38);
        int int45 = nodeList1.lastIndexOf((java.lang.Object) nodeList13);
        Interface.WoodTable woodTable46 = null;
        Interface.WoodTotalValues woodTotalValues47 = null; // flaky: new Interface.WoodTotalValues(woodTable46);
        java.util.ArrayList<javafx.scene.Node> nodeList48 = null; // flaky: woodTotalValues47.getAll();
        int int49 = nodeList13.lastIndexOf((java.lang.Object) woodTotalValues47);
        java.util.ArrayList<javafx.scene.Node> nodeList50 = null; // flaky: woodTotalValues47.getAll();
        boolean boolean51 = false; // flaky: nodeList50.isEmpty();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(nodeItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(nodeStream11);
        org.junit.Assert.assertNotNull(nodeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList23);
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertNotNull(nodeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test583");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood18.getAll();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        int int28 = nodeList22.lastIndexOf((java.lang.Object) 10);
        boolean boolean29 = false; // flaky: nodeList20.retainAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        boolean boolean30 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        Interface.WoodTable woodTable31 = null;
        Interface.WoodTotalValues woodTotalValues32 = null;
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable31, woodTotalValues32);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList36 = null; // flaky: addWood33.getAll();
        boolean boolean37 = false; // flaky: nodeList22.addAll((java.util.Collection<javafx.scene.Node>) nodeList36);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator38 = nodeList22.spliterator();
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        boolean boolean42 = nodeList40.isEmpty();
        boolean boolean43 = nodeList22.containsAll((java.util.Collection<javafx.scene.Node>) nodeList40);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator44 = nodeList22.spliterator();
        java.lang.String[] strArray48 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray52 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[][] strArray53 = new java.lang.String[][] { strArray48, strArray52 };
        java.lang.String[] strArray57 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[] strArray61 = new java.lang.String[] { "", "", "hi!" };
        java.lang.String[][] strArray62 = new java.lang.String[][] { strArray57, strArray61 };
        java.lang.String[][][] strArray63 = new java.lang.String[][][] { strArray53, strArray62 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[][][] strArray64 = nodeList22.toArray(strArray63);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertNotNull(nodeList36);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator38);
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
    }

    @Test
    public void test584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test584");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
// flaky:         addWood16.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood16.getAll();
        boolean boolean22 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        java.lang.Object[] objArray23 = nodeList6.toArray();
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTotalValues woodTotalValues25 = null;
        Interface.AddWood addWood26 = null; // flaky: new Interface.AddWood(woodTable24, woodTotalValues25);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood26.getAll();
// flaky:         addWood26.redraw((double) 10.0f, (double) (-1L));
        java.util.ArrayList<javafx.scene.Node> nodeList31 = null; // flaky: addWood26.getAll();
        int int32 = nodeList6.lastIndexOf((java.lang.Object) addWood26);
        java.util.Iterator<javafx.scene.Node> nodeItor33 = nodeList6.iterator();
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        Interface.WoodTable woodTable43 = null;
        Interface.WoodTotalValues woodTotalValues44 = null;
        Interface.AddWood addWood45 = null; // flaky: new Interface.AddWood(woodTable43, woodTotalValues44);
        java.util.ArrayList<javafx.scene.Node> nodeList46 = null; // flaky: addWood45.getAll();
        boolean boolean47 = false; // flaky: nodeList46.isEmpty();
        boolean boolean48 = false; // flaky: nodeList35.removeAll((java.util.Collection<javafx.scene.Node>) nodeList46);
        java.util.ListIterator<javafx.scene.Node> nodeItor50 = null; // flaky: nodeList35.listIterator(2);
        boolean boolean51 = nodeList6.remove((java.lang.Object) nodeList35);
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node53 = nodeList6.remove((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objArray23);
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
// flaky:         org.junit.Assert.assertNotNull(nodeList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(nodeItor33);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test585");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean14 = nodeList1.isEmpty();
        java.util.function.UnaryOperator<javafx.scene.Node> nodeUnaryOperator15 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList1.replaceAll(nodeUnaryOperator15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test586");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList1.equals((java.lang.Object) nodeList6);
        javafx.scene.Node[] nodeArray12 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList13 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList13, nodeArray12);
        boolean boolean15 = nodeList13.isEmpty();
        int int17 = nodeList13.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable18 = null;
        Interface.WoodTotalValues woodTotalValues19 = null;
        Interface.AddWood addWood20 = null; // flaky: new Interface.AddWood(woodTable18, woodTotalValues19);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood20.getAll();
        boolean boolean23 = false; // flaky: nodeList21.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node25 = null;
        javafx.scene.Node node26 = null; // flaky: nodeList21.set((int) (byte) 1, node25);
        boolean boolean27 = nodeList13.add(node26);
        Interface.WoodTable woodTable28 = null;
        Interface.WoodTotalValues woodTotalValues29 = null;
        Interface.AddWood addWood30 = null; // flaky: new Interface.AddWood(woodTable28, woodTotalValues29);
        java.util.ArrayList<javafx.scene.Node> nodeList31 = null; // flaky: addWood30.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood30.getAll();
        javafx.scene.Node[] nodeArray33 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList34 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList34, nodeArray33);
        boolean boolean36 = nodeList34.isEmpty();
        int int38 = nodeList34.lastIndexOf((java.lang.Object) 100);
        int int40 = nodeList34.lastIndexOf((java.lang.Object) 10);
        boolean boolean41 = false; // flaky: nodeList32.retainAll((java.util.Collection<javafx.scene.Node>) nodeList34);
        boolean boolean42 = nodeList13.removeAll((java.util.Collection<javafx.scene.Node>) nodeList34);
        javafx.scene.Node[] nodeArray43 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList44 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList44, nodeArray43);
        boolean boolean46 = nodeList44.isEmpty();
        int int48 = nodeList44.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable49 = null;
        Interface.WoodTotalValues woodTotalValues50 = null;
        Interface.AddWood addWood51 = null; // flaky: new Interface.AddWood(woodTable49, woodTotalValues50);
        java.util.ArrayList<javafx.scene.Node> nodeList52 = null; // flaky: addWood51.getAll();
        boolean boolean54 = false; // flaky: nodeList52.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node56 = null;
        javafx.scene.Node node57 = null; // flaky: nodeList52.set((int) (byte) 1, node56);
        boolean boolean58 = nodeList44.add(node57);
        javafx.scene.Node[] nodeArray59 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList60 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList60, nodeArray59);
        java.lang.Object obj62 = null;
        boolean boolean63 = nodeList60.remove(obj62);
        boolean boolean64 = nodeList44.retainAll((java.util.Collection<javafx.scene.Node>) nodeList60);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator65 = nodeList60.spliterator();
        boolean boolean66 = nodeList34.remove((java.lang.Object) nodeSpliterator65);
        int int67 = nodeList1.lastIndexOf((java.lang.Object) nodeSpliterator65);
        nodeList1.clear();
        javafx.scene.Node[] nodeArray69 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList70 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList70, nodeArray69);
        boolean boolean72 = nodeList70.isEmpty();
        boolean boolean73 = nodeList70.isEmpty();
        nodeList70.clear();
        java.util.ListIterator<javafx.scene.Node> nodeItor76 = nodeList70.listIterator(0);
        Interface.WoodTable woodTable77 = null;
        Interface.WoodTotalValues woodTotalValues78 = null;
        Interface.AddWood addWood79 = null; // flaky: new Interface.AddWood(woodTable77, woodTotalValues78);
        java.util.ArrayList<javafx.scene.Node> nodeList80 = null; // flaky: addWood79.getAll();
        boolean boolean82 = false; // flaky: nodeList80.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node84 = null;
        javafx.scene.Node node85 = null; // flaky: nodeList80.set((int) (byte) 1, node84);
        javafx.css.Styleable[] styleableArray86 = new javafx.css.Styleable[] { node85 };
        Interface.WoodTable woodTable87 = null;
        Interface.WoodTotalValues woodTotalValues88 = null;
        Interface.AddWood addWood89 = null; // flaky: new Interface.AddWood(woodTable87, woodTotalValues88);
        java.util.ArrayList<javafx.scene.Node> nodeList90 = null; // flaky: addWood89.getAll();
        boolean boolean92 = false; // flaky: nodeList90.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node94 = null;
        javafx.scene.Node node95 = null; // flaky: nodeList90.set((int) (byte) 1, node94);
        javafx.css.Styleable[] styleableArray96 = new javafx.css.Styleable[] { node95 };
        javafx.css.Styleable[][] styleableArray97 = new javafx.css.Styleable[][] { styleableArray86, styleableArray96 };
        javafx.css.Styleable[][] styleableArray98 = nodeList70.toArray(styleableArray97);
        javafx.css.Styleable[][] styleableArray99 = nodeList1.toArray(styleableArray97);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(nodeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList31);
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertNotNull(nodeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(nodeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(nodeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(nodeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(nodeItor76);
// flaky:         org.junit.Assert.assertNotNull(nodeList80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
// flaky:         org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertNotNull(styleableArray86);
// flaky:         org.junit.Assert.assertNotNull(nodeList90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
// flaky:         org.junit.Assert.assertNotNull(node95);
        org.junit.Assert.assertNotNull(styleableArray96);
        org.junit.Assert.assertNotNull(styleableArray97);
        org.junit.Assert.assertNotNull(styleableArray98);
        org.junit.Assert.assertNotNull(styleableArray99);
    }

    @Test
    public void test587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test587");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        Interface.WoodTable woodTable17 = null;
        Interface.WoodTotalValues woodTotalValues18 = null;
        Interface.AddWood addWood19 = null; // flaky: new Interface.AddWood(woodTable17, woodTotalValues18);
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood19.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood19.getAll();
        int int22 = 0; // flaky: nodeList21.size();
        boolean boolean23 = false; // flaky: nodeList7.containsAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        javafx.scene.Node[] nodeArray24 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList25 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList25, nodeArray24);
        boolean boolean27 = nodeList25.isEmpty();
        int int29 = nodeList25.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable30 = null;
        Interface.WoodTotalValues woodTotalValues31 = null;
        Interface.AddWood addWood32 = null; // flaky: new Interface.AddWood(woodTable30, woodTotalValues31);
        java.util.ArrayList<javafx.scene.Node> nodeList33 = null; // flaky: addWood32.getAll();
        boolean boolean35 = false; // flaky: nodeList33.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node37 = null;
        javafx.scene.Node node38 = null; // flaky: nodeList33.set((int) (byte) 1, node37);
        boolean boolean39 = nodeList25.add(node38);
        javafx.scene.Node[] nodeArray40 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList41 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList41, nodeArray40);
        java.lang.Object obj43 = null;
        boolean boolean44 = nodeList41.remove(obj43);
        boolean boolean45 = nodeList25.retainAll((java.util.Collection<javafx.scene.Node>) nodeList41);
        nodeList41.clear();
        java.util.ListIterator<javafx.scene.Node> nodeItor47 = nodeList41.listIterator();
        boolean boolean48 = false; // flaky: nodeList21.containsAll((java.util.Collection<javafx.scene.Node>) nodeList41);
        java.util.ListIterator<javafx.scene.Node> nodeItor49 = null; // flaky: nodeList21.listIterator();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(nodeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
// flaky:         org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(nodeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(nodeItor47);
// flaky:         org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor49);
    }

    @Test
    public void test588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test588");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) 10.0f, (double) 0L);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood2.getAll();
        Interface.WoodTable woodTable8 = null;
        Interface.WoodTotalValues woodTotalValues9 = null;
        Interface.AddWood addWood10 = null; // flaky: new Interface.AddWood(woodTable8, woodTotalValues9);
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: addWood10.getAll();
// flaky:         addWood10.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList15 = null; // flaky: addWood10.getAll();
        java.util.stream.Stream<javafx.scene.Node> nodeStream16 = null; // flaky: nodeList15.stream();
        java.util.Iterator<javafx.scene.Node> nodeItor17 = null; // flaky: nodeList15.iterator();
        boolean boolean18 = false; // flaky: nodeList7.remove((java.lang.Object) nodeList15);
// flaky:         nodeList7.clear();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
// flaky:         org.junit.Assert.assertNotNull(nodeList15);
// flaky:         org.junit.Assert.assertNotNull(nodeStream16);
// flaky:         org.junit.Assert.assertNotNull(nodeItor17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test589");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) (byte) 10, 100.0d);
// flaky:         addWood2.redraw((double) (short) 1, 0.0d);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
    }

    @Test
    public void test590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test590");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        javafx.scene.Node[] nodeArray16 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList17 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList17, nodeArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = nodeList17.remove(obj19);
        boolean boolean21 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList17);
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        boolean boolean30 = false; // flaky: nodeList23.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList29);
        java.util.stream.Stream<javafx.scene.Node> nodeStream31 = null; // flaky: nodeList29.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator32 = null; // flaky: nodeList29.spliterator();
        boolean boolean33 = false; // flaky: nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList29);
        java.util.Iterator<javafx.scene.Node> nodeItor34 = null; // flaky: nodeList29.iterator();
        javafx.scene.Node node36 = null; // flaky: nodeList29.remove(1);
        java.lang.Class<?> wildcardClass37 = null; // flaky: nodeList29.getClass();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream31);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator32);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor34);
// flaky:         org.junit.Assert.assertNotNull(node36);
// flaky:         org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test591");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        boolean boolean13 = nodeList11.isEmpty();
        int int15 = nodeList11.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean21 = false; // flaky: nodeList19.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node23 = null;
        javafx.scene.Node node24 = null; // flaky: nodeList19.set((int) (byte) 1, node23);
        boolean boolean25 = nodeList11.add(node24);
// flaky:         nodeList1.add(1, node24);
        java.lang.Object[] objArray27 = nodeList1.toArray();
        nodeList1.clear();
        Interface.WoodTable woodTable29 = null;
        Interface.WoodTotalValues woodTotalValues30 = null;
        Interface.AddWood addWood31 = null; // flaky: new Interface.AddWood(woodTable29, woodTotalValues30);
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood31.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList33 = null; // flaky: addWood31.getAll();
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        boolean boolean37 = nodeList35.isEmpty();
        int int39 = nodeList35.lastIndexOf((java.lang.Object) 100);
        int int41 = nodeList35.lastIndexOf((java.lang.Object) 10);
        boolean boolean42 = false; // flaky: nodeList33.retainAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        java.util.ListIterator<javafx.scene.Node> nodeItor43 = null; // flaky: nodeList33.listIterator();
        boolean boolean44 = false; // flaky: nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList33);
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node46 = null; // flaky: nodeList33.get(2);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objArray27);
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
// flaky:         org.junit.Assert.assertNotNull(nodeList33);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test592");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node node5 = null;
        boolean boolean6 = nodeList1.add(node5);
        int int8 = nodeList1.indexOf((java.lang.Object) (short) 10);
        Interface.WoodTable woodTable9 = null;
        Interface.WoodTotalValues woodTotalValues10 = null;
        Interface.AddWood addWood11 = null; // flaky: new Interface.AddWood(woodTable9, woodTotalValues10);
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: addWood11.getAll();
// flaky:         addWood11.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList16 = null; // flaky: addWood11.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood11.getAll();
        javafx.scene.Node[] nodeArray18 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList19 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList19, nodeArray18);
        java.lang.Object obj21 = null;
        boolean boolean22 = nodeList19.remove(obj21);
        javafx.scene.Node node23 = null;
        boolean boolean24 = nodeList19.add(node23);
        java.util.ListIterator<javafx.scene.Node> nodeItor25 = nodeList19.listIterator();
        boolean boolean26 = false; // flaky: nodeList17.contains((java.lang.Object) nodeList19);
        java.util.ListIterator<javafx.scene.Node> nodeItor27 = nodeList19.listIterator();
        boolean boolean28 = nodeList1.remove((java.lang.Object) nodeList19);
        nodeList1.clear();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
// flaky:         org.junit.Assert.assertNotNull(nodeList16);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
        org.junit.Assert.assertNotNull(nodeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(nodeItor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(nodeItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test593");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        boolean boolean4 = false; // flaky: nodeList3.isEmpty();
        boolean boolean6 = false; // flaky: nodeList3.equals((java.lang.Object) 100);
        java.util.Iterator<javafx.scene.Node> nodeItor7 = null; // flaky: nodeList3.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor8 = null; // flaky: nodeList3.listIterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor9 = null; // flaky: nodeList3.listIterator();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor7);
// flaky:         org.junit.Assert.assertNotNull(nodeItor8);
// flaky:         org.junit.Assert.assertNotNull(nodeItor9);
    }

    @Test
    public void test594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test594");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
// flaky:         addWood2.redraw((double) (-1.0f), (double) ' ');
// flaky:         addWood2.redraw((double) (byte) -1, 0.0d);
// flaky:         addWood2.redraw((double) (short) 100, (double) 'a');
    }

    @Test
    public void test595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test595");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        boolean boolean13 = nodeList11.isEmpty();
        int int15 = nodeList11.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean21 = false; // flaky: nodeList19.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node23 = null;
        javafx.scene.Node node24 = null; // flaky: nodeList19.set((int) (byte) 1, node23);
        boolean boolean25 = nodeList11.add(node24);
// flaky:         nodeList1.add(1, node24);
        java.lang.Object[] objArray27 = nodeList1.toArray();
        nodeList1.clear();
        java.util.Collection<javafx.scene.Node> nodeCollection29 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = nodeList1.retainAll(nodeCollection29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objArray27);
    }

    @Test
    public void test596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test596");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean14 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray15 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList16 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList16, nodeArray15);
        boolean boolean18 = nodeList16.isEmpty();
        int int20 = nodeList16.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable21 = null;
        Interface.WoodTotalValues woodTotalValues22 = null;
        Interface.AddWood addWood23 = null; // flaky: new Interface.AddWood(woodTable21, woodTotalValues22);
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood23.getAll();
        boolean boolean26 = false; // flaky: nodeList24.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node28 = null;
        javafx.scene.Node node29 = null; // flaky: nodeList24.set((int) (byte) 1, node28);
        boolean boolean30 = nodeList16.add(node29);
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        Interface.WoodTable woodTable36 = null;
        Interface.WoodTotalValues woodTotalValues37 = null;
        Interface.AddWood addWood38 = null; // flaky: new Interface.AddWood(woodTable36, woodTotalValues37);
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood38.getAll();
        boolean boolean40 = false; // flaky: nodeList33.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList39);
        int int42 = nodeList33.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray44 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList45 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList45, nodeArray44);
        boolean boolean47 = nodeList45.isEmpty();
        int int49 = nodeList45.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null;
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable50, woodTotalValues51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood52.getAll();
        boolean boolean55 = false; // flaky: nodeList53.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node57 = null;
        javafx.scene.Node node58 = null; // flaky: nodeList53.set((int) (byte) 1, node57);
        boolean boolean59 = nodeList45.add(node58);
        javafx.scene.Node node60 = null; // flaky: nodeList33.set((int) (short) 0, node58);
        javafx.scene.Node node61 = nodeList16.set((int) (byte) 0, node58);
        boolean boolean62 = nodeList1.containsAll((java.util.Collection<javafx.scene.Node>) nodeList16);
        javafx.scene.Node[] nodeArray63 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList64 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList64, nodeArray63);
        boolean boolean66 = nodeList64.isEmpty();
        int int68 = nodeList64.lastIndexOf((java.lang.Object) 100);
        javafx.scene.Node[] nodeArray69 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList70 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList70, nodeArray69);
        boolean boolean72 = nodeList70.isEmpty();
        int int74 = nodeList70.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable75 = null;
        Interface.WoodTotalValues woodTotalValues76 = null;
        Interface.AddWood addWood77 = null; // flaky: new Interface.AddWood(woodTable75, woodTotalValues76);
        java.util.ArrayList<javafx.scene.Node> nodeList78 = null; // flaky: addWood77.getAll();
        boolean boolean80 = false; // flaky: nodeList78.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node82 = null;
        javafx.scene.Node node83 = null; // flaky: nodeList78.set((int) (byte) 1, node82);
        boolean boolean84 = nodeList70.add(node83);
        javafx.scene.Node[] nodeArray85 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList86 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList86, nodeArray85);
        java.lang.Object obj88 = null;
        boolean boolean89 = nodeList86.remove(obj88);
        boolean boolean90 = nodeList70.retainAll((java.util.Collection<javafx.scene.Node>) nodeList86);
        boolean boolean91 = nodeList64.addAll((java.util.Collection<javafx.scene.Node>) nodeList70);
        int int93 = nodeList64.lastIndexOf((java.lang.Object) (short) 0);
        int int94 = nodeList1.lastIndexOf((java.lang.Object) nodeList64);
        java.util.function.UnaryOperator<javafx.scene.Node> nodeUnaryOperator95 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList1.replaceAll(nodeUnaryOperator95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(nodeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
// flaky:         org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
// flaky:         org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(nodeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
// flaky:         org.junit.Assert.assertNotNull(node60);
// flaky:         org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(nodeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(nodeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
// flaky:         org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(nodeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test597");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        boolean boolean9 = nodeList7.isEmpty();
        int int11 = nodeList7.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable12 = null;
        Interface.WoodTotalValues woodTotalValues13 = null;
        Interface.AddWood addWood14 = null; // flaky: new Interface.AddWood(woodTable12, woodTotalValues13);
        java.util.ArrayList<javafx.scene.Node> nodeList15 = null; // flaky: addWood14.getAll();
        boolean boolean17 = false; // flaky: nodeList15.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node19 = null;
        javafx.scene.Node node20 = null; // flaky: nodeList15.set((int) (byte) 1, node19);
        boolean boolean21 = nodeList7.add(node20);
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = nodeList23.remove(obj25);
        boolean boolean27 = nodeList7.retainAll((java.util.Collection<javafx.scene.Node>) nodeList23);
        boolean boolean28 = nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<javafx.scene.Node> nodeList31 = nodeList1.subList((-1), (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test598");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        java.util.ListIterator<javafx.scene.Node> nodeItor5 = nodeList1.listIterator();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        boolean boolean9 = nodeList7.isEmpty();
        int int11 = nodeList7.lastIndexOf((java.lang.Object) 100);
        int int13 = nodeList7.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor14 = nodeList7.listIterator();
        int int15 = nodeList7.size();
        boolean boolean16 = nodeList7.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream17 = nodeList7.parallelStream();
        javafx.scene.Node[] nodeArray18 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList19 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList19, nodeArray18);
        boolean boolean21 = nodeList19.isEmpty();
        int int23 = nodeList19.lastIndexOf((java.lang.Object) 100);
        int int25 = nodeList19.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList30 = null; // flaky: addWood28.getAll();
        javafx.scene.Node[] nodeArray31 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList32 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList32, nodeArray31);
        boolean boolean34 = nodeList32.isEmpty();
        int int36 = nodeList32.lastIndexOf((java.lang.Object) 100);
        int int38 = nodeList32.lastIndexOf((java.lang.Object) 10);
        boolean boolean39 = false; // flaky: nodeList30.retainAll((java.util.Collection<javafx.scene.Node>) nodeList32);
        boolean boolean40 = nodeList19.containsAll((java.util.Collection<javafx.scene.Node>) nodeList32);
        Interface.WoodTable woodTable41 = null;
        Interface.WoodTotalValues woodTotalValues42 = null;
        Interface.AddWood addWood43 = null; // flaky: new Interface.AddWood(woodTable41, woodTotalValues42);
        java.util.ArrayList<javafx.scene.Node> nodeList44 = null; // flaky: addWood43.getAll();
        boolean boolean46 = false; // flaky: nodeList44.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node48 = null;
        javafx.scene.Node node49 = null; // flaky: nodeList44.set((int) (byte) 1, node48);
        boolean boolean50 = false; // flaky: nodeList19.removeAll((java.util.Collection<javafx.scene.Node>) nodeList44);
        int int51 = nodeList7.lastIndexOf((java.lang.Object) nodeList19);
        Interface.WoodTable woodTable52 = null;
        Interface.WoodTotalValues woodTotalValues53 = null; // flaky: new Interface.WoodTotalValues(woodTable52);
        java.util.ArrayList<javafx.scene.Node> nodeList54 = null; // flaky: woodTotalValues53.getAll();
        int int55 = nodeList19.lastIndexOf((java.lang.Object) woodTotalValues53);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator56 = nodeList19.spliterator();
        boolean boolean57 = nodeList1.containsAll((java.util.Collection<javafx.scene.Node>) nodeList19);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeItor5);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(nodeItor14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(nodeStream17);
        org.junit.Assert.assertNotNull(nodeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
// flaky:         org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertNotNull(nodeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
// flaky:         org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test599");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
// flaky:         addWood16.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood16.getAll();
        boolean boolean22 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        javafx.scene.Node[] nodeArray23 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList24 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList24, nodeArray23);
        boolean boolean26 = nodeList24.isEmpty();
        int int28 = nodeList24.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable29 = null;
        Interface.WoodTotalValues woodTotalValues30 = null;
        Interface.AddWood addWood31 = null; // flaky: new Interface.AddWood(woodTable29, woodTotalValues30);
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood31.getAll();
        boolean boolean34 = false; // flaky: nodeList32.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node36 = null;
        javafx.scene.Node node37 = null; // flaky: nodeList32.set((int) (byte) 1, node36);
        boolean boolean38 = nodeList24.add(node37);
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        java.lang.Object obj42 = null;
        boolean boolean43 = nodeList40.remove(obj42);
        boolean boolean44 = nodeList24.retainAll((java.util.Collection<javafx.scene.Node>) nodeList40);
        boolean boolean45 = nodeList24.isEmpty();
        boolean boolean46 = nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList24);
        Interface.WoodTable woodTable47 = null;
        Interface.WoodTotalValues woodTotalValues48 = null;
        Interface.AddWood addWood49 = null; // flaky: new Interface.AddWood(woodTable47, woodTotalValues48);
        java.util.ArrayList<javafx.scene.Node> nodeList50 = null; // flaky: addWood49.getAll();
// flaky:         addWood49.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList54 = null; // flaky: addWood49.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList55 = null; // flaky: addWood49.getAll();
        javafx.scene.Node[] nodeArray56 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList57 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList57, nodeArray56);
        java.lang.Object obj59 = null;
        boolean boolean60 = nodeList57.remove(obj59);
        javafx.scene.Node node61 = null;
        boolean boolean62 = nodeList57.add(node61);
        java.util.ListIterator<javafx.scene.Node> nodeItor63 = nodeList57.listIterator();
        boolean boolean64 = false; // flaky: nodeList55.contains((java.lang.Object) nodeList57);
        boolean boolean65 = nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList57);
        java.util.function.UnaryOperator<javafx.scene.Node> nodeUnaryOperator66 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList57.replaceAll(nodeUnaryOperator66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(nodeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList50);
// flaky:         org.junit.Assert.assertNotNull(nodeList54);
// flaky:         org.junit.Assert.assertNotNull(nodeList55);
        org.junit.Assert.assertNotNull(nodeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(nodeItor63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test600");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        Interface.WoodTable woodTable9 = null;
        Interface.WoodTotalValues woodTotalValues10 = null;
        Interface.AddWood addWood11 = null; // flaky: new Interface.AddWood(woodTable9, woodTotalValues10);
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: addWood11.getAll();
        boolean boolean13 = false; // flaky: nodeList6.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray15 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList16 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList16, nodeArray15);
        boolean boolean18 = nodeList16.isEmpty();
        int int20 = nodeList16.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable21 = null;
        Interface.WoodTotalValues woodTotalValues22 = null;
        Interface.AddWood addWood23 = null; // flaky: new Interface.AddWood(woodTable21, woodTotalValues22);
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood23.getAll();
        boolean boolean26 = false; // flaky: nodeList24.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node28 = null;
        javafx.scene.Node node29 = null; // flaky: nodeList24.set((int) (byte) 1, node28);
        boolean boolean30 = nodeList16.add(node29);
// flaky:         nodeList6.add(1, node29);
        boolean boolean32 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        java.util.stream.Stream<javafx.scene.Node> nodeStream33 = nodeList1.parallelStream();
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator43 = nodeList35.spliterator();
        java.util.stream.Stream<javafx.scene.Node> nodeStream44 = nodeList35.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator45 = nodeList35.spliterator();
        boolean boolean46 = nodeList1.contains((java.lang.Object) nodeSpliterator45);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(nodeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
// flaky:         org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(nodeStream33);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator43);
        org.junit.Assert.assertNotNull(nodeStream44);
        org.junit.Assert.assertNotNull(nodeSpliterator45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test601");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList1.equals((java.lang.Object) nodeList6);
        java.lang.Object obj12 = null;
        int int13 = nodeList1.lastIndexOf(obj12);
        javafx.scene.Node[] nodeArray14 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList15 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList15, nodeArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = nodeList15.remove(obj17);
        javafx.scene.Node[] nodeArray19 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList20 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList20, nodeArray19);
        boolean boolean22 = nodeList20.isEmpty();
        int int24 = nodeList20.lastIndexOf((java.lang.Object) 100);
        boolean boolean25 = nodeList15.equals((java.lang.Object) nodeList20);
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        boolean boolean29 = nodeList27.isEmpty();
        int int31 = nodeList27.lastIndexOf((java.lang.Object) 100);
        int int33 = nodeList27.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor34 = nodeList27.listIterator();
        int int35 = nodeList15.indexOf((java.lang.Object) nodeList27);
        int int36 = nodeList1.lastIndexOf((java.lang.Object) nodeList27);
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node38 = nodeList1.get(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(nodeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(nodeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(nodeItor34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test602");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
        Interface.AddWood addWood3 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
// flaky:         woodTotalValues2.redraw(0.0d, (double) 0L);
// flaky:         woodTotalValues2.redraw((double) (byte) -1, 100.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList10 = null; // flaky: woodTotalValues2.getAll();
        javafx.scene.Node node12 = null; // flaky: nodeList10.remove((int) (byte) 0);
// flaky:         org.junit.Assert.assertNotNull(nodeList10);
// flaky:         org.junit.Assert.assertNotNull(node12);
    }

    @Test
    public void test603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test603");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        boolean boolean5 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = nodeList7.remove(obj9);
        boolean boolean11 = nodeList7.isEmpty();
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.lang.String[] strArray15 = nodeList7.toArray(strArray14);
        java.lang.CharSequence[] charSequenceArray16 = nodeList1.toArray((java.lang.CharSequence[]) strArray14);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        Interface.WoodTable woodTable21 = null;
        Interface.WoodTotalValues woodTotalValues22 = null;
        Interface.AddWood addWood23 = null; // flaky: new Interface.AddWood(woodTable21, woodTotalValues22);
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood23.getAll();
        boolean boolean25 = false; // flaky: nodeList18.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList24);
        java.util.stream.Stream<javafx.scene.Node> nodeStream26 = null; // flaky: nodeList24.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator27 = null; // flaky: nodeList24.spliterator();
        javafx.scene.Node[] nodeArray28 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList29 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList29, nodeArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = nodeList29.remove(obj31);
        boolean boolean33 = false; // flaky: nodeList24.removeAll((java.util.Collection<javafx.scene.Node>) nodeList29);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        boolean boolean37 = nodeList35.isEmpty();
        int int39 = nodeList35.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable40 = null;
        Interface.WoodTotalValues woodTotalValues41 = null;
        Interface.AddWood addWood42 = null; // flaky: new Interface.AddWood(woodTable40, woodTotalValues41);
        java.util.ArrayList<javafx.scene.Node> nodeList43 = null; // flaky: addWood42.getAll();
        boolean boolean45 = false; // flaky: nodeList43.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node47 = null;
        javafx.scene.Node node48 = null; // flaky: nodeList43.set((int) (byte) 1, node47);
        boolean boolean49 = nodeList35.add(node48);
        boolean boolean50 = false; // flaky: nodeList24.add(node48);
        Interface.WoodTable woodTable51 = null;
        Interface.WoodTotalValues woodTotalValues52 = null;
        Interface.AddWood addWood53 = null; // flaky: new Interface.AddWood(woodTable51, woodTotalValues52);
        java.util.ArrayList<javafx.scene.Node> nodeList54 = null; // flaky: addWood53.getAll();
        boolean boolean55 = false; // flaky: nodeList54.isEmpty();
        boolean boolean56 = false; // flaky: nodeList24.addAll((java.util.Collection<javafx.scene.Node>) nodeList54);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator57 = null; // flaky: nodeList24.spliterator();
        boolean boolean58 = nodeList1.remove((java.lang.Object) nodeList24);
        javafx.scene.Node[] nodeArray59 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList60 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList60, nodeArray59);
        java.lang.Object obj62 = null;
        boolean boolean63 = nodeList60.remove(obj62);
        javafx.scene.Node[] nodeArray64 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList65 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList65, nodeArray64);
        boolean boolean67 = nodeList65.isEmpty();
        int int69 = nodeList65.lastIndexOf((java.lang.Object) 100);
        boolean boolean70 = nodeList65.isEmpty();
        nodeList65.clear();
        boolean boolean72 = nodeList60.removeAll((java.util.Collection<javafx.scene.Node>) nodeList65);
        int int73 = nodeList65.size();
        boolean boolean74 = nodeList65.isEmpty();
        boolean boolean75 = nodeList1.equals((java.lang.Object) boolean74);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
// flaky:         org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream26);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNotNull(nodeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(nodeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(nodeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test604");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        javafx.scene.Node[] nodeArray14 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList15 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList15, nodeArray14);
        boolean boolean17 = nodeList15.isEmpty();
        int int19 = nodeList15.lastIndexOf((java.lang.Object) 100);
        java.lang.Class<?> wildcardClass20 = nodeList15.getClass();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        java.lang.Class<?> wildcardClass27 = nodeList22.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray28 = new java.lang.reflect.AnnotatedElement[] { wildcardClass20, wildcardClass27 };
        java.lang.reflect.AnnotatedElement[] annotatedElementArray29 = nodeList6.toArray(annotatedElementArray28);
        javafx.scene.Node[] nodeArray30 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList31 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList31, nodeArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = nodeList31.remove(obj33);
        javafx.scene.Node[] nodeArray35 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList36 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList36, nodeArray35);
        Interface.WoodTable woodTable39 = null;
        Interface.WoodTotalValues woodTotalValues40 = null;
        Interface.AddWood addWood41 = null; // flaky: new Interface.AddWood(woodTable39, woodTotalValues40);
        java.util.ArrayList<javafx.scene.Node> nodeList42 = null; // flaky: addWood41.getAll();
        boolean boolean43 = false; // flaky: nodeList36.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList42);
        java.util.stream.Stream<javafx.scene.Node> nodeStream44 = null; // flaky: nodeList42.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator45 = null; // flaky: nodeList42.spliterator();
        javafx.scene.Node[] nodeArray46 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList47 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList47, nodeArray46);
        java.lang.Object obj49 = null;
        boolean boolean50 = nodeList47.remove(obj49);
        boolean boolean51 = false; // flaky: nodeList42.removeAll((java.util.Collection<javafx.scene.Node>) nodeList47);
        int int52 = nodeList31.lastIndexOf((java.lang.Object) nodeList47);
        javafx.scene.Node[] nodeArray53 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList54 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList54, nodeArray53);
        boolean boolean56 = nodeList54.isEmpty();
        int int58 = nodeList54.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable59 = null;
        Interface.WoodTotalValues woodTotalValues60 = null;
        Interface.AddWood addWood61 = null; // flaky: new Interface.AddWood(woodTable59, woodTotalValues60);
        java.util.ArrayList<javafx.scene.Node> nodeList62 = null; // flaky: addWood61.getAll();
        boolean boolean64 = false; // flaky: nodeList62.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node66 = null;
        javafx.scene.Node node67 = null; // flaky: nodeList62.set((int) (byte) 1, node66);
        boolean boolean68 = nodeList54.add(node67);
        javafx.scene.Node[] nodeArray69 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList70 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList70, nodeArray69);
        java.lang.Object obj72 = null;
        boolean boolean73 = nodeList70.remove(obj72);
        boolean boolean74 = nodeList54.retainAll((java.util.Collection<javafx.scene.Node>) nodeList70);
        javafx.scene.Node[] nodeArray75 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList76 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList76, nodeArray75);
        Interface.WoodTable woodTable79 = null;
        Interface.WoodTotalValues woodTotalValues80 = null;
        Interface.AddWood addWood81 = null; // flaky: new Interface.AddWood(woodTable79, woodTotalValues80);
        java.util.ArrayList<javafx.scene.Node> nodeList82 = null; // flaky: addWood81.getAll();
        boolean boolean83 = false; // flaky: nodeList76.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList82);
        java.util.stream.Stream<javafx.scene.Node> nodeStream84 = null; // flaky: nodeList82.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator85 = null; // flaky: nodeList82.spliterator();
        boolean boolean86 = false; // flaky: nodeList54.addAll((java.util.Collection<javafx.scene.Node>) nodeList82);
// flaky:         nodeList82.clear();
        boolean boolean88 = nodeList31.contains((java.lang.Object) nodeList82);
        boolean boolean89 = false; // flaky: nodeList6.containsAll((java.util.Collection<javafx.scene.Node>) nodeList82);
        java.util.stream.Stream<javafx.scene.Node> nodeStream90 = null; // flaky: nodeList82.parallelStream();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(nodeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotatedElementArray28);
        org.junit.Assert.assertNotNull(annotatedElementArray29);
        org.junit.Assert.assertNotNull(nodeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(nodeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList42);
// flaky:         org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream44);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator45);
        org.junit.Assert.assertNotNull(nodeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(nodeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(nodeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(nodeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList82);
// flaky:         org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream84);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator85);
// flaky:         org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream90);
    }

    @Test
    public void test605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test605");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        boolean boolean6 = nodeList1.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream7 = nodeList1.stream();
        java.lang.Object obj8 = null;
        int int9 = nodeList1.lastIndexOf(obj8);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        boolean boolean18 = false; // flaky: nodeList11.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList17);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator19 = nodeList11.spliterator();
        java.util.stream.Stream<javafx.scene.Node> nodeStream20 = nodeList11.parallelStream();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = nodeList22.remove(obj24);
        boolean boolean26 = nodeList22.isEmpty();
        javafx.scene.Node[] nodeArray27 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList28 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList28, nodeArray27);
        Interface.WoodTable woodTable31 = null;
        Interface.WoodTotalValues woodTotalValues32 = null;
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable31, woodTotalValues32);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
        boolean boolean35 = false; // flaky: nodeList28.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList34);
        int int37 = nodeList28.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        boolean boolean42 = nodeList40.isEmpty();
        int int44 = nodeList40.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable45 = null;
        Interface.WoodTotalValues woodTotalValues46 = null;
        Interface.AddWood addWood47 = null; // flaky: new Interface.AddWood(woodTable45, woodTotalValues46);
        java.util.ArrayList<javafx.scene.Node> nodeList48 = null; // flaky: addWood47.getAll();
        boolean boolean50 = false; // flaky: nodeList48.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node52 = null;
        javafx.scene.Node node53 = null; // flaky: nodeList48.set((int) (byte) 1, node52);
        boolean boolean54 = nodeList40.add(node53);
        javafx.scene.Node node55 = null; // flaky: nodeList28.set((int) (short) 0, node53);
        boolean boolean56 = nodeList22.add(node55);
        boolean boolean57 = nodeList11.addAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        java.util.stream.Stream<javafx.scene.Node> nodeStream58 = nodeList22.stream();
        boolean boolean59 = nodeList1.containsAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(nodeStream7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNotNull(nodeStream20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(nodeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
// flaky:         org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
// flaky:         org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(nodeStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test606");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        boolean boolean5 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = nodeList7.remove(obj9);
        boolean boolean11 = nodeList7.isEmpty();
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.lang.String[] strArray15 = nodeList7.toArray(strArray14);
        java.lang.CharSequence[] charSequenceArray16 = nodeList1.toArray((java.lang.CharSequence[]) strArray14);
        Interface.WoodTable woodTable17 = null;
        Interface.WoodTotalValues woodTotalValues18 = null;
        Interface.AddWood addWood19 = null; // flaky: new Interface.AddWood(woodTable17, woodTotalValues18);
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood19.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood19.getAll();
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        boolean boolean25 = nodeList23.isEmpty();
        int int27 = nodeList23.lastIndexOf((java.lang.Object) 100);
        int int29 = nodeList23.lastIndexOf((java.lang.Object) 10);
        boolean boolean30 = false; // flaky: nodeList21.retainAll((java.util.Collection<javafx.scene.Node>) nodeList23);
        Interface.WoodTable woodTable31 = null;
        Interface.WoodTotalValues woodTotalValues32 = null;
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable31, woodTotalValues32);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood33.getAll();
        boolean boolean36 = false; // flaky: nodeList23.addAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        javafx.scene.Node[] nodeArray37 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList38 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList38, nodeArray37);
        java.lang.Object obj40 = null;
        boolean boolean41 = nodeList38.remove(obj40);
        javafx.scene.Node node42 = null;
        boolean boolean43 = nodeList38.add(node42);
        java.util.ListIterator<javafx.scene.Node> nodeItor44 = nodeList38.listIterator();
        boolean boolean45 = nodeList23.removeAll((java.util.Collection<javafx.scene.Node>) nodeList38);
        boolean boolean46 = nodeList1.containsAll((java.util.Collection<javafx.scene.Node>) nodeList23);
        java.util.stream.Stream<javafx.scene.Node> nodeStream47 = nodeList1.parallelStream();
        java.util.stream.Stream<javafx.scene.Node> nodeStream48 = nodeList1.stream();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(charSequenceArray16);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(nodeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(nodeItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(nodeStream47);
        org.junit.Assert.assertNotNull(nodeStream48);
    }

    @Test
    public void test607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test607");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues1.getAll();
// flaky:         woodTotalValues1.redraw((double) 2, (double) 5);
// flaky:         woodTotalValues1.redraw((double) (byte) 1, (double) 1);
        java.util.ArrayList<javafx.scene.Node> nodeList10 = null; // flaky: woodTotalValues1.getAll();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        javafx.scene.Node[] nodeArray16 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList17 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList17, nodeArray16);
        boolean boolean19 = nodeList17.isEmpty();
        int int21 = nodeList17.lastIndexOf((java.lang.Object) 100);
        boolean boolean22 = nodeList17.isEmpty();
        nodeList17.clear();
        boolean boolean24 = nodeList12.removeAll((java.util.Collection<javafx.scene.Node>) nodeList17);
        Interface.WoodTable woodTable25 = null;
        Interface.WoodTotalValues woodTotalValues26 = null;
        Interface.AddWood addWood27 = null; // flaky: new Interface.AddWood(woodTable25, woodTotalValues26);
        java.util.ArrayList<javafx.scene.Node> nodeList28 = null; // flaky: addWood27.getAll();
// flaky:         addWood27.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood27.getAll();
        boolean boolean33 = false; // flaky: nodeList17.addAll((java.util.Collection<javafx.scene.Node>) nodeList32);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        boolean boolean37 = nodeList35.isEmpty();
        int int39 = nodeList35.lastIndexOf((java.lang.Object) 100);
        int int41 = nodeList35.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable42 = null;
        Interface.WoodTotalValues woodTotalValues43 = null;
        Interface.AddWood addWood44 = null; // flaky: new Interface.AddWood(woodTable42, woodTotalValues43);
        java.util.ArrayList<javafx.scene.Node> nodeList45 = null; // flaky: addWood44.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList46 = null; // flaky: addWood44.getAll();
        javafx.scene.Node[] nodeArray47 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList48 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList48, nodeArray47);
        boolean boolean50 = nodeList48.isEmpty();
        int int52 = nodeList48.lastIndexOf((java.lang.Object) 100);
        int int54 = nodeList48.lastIndexOf((java.lang.Object) 10);
        boolean boolean55 = false; // flaky: nodeList46.retainAll((java.util.Collection<javafx.scene.Node>) nodeList48);
        boolean boolean56 = nodeList35.containsAll((java.util.Collection<javafx.scene.Node>) nodeList48);
        java.util.ListIterator<javafx.scene.Node> nodeItor58 = nodeList35.listIterator(0);
        java.util.Iterator<javafx.scene.Node> nodeItor59 = nodeList35.iterator();
        int int60 = 0; // flaky: nodeList32.lastIndexOf((java.lang.Object) nodeItor59);
        boolean boolean61 = false; // flaky: nodeList10.contains((java.lang.Object) nodeList32);
        Interface.WoodTable woodTable62 = null;
        Interface.WoodTable woodTable63 = null;
        Interface.WoodTotalValues woodTotalValues64 = null; // flaky: new Interface.WoodTotalValues(woodTable63);
        java.util.ArrayList<javafx.scene.Node> nodeList65 = null; // flaky: woodTotalValues64.getAll();
        Interface.AddWood addWood66 = null; // flaky: new Interface.AddWood(woodTable62, woodTotalValues64);
        boolean boolean67 = false; // flaky: nodeList32.equals((java.lang.Object) woodTotalValues64);
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(nodeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList28);
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList45);
// flaky:         org.junit.Assert.assertNotNull(nodeList46);
        org.junit.Assert.assertNotNull(nodeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(nodeItor58);
        org.junit.Assert.assertNotNull(nodeItor59);
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test608");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) 10.0f, (double) 0L);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood2.getAll();
        int int9 = 0; // flaky: nodeList8.size();
        Interface.WoodTable woodTable11 = null;
        Interface.WoodTotalValues woodTotalValues12 = null;
        Interface.AddWood addWood13 = null; // flaky: new Interface.AddWood(woodTable11, woodTotalValues12);
        java.util.ArrayList<javafx.scene.Node> nodeList14 = null; // flaky: addWood13.getAll();
        boolean boolean15 = false; // flaky: nodeList14.isEmpty();
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        int int44 = nodeList35.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray46 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList47 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList47, nodeArray46);
        boolean boolean49 = nodeList47.isEmpty();
        int int51 = nodeList47.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable52 = null;
        Interface.WoodTotalValues woodTotalValues53 = null;
        Interface.AddWood addWood54 = null; // flaky: new Interface.AddWood(woodTable52, woodTotalValues53);
        java.util.ArrayList<javafx.scene.Node> nodeList55 = null; // flaky: addWood54.getAll();
        boolean boolean57 = false; // flaky: nodeList55.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node59 = null;
        javafx.scene.Node node60 = null; // flaky: nodeList55.set((int) (byte) 1, node59);
        boolean boolean61 = nodeList47.add(node60);
        javafx.scene.Node node62 = null; // flaky: nodeList35.set((int) (short) 0, node60);
        javafx.scene.Node node63 = nodeList18.set((int) (byte) 0, node60);
// flaky:         nodeList14.add((int) (short) 0, node63);
        boolean boolean65 = false; // flaky: nodeList8.addAll((int) (byte) 0, (java.util.Collection<javafx.scene.Node>) nodeList14);
        javafx.scene.Node[] nodeArray66 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList67 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList67, nodeArray66);
        boolean boolean69 = nodeList67.isEmpty();
        int int70 = 0; // flaky: nodeList14.indexOf((java.lang.Object) nodeList67);
        javafx.scene.Node[] nodeArray71 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList72 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList72, nodeArray71);
        boolean boolean74 = nodeList72.isEmpty();
        Interface.WoodTable woodTable75 = null;
        Interface.WoodTotalValues woodTotalValues76 = null;
        Interface.AddWood addWood77 = null; // flaky: new Interface.AddWood(woodTable75, woodTotalValues76);
        java.util.ArrayList<javafx.scene.Node> nodeList78 = null; // flaky: addWood77.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList79 = null; // flaky: addWood77.getAll();
        javafx.scene.Node[] nodeArray80 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList81 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList81, nodeArray80);
        boolean boolean83 = nodeList81.isEmpty();
        int int85 = nodeList81.lastIndexOf((java.lang.Object) 100);
        int int87 = nodeList81.lastIndexOf((java.lang.Object) 10);
        boolean boolean88 = false; // flaky: nodeList79.retainAll((java.util.Collection<javafx.scene.Node>) nodeList81);
        boolean boolean89 = false; // flaky: nodeList72.removeAll((java.util.Collection<javafx.scene.Node>) nodeList79);
        boolean boolean90 = false; // flaky: nodeList67.addAll((java.util.Collection<javafx.scene.Node>) nodeList79);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
// flaky:         org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(nodeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
// flaky:         org.junit.Assert.assertNotNull(node62);
// flaky:         org.junit.Assert.assertNotNull(node63);
// flaky:         org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(nodeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(nodeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList78);
// flaky:         org.junit.Assert.assertNotNull(nodeList79);
        org.junit.Assert.assertNotNull(nodeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test609");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        int int10 = nodeList1.indexOf((java.lang.Object) true);
        javafx.scene.Node node12 = null; // flaky: nodeList1.get((int) (byte) 0);
        java.util.Iterator<javafx.scene.Node> nodeItor13 = nodeList1.iterator();
        javafx.scene.Node[] nodeArray14 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList15 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList15, nodeArray14);
        boolean boolean17 = nodeList15.isEmpty();
        int int19 = nodeList15.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable20 = null;
        Interface.WoodTotalValues woodTotalValues21 = null;
        Interface.AddWood addWood22 = null; // flaky: new Interface.AddWood(woodTable20, woodTotalValues21);
        java.util.ArrayList<javafx.scene.Node> nodeList23 = null; // flaky: addWood22.getAll();
        boolean boolean25 = false; // flaky: nodeList23.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node27 = null;
        javafx.scene.Node node28 = null; // flaky: nodeList23.set((int) (byte) 1, node27);
        boolean boolean29 = nodeList15.add(node28);
        javafx.scene.Node[] nodeArray30 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList31 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList31, nodeArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = nodeList31.remove(obj33);
        boolean boolean35 = nodeList15.retainAll((java.util.Collection<javafx.scene.Node>) nodeList31);
        javafx.scene.Node[] nodeArray36 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList37 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList37, nodeArray36);
        Interface.WoodTable woodTable40 = null;
        Interface.WoodTotalValues woodTotalValues41 = null;
        Interface.AddWood addWood42 = null; // flaky: new Interface.AddWood(woodTable40, woodTotalValues41);
        java.util.ArrayList<javafx.scene.Node> nodeList43 = null; // flaky: addWood42.getAll();
        boolean boolean44 = false; // flaky: nodeList37.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList43);
        java.util.stream.Stream<javafx.scene.Node> nodeStream45 = null; // flaky: nodeList43.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator46 = null; // flaky: nodeList43.spliterator();
        boolean boolean47 = false; // flaky: nodeList15.addAll((java.util.Collection<javafx.scene.Node>) nodeList43);
// flaky:         nodeList43.clear();
        boolean boolean49 = false; // flaky: nodeList1.containsAll((java.util.Collection<javafx.scene.Node>) nodeList43);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
// flaky:         org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(nodeItor13);
        org.junit.Assert.assertNotNull(nodeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(nodeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(nodeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList43);
// flaky:         org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream45);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator46);
// flaky:         org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test610");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTotalValues woodTotalValues3 = null; // flaky: new Interface.WoodTotalValues(woodTable2);
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: woodTotalValues3.getAll();
        Interface.AddWood addWood5 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues3);
// flaky:         woodTotalValues3.redraw(0.0d, (double) 'a');
        Interface.AddWood addWood9 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
    }

    @Test
    public void test611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test611");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood18.getAll();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        int int28 = nodeList22.lastIndexOf((java.lang.Object) 10);
        boolean boolean29 = false; // flaky: nodeList20.retainAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        boolean boolean30 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        Interface.WoodTable woodTable31 = null;
        Interface.WoodTotalValues woodTotalValues32 = null;
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable31, woodTotalValues32);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList36 = null; // flaky: addWood33.getAll();
        boolean boolean37 = false; // flaky: nodeList22.addAll((java.util.Collection<javafx.scene.Node>) nodeList36);
        Interface.WoodTable woodTable39 = null;
        Interface.WoodTotalValues woodTotalValues40 = null;
        Interface.AddWood addWood41 = null; // flaky: new Interface.AddWood(woodTable39, woodTotalValues40);
        java.util.ArrayList<javafx.scene.Node> nodeList42 = null; // flaky: addWood41.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList43 = null; // flaky: addWood41.getAll();
        javafx.scene.Node[] nodeArray44 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList45 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList45, nodeArray44);
        boolean boolean47 = nodeList45.isEmpty();
        int int49 = nodeList45.lastIndexOf((java.lang.Object) 100);
        int int51 = nodeList45.lastIndexOf((java.lang.Object) 10);
        boolean boolean52 = false; // flaky: nodeList43.retainAll((java.util.Collection<javafx.scene.Node>) nodeList45);
        boolean boolean54 = false; // flaky: nodeList43.contains((java.lang.Object) false);
        Interface.WoodTable woodTable55 = null;
        Interface.WoodTotalValues woodTotalValues56 = null;
        Interface.AddWood addWood57 = null; // flaky: new Interface.AddWood(woodTable55, woodTotalValues56);
        java.util.ArrayList<javafx.scene.Node> nodeList58 = null; // flaky: addWood57.getAll();
        boolean boolean59 = false; // flaky: nodeList58.isEmpty();
        boolean boolean61 = false; // flaky: nodeList58.equals((java.lang.Object) 100);
        int int62 = 0; // flaky: nodeList43.lastIndexOf((java.lang.Object) nodeList58);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator63 = null; // flaky: nodeList43.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean64 = nodeList22.addAll((int) (byte) 10, (java.util.Collection<javafx.scene.Node>) nodeList43);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertNotNull(nodeList36);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList42);
// flaky:         org.junit.Assert.assertNotNull(nodeList43);
        org.junit.Assert.assertNotNull(nodeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator63);
    }

    @Test
    public void test612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test612");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        boolean boolean5 = false; // flaky: nodeList3.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node7 = null;
        javafx.scene.Node node8 = null; // flaky: nodeList3.set((int) (byte) 1, node7);
        java.util.ListIterator<javafx.scene.Node> nodeItor9 = null; // flaky: nodeList3.listIterator();
// flaky:         nodeList3.clear();
        java.util.ListIterator<javafx.scene.Node> nodeItor11 = null; // flaky: nodeList3.listIterator();
        Interface.WoodTable woodTable12 = null;
        Interface.WoodTotalValues woodTotalValues13 = null; // flaky: new Interface.WoodTotalValues(woodTable12);
        java.util.ArrayList<javafx.scene.Node> nodeList14 = null; // flaky: woodTotalValues13.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList15 = null; // flaky: woodTotalValues13.getAll();
// flaky:         woodTotalValues13.redraw((double) 2, (double) 5);
// flaky:         woodTotalValues13.redraw((double) (byte) 1, (double) 1);
        int int22 = 0; // flaky: nodeList3.indexOf((java.lang.Object) 1);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
// flaky:         org.junit.Assert.assertNotNull(node8);
// flaky:         org.junit.Assert.assertNotNull(nodeItor9);
// flaky:         org.junit.Assert.assertNotNull(nodeItor11);
// flaky:         org.junit.Assert.assertNotNull(nodeList14);
// flaky:         org.junit.Assert.assertNotNull(nodeList15);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test613");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) 10.0f, (double) 0L);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood2.getAll();
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList8.parallelStream();
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        boolean boolean13 = nodeList11.isEmpty();
        int int15 = nodeList11.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean21 = false; // flaky: nodeList19.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node23 = null;
        javafx.scene.Node node24 = null; // flaky: nodeList19.set((int) (byte) 1, node23);
        boolean boolean25 = nodeList11.add(node24);
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = nodeList27.remove(obj29);
        boolean boolean31 = nodeList11.retainAll((java.util.Collection<javafx.scene.Node>) nodeList27);
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        java.lang.Object obj35 = null;
        boolean boolean36 = nodeList33.remove(obj35);
        javafx.scene.Node node37 = null;
        boolean boolean38 = nodeList33.add(node37);
        boolean boolean39 = nodeList27.equals((java.lang.Object) boolean38);
        boolean boolean40 = false; // flaky: nodeList8.removeAll((java.util.Collection<javafx.scene.Node>) nodeList27);
        Interface.WoodTable woodTable41 = null;
        Interface.WoodTotalValues woodTotalValues42 = null; // flaky: new Interface.WoodTotalValues(woodTable41);
// flaky:         woodTotalValues42.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList46 = null; // flaky: woodTotalValues42.getAll();
        boolean boolean47 = false; // flaky: nodeList8.contains((java.lang.Object) nodeList46);
        Interface.WoodTable woodTable48 = null;
        Interface.WoodTotalValues woodTotalValues49 = null;
        Interface.AddWood addWood50 = null; // flaky: new Interface.AddWood(woodTable48, woodTotalValues49);
        java.util.ArrayList<javafx.scene.Node> nodeList51 = null; // flaky: addWood50.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList52 = null; // flaky: addWood50.getAll();
        javafx.scene.Node[] nodeArray53 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList54 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList54, nodeArray53);
        boolean boolean56 = nodeList54.isEmpty();
        int int58 = nodeList54.lastIndexOf((java.lang.Object) 100);
        int int60 = nodeList54.lastIndexOf((java.lang.Object) 10);
        boolean boolean61 = false; // flaky: nodeList52.retainAll((java.util.Collection<javafx.scene.Node>) nodeList54);
        boolean boolean63 = false; // flaky: nodeList52.contains((java.lang.Object) false);
        Interface.WoodTable woodTable64 = null;
        Interface.WoodTotalValues woodTotalValues65 = null;
        Interface.AddWood addWood66 = null; // flaky: new Interface.AddWood(woodTable64, woodTotalValues65);
        java.util.ArrayList<javafx.scene.Node> nodeList67 = null; // flaky: addWood66.getAll();
        boolean boolean68 = false; // flaky: nodeList67.isEmpty();
        boolean boolean70 = false; // flaky: nodeList67.equals((java.lang.Object) 100);
        int int71 = 0; // flaky: nodeList52.lastIndexOf((java.lang.Object) nodeList67);
        Interface.WoodTable woodTable72 = null;
        Interface.WoodTable woodTable73 = null;
        Interface.WoodTable woodTable74 = null;
        Interface.WoodTable woodTable75 = null;
        Interface.WoodTable woodTable76 = null;
        Interface.WoodTotalValues woodTotalValues77 = null; // flaky: new Interface.WoodTotalValues(woodTable76);
        Interface.AddWood addWood78 = null; // flaky: new Interface.AddWood(woodTable75, woodTotalValues77);
// flaky:         woodTotalValues77.redraw(0.0d, (double) 0L);
        Interface.AddWood addWood82 = null; // flaky: new Interface.AddWood(woodTable74, woodTotalValues77);
        Interface.AddWood addWood83 = null; // flaky: new Interface.AddWood(woodTable73, woodTotalValues77);
        Interface.AddWood addWood84 = null; // flaky: new Interface.AddWood(woodTable72, woodTotalValues77);
        boolean boolean85 = false; // flaky: nodeList52.remove((java.lang.Object) addWood84);
        int int86 = 0; // flaky: nodeList46.indexOf((java.lang.Object) nodeList52);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList51);
// flaky:         org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertNotNull(nodeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
    }

    @Test
    public void test614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test614");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood6.getAll();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        boolean boolean12 = nodeList10.isEmpty();
        int int14 = nodeList10.lastIndexOf((java.lang.Object) 100);
        int int16 = nodeList10.lastIndexOf((java.lang.Object) 10);
        boolean boolean17 = false; // flaky: nodeList8.retainAll((java.util.Collection<javafx.scene.Node>) nodeList10);
        boolean boolean18 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList8);
        boolean boolean19 = false; // flaky: nodeList8.isEmpty();
        java.util.ListIterator<javafx.scene.Node> nodeItor20 = null; // flaky: nodeList8.listIterator();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable27 = null;
        Interface.WoodTotalValues woodTotalValues28 = null;
        Interface.AddWood addWood29 = null; // flaky: new Interface.AddWood(woodTable27, woodTotalValues28);
        java.util.ArrayList<javafx.scene.Node> nodeList30 = null; // flaky: addWood29.getAll();
        boolean boolean32 = false; // flaky: nodeList30.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node34 = null;
        javafx.scene.Node node35 = null; // flaky: nodeList30.set((int) (byte) 1, node34);
        boolean boolean36 = nodeList22.add(node35);
        Interface.WoodTable woodTable37 = null;
        Interface.WoodTotalValues woodTotalValues38 = null;
        Interface.AddWood addWood39 = null; // flaky: new Interface.AddWood(woodTable37, woodTotalValues38);
        java.util.ArrayList<javafx.scene.Node> nodeList40 = null; // flaky: addWood39.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood39.getAll();
        javafx.scene.Node[] nodeArray42 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList43 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList43, nodeArray42);
        boolean boolean45 = nodeList43.isEmpty();
        int int47 = nodeList43.lastIndexOf((java.lang.Object) 100);
        int int49 = nodeList43.lastIndexOf((java.lang.Object) 10);
        boolean boolean50 = false; // flaky: nodeList41.retainAll((java.util.Collection<javafx.scene.Node>) nodeList43);
        boolean boolean51 = nodeList22.removeAll((java.util.Collection<javafx.scene.Node>) nodeList43);
        Interface.WoodTable woodTable52 = null;
        Interface.WoodTotalValues woodTotalValues53 = null;
        Interface.AddWood addWood54 = null; // flaky: new Interface.AddWood(woodTable52, woodTotalValues53);
        java.util.ArrayList<javafx.scene.Node> nodeList55 = null; // flaky: addWood54.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList56 = null; // flaky: addWood54.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList57 = null; // flaky: addWood54.getAll();
        boolean boolean58 = false; // flaky: nodeList43.addAll((java.util.Collection<javafx.scene.Node>) nodeList57);
        boolean boolean59 = false; // flaky: nodeList8.removeAll((java.util.Collection<javafx.scene.Node>) nodeList43);
        java.util.stream.Stream<javafx.scene.Node> nodeStream60 = null; // flaky: nodeList8.stream();
        java.util.stream.Stream<javafx.scene.Node> nodeStream61 = null; // flaky: nodeList8.stream();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
// flaky:         org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList40);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
        org.junit.Assert.assertNotNull(nodeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList55);
// flaky:         org.junit.Assert.assertNotNull(nodeList56);
// flaky:         org.junit.Assert.assertNotNull(nodeList57);
// flaky:         org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeStream60);
// flaky:         org.junit.Assert.assertNotNull(nodeStream61);
    }

    @Test
    public void test615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test615");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList18 = null; // flaky: addWood16.getAll();
        boolean boolean19 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList18);
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        java.lang.Object obj23 = null;
        boolean boolean24 = nodeList21.remove(obj23);
        javafx.scene.Node node25 = null;
        boolean boolean26 = nodeList21.add(node25);
        java.util.ListIterator<javafx.scene.Node> nodeItor27 = nodeList21.listIterator();
        boolean boolean28 = nodeList6.removeAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        Interface.WoodTable woodTable29 = null;
        Interface.WoodTotalValues woodTotalValues30 = null;
        Interface.AddWood addWood31 = null; // flaky: new Interface.AddWood(woodTable29, woodTotalValues30);
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood31.getAll();
        boolean boolean33 = false; // flaky: nodeList21.removeAll((java.util.Collection<javafx.scene.Node>) nodeList32);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = nodeList35.remove(obj37);
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        boolean boolean42 = nodeList40.isEmpty();
        int int44 = nodeList40.lastIndexOf((java.lang.Object) 100);
        boolean boolean45 = nodeList35.equals((java.lang.Object) nodeList40);
        java.lang.Object obj46 = null;
        int int47 = nodeList35.lastIndexOf(obj46);
        javafx.scene.Node[] nodeArray48 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList49 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList49, nodeArray48);
        java.lang.Object obj51 = null;
        boolean boolean52 = nodeList49.remove(obj51);
        javafx.scene.Node[] nodeArray53 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList54 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList54, nodeArray53);
        boolean boolean56 = nodeList54.isEmpty();
        int int58 = nodeList54.lastIndexOf((java.lang.Object) 100);
        boolean boolean59 = nodeList49.equals((java.lang.Object) nodeList54);
        javafx.scene.Node[] nodeArray60 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList61 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList61, nodeArray60);
        boolean boolean63 = nodeList61.isEmpty();
        int int65 = nodeList61.lastIndexOf((java.lang.Object) 100);
        int int67 = nodeList61.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor68 = nodeList61.listIterator();
        int int69 = nodeList49.indexOf((java.lang.Object) nodeList61);
        int int70 = nodeList35.lastIndexOf((java.lang.Object) nodeList61);
        boolean boolean71 = nodeList21.contains((java.lang.Object) nodeList61);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<javafx.scene.Node> nodeItor73 = nodeList21.listIterator((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList18);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(nodeItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(nodeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(nodeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(nodeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(nodeItor68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test616");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        boolean boolean4 = nodeList1.isEmpty();
        nodeList1.clear();
        java.util.ListIterator<javafx.scene.Node> nodeItor7 = nodeList1.listIterator(0);
        Interface.WoodTable woodTable8 = null;
        Interface.WoodTotalValues woodTotalValues9 = null;
        Interface.AddWood addWood10 = null; // flaky: new Interface.AddWood(woodTable8, woodTotalValues9);
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: addWood10.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: addWood10.getAll();
        javafx.scene.Node[] nodeArray13 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList14 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList14, nodeArray13);
        boolean boolean16 = nodeList14.isEmpty();
        int int18 = nodeList14.lastIndexOf((java.lang.Object) 100);
        int int20 = nodeList14.lastIndexOf((java.lang.Object) 10);
        boolean boolean21 = false; // flaky: nodeList12.retainAll((java.util.Collection<javafx.scene.Node>) nodeList14);
        boolean boolean23 = false; // flaky: nodeList12.contains((java.lang.Object) false);
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTotalValues woodTotalValues25 = null;
        Interface.AddWood addWood26 = null; // flaky: new Interface.AddWood(woodTable24, woodTotalValues25);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood26.getAll();
        boolean boolean28 = false; // flaky: nodeList27.isEmpty();
        boolean boolean30 = false; // flaky: nodeList27.equals((java.lang.Object) 100);
        int int31 = 0; // flaky: nodeList12.lastIndexOf((java.lang.Object) nodeList27);
        java.lang.Object[] objArray32 = null; // flaky: nodeList12.toArray();
        int int33 = nodeList1.lastIndexOf((java.lang.Object) objArray32);
        java.util.stream.Stream<javafx.scene.Node> nodeStream34 = nodeList1.stream();
        boolean boolean35 = nodeList1.isEmpty();
        Interface.WoodTable woodTable36 = null;
        Interface.WoodTotalValues woodTotalValues37 = null;
        Interface.AddWood addWood38 = null; // flaky: new Interface.AddWood(woodTable36, woodTotalValues37);
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood38.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList40 = null; // flaky: addWood38.getAll();
// flaky:         addWood38.redraw((double) 0, (double) (byte) 0);
        boolean boolean44 = nodeList1.remove((java.lang.Object) addWood38);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(nodeItor7);
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertNotNull(nodeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
// flaky:         org.junit.Assert.assertNotNull(objArray32);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(nodeStream34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
// flaky:         org.junit.Assert.assertNotNull(nodeList40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test617");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
// flaky:         woodTotalValues1.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: woodTotalValues1.getAll();
// flaky:         woodTotalValues1.redraw(10.0d, 1.0d);
// flaky:         woodTotalValues1.redraw((double) (byte) 0, (double) 1L);
// flaky:         woodTotalValues1.redraw((double) (byte) 1, (double) 0);
// flaky:         woodTotalValues1.redraw((double) (short) 0, 0.0d);
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
    }

    @Test
    public void test618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test618");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        boolean boolean33 = false; // flaky: nodeList7.add(node31);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        java.util.stream.Stream<javafx.scene.Node> nodeStream43 = null; // flaky: nodeList41.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator44 = null; // flaky: nodeList41.spliterator();
        javafx.scene.Node[] nodeArray45 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList46 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList46, nodeArray45);
        boolean boolean48 = nodeList46.isEmpty();
        int int50 = nodeList46.lastIndexOf((java.lang.Object) 100);
        boolean boolean51 = nodeList46.isEmpty();
        boolean boolean52 = false; // flaky: nodeList41.contains((java.lang.Object) boolean51);
        boolean boolean53 = false; // flaky: nodeList7.addAll((java.util.Collection<javafx.scene.Node>) nodeList41);
        int int54 = 0; // flaky: nodeList7.size();
// flaky:         nodeList7.clear();
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.lang.String[] strArray67 = new java.lang.String[] { "" };
        java.lang.String[][] strArray68 = new java.lang.String[][] { strArray57, strArray59, strArray61, strArray63, strArray65, strArray67 };
        java.lang.String[][] strArray69 = null; // flaky: nodeList7.toArray(strArray68);
// flaky:         nodeList7.clear();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream43);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertNotNull(nodeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 11 + "'", int54 == 11);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
// flaky:         org.junit.Assert.assertNotNull(strArray69);
    }

    @Test
    public void test619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test619");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood18.getAll();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        int int28 = nodeList22.lastIndexOf((java.lang.Object) 10);
        boolean boolean29 = false; // flaky: nodeList20.retainAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        boolean boolean30 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        Interface.WoodTable woodTable31 = null;
        Interface.WoodTotalValues woodTotalValues32 = null;
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable31, woodTotalValues32);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList36 = null; // flaky: addWood33.getAll();
        boolean boolean37 = false; // flaky: nodeList22.addAll((java.util.Collection<javafx.scene.Node>) nodeList36);
        int int38 = nodeList22.size();
        javafx.scene.Node node40 = null; // flaky: nodeList22.get(0);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertNotNull(nodeList36);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
// flaky:         org.junit.Assert.assertNotNull(node40);
    }

    @Test
    public void test620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test620");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        javafx.scene.Node[] nodeArray16 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList17 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList17, nodeArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = nodeList17.remove(obj19);
        boolean boolean21 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList17);
        boolean boolean22 = nodeList1.isEmpty();
        java.util.Iterator<javafx.scene.Node> nodeItor23 = nodeList1.iterator();
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTotalValues woodTotalValues25 = null;
        Interface.AddWood addWood26 = null; // flaky: new Interface.AddWood(woodTable24, woodTotalValues25);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood26.getAll();
// flaky:         addWood26.redraw((double) 10.0f, (double) 0L);
        java.util.ArrayList<javafx.scene.Node> nodeList31 = null; // flaky: addWood26.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood26.getAll();
        java.util.stream.Stream<javafx.scene.Node> nodeStream33 = null; // flaky: nodeList32.parallelStream();
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        boolean boolean37 = nodeList35.isEmpty();
        int int39 = nodeList35.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable40 = null;
        Interface.WoodTotalValues woodTotalValues41 = null;
        Interface.AddWood addWood42 = null; // flaky: new Interface.AddWood(woodTable40, woodTotalValues41);
        java.util.ArrayList<javafx.scene.Node> nodeList43 = null; // flaky: addWood42.getAll();
        boolean boolean45 = false; // flaky: nodeList43.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node47 = null;
        javafx.scene.Node node48 = null; // flaky: nodeList43.set((int) (byte) 1, node47);
        boolean boolean49 = nodeList35.add(node48);
        javafx.scene.Node[] nodeArray50 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList51 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList51, nodeArray50);
        java.lang.Object obj53 = null;
        boolean boolean54 = nodeList51.remove(obj53);
        boolean boolean55 = nodeList35.retainAll((java.util.Collection<javafx.scene.Node>) nodeList51);
        javafx.scene.Node[] nodeArray56 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList57 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList57, nodeArray56);
        java.lang.Object obj59 = null;
        boolean boolean60 = nodeList57.remove(obj59);
        javafx.scene.Node node61 = null;
        boolean boolean62 = nodeList57.add(node61);
        boolean boolean63 = nodeList51.equals((java.lang.Object) boolean62);
        boolean boolean64 = false; // flaky: nodeList32.removeAll((java.util.Collection<javafx.scene.Node>) nodeList51);
        Interface.WoodTable woodTable65 = null;
        Interface.WoodTotalValues woodTotalValues66 = null; // flaky: new Interface.WoodTotalValues(woodTable65);
// flaky:         woodTotalValues66.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList70 = null; // flaky: woodTotalValues66.getAll();
        boolean boolean71 = false; // flaky: nodeList32.contains((java.lang.Object) nodeList70);
        boolean boolean72 = false; // flaky: nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList70);
        java.util.stream.Stream<javafx.scene.Node> nodeStream73 = nodeList1.parallelStream();
        nodeList1.clear();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(nodeItor23);
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
// flaky:         org.junit.Assert.assertNotNull(nodeList31);
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
// flaky:         org.junit.Assert.assertNotNull(nodeStream33);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(nodeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(nodeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(nodeStream73);
    }

    @Test
    public void test621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test621");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        boolean boolean5 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = nodeList7.remove(obj9);
        boolean boolean11 = nodeList7.isEmpty();
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.lang.String[] strArray15 = nodeList7.toArray(strArray14);
        java.lang.CharSequence[] charSequenceArray16 = nodeList1.toArray((java.lang.CharSequence[]) strArray14);
        Interface.WoodTable woodTable17 = null;
        Interface.WoodTotalValues woodTotalValues18 = null;
        Interface.AddWood addWood19 = null; // flaky: new Interface.AddWood(woodTable17, woodTotalValues18);
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood19.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood19.getAll();
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        boolean boolean25 = nodeList23.isEmpty();
        int int27 = nodeList23.lastIndexOf((java.lang.Object) 100);
        int int29 = nodeList23.lastIndexOf((java.lang.Object) 10);
        boolean boolean30 = false; // flaky: nodeList21.retainAll((java.util.Collection<javafx.scene.Node>) nodeList23);
        Interface.WoodTable woodTable31 = null;
        Interface.WoodTotalValues woodTotalValues32 = null;
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable31, woodTotalValues32);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood33.getAll();
        boolean boolean36 = false; // flaky: nodeList23.addAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        javafx.scene.Node[] nodeArray37 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList38 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList38, nodeArray37);
        java.lang.Object obj40 = null;
        boolean boolean41 = nodeList38.remove(obj40);
        javafx.scene.Node node42 = null;
        boolean boolean43 = nodeList38.add(node42);
        java.util.ListIterator<javafx.scene.Node> nodeItor44 = nodeList38.listIterator();
        boolean boolean45 = nodeList23.removeAll((java.util.Collection<javafx.scene.Node>) nodeList38);
        boolean boolean46 = nodeList1.containsAll((java.util.Collection<javafx.scene.Node>) nodeList23);
        java.util.stream.Stream<javafx.scene.Node> nodeStream47 = nodeList1.parallelStream();
        java.util.function.UnaryOperator<javafx.scene.Node> nodeUnaryOperator48 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList1.replaceAll(nodeUnaryOperator48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(charSequenceArray16);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(nodeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(nodeItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(nodeStream47);
    }

    @Test
    public void test622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test622");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        boolean boolean14 = nodeList12.isEmpty();
        int int16 = nodeList12.lastIndexOf((java.lang.Object) 100);
        boolean boolean17 = nodeList12.isEmpty();
        boolean boolean18 = false; // flaky: nodeList7.contains((java.lang.Object) boolean17);
        javafx.scene.Node node20 = null;
        javafx.scene.Node node21 = null; // flaky: nodeList7.set((int) (byte) 1, node20);
        javafx.scene.Node[] nodeArray23 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList24 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList24, nodeArray23);
        boolean boolean26 = nodeList24.isEmpty();
        int int28 = nodeList24.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable29 = null;
        Interface.WoodTotalValues woodTotalValues30 = null;
        Interface.AddWood addWood31 = null; // flaky: new Interface.AddWood(woodTable29, woodTotalValues30);
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood31.getAll();
        boolean boolean34 = false; // flaky: nodeList32.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node36 = null;
        javafx.scene.Node node37 = null; // flaky: nodeList32.set((int) (byte) 1, node36);
        boolean boolean38 = nodeList24.add(node37);
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node39 = null; // flaky: nodeList7.set((int) (short) 100, node37);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(nodeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test623");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        javafx.scene.Node[] nodeArray16 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList17 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList17, nodeArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = nodeList17.remove(obj19);
        boolean boolean21 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList17);
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        boolean boolean30 = false; // flaky: nodeList23.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList29);
        java.util.stream.Stream<javafx.scene.Node> nodeStream31 = null; // flaky: nodeList29.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator32 = null; // flaky: nodeList29.spliterator();
        boolean boolean33 = false; // flaky: nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList29);
        java.util.Iterator<javafx.scene.Node> nodeItor34 = null; // flaky: nodeList29.iterator();
        javafx.scene.Node[] nodeArray36 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList37 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList37, nodeArray36);
        java.lang.Object obj39 = null;
        boolean boolean40 = nodeList37.remove(obj39);
        boolean boolean41 = nodeList37.isEmpty();
        Interface.WoodTable woodTable42 = null;
        Interface.WoodTotalValues woodTotalValues43 = null;
        Interface.AddWood addWood44 = null; // flaky: new Interface.AddWood(woodTable42, woodTotalValues43);
        java.util.ArrayList<javafx.scene.Node> nodeList45 = null; // flaky: addWood44.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList46 = null; // flaky: addWood44.getAll();
        javafx.scene.Node[] nodeArray47 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList48 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList48, nodeArray47);
        boolean boolean50 = nodeList48.isEmpty();
        int int52 = nodeList48.lastIndexOf((java.lang.Object) 100);
        int int54 = nodeList48.lastIndexOf((java.lang.Object) 10);
        boolean boolean55 = false; // flaky: nodeList46.retainAll((java.util.Collection<javafx.scene.Node>) nodeList48);
        Interface.WoodTable woodTable56 = null;
        Interface.WoodTotalValues woodTotalValues57 = null;
        Interface.AddWood addWood58 = null; // flaky: new Interface.AddWood(woodTable56, woodTotalValues57);
        java.util.ArrayList<javafx.scene.Node> nodeList59 = null; // flaky: addWood58.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList60 = null; // flaky: addWood58.getAll();
        boolean boolean61 = false; // flaky: nodeList48.addAll((java.util.Collection<javafx.scene.Node>) nodeList60);
        javafx.scene.Node[] nodeArray62 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList63 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList63, nodeArray62);
        java.lang.Object obj65 = null;
        boolean boolean66 = nodeList63.remove(obj65);
        javafx.scene.Node node67 = null;
        boolean boolean68 = nodeList63.add(node67);
        java.util.ListIterator<javafx.scene.Node> nodeItor69 = nodeList63.listIterator();
        boolean boolean70 = nodeList48.removeAll((java.util.Collection<javafx.scene.Node>) nodeList63);
        java.util.stream.Stream<javafx.scene.Node> nodeStream71 = nodeList48.stream();
        boolean boolean72 = nodeList37.removeAll((java.util.Collection<javafx.scene.Node>) nodeList48);
        boolean boolean73 = false; // flaky: nodeList29.addAll((int) (short) 0, (java.util.Collection<javafx.scene.Node>) nodeList48);
        Interface.WoodTable woodTable75 = null;
        Interface.WoodTotalValues woodTotalValues76 = null;
        Interface.AddWood addWood77 = null; // flaky: new Interface.AddWood(woodTable75, woodTotalValues76);
        java.util.ArrayList<javafx.scene.Node> nodeList78 = null; // flaky: addWood77.getAll();
// flaky:         addWood77.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList82 = null; // flaky: addWood77.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList83 = null; // flaky: addWood77.getAll();
        boolean boolean84 = false; // flaky: nodeList83.isEmpty();
        boolean boolean85 = false; // flaky: nodeList48.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList83);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream31);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator32);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor34);
        org.junit.Assert.assertNotNull(nodeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList45);
// flaky:         org.junit.Assert.assertNotNull(nodeList46);
        org.junit.Assert.assertNotNull(nodeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList59);
// flaky:         org.junit.Assert.assertNotNull(nodeList60);
// flaky:         org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(nodeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(nodeItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(nodeStream71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList78);
// flaky:         org.junit.Assert.assertNotNull(nodeList82);
// flaky:         org.junit.Assert.assertNotNull(nodeList83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test624");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        boolean boolean6 = nodeList1.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream7 = nodeList1.parallelStream();
        javafx.scene.Node[] nodeArray8 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList9 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList9, nodeArray8);
        boolean boolean11 = nodeList9.isEmpty();
        int int13 = nodeList9.lastIndexOf((java.lang.Object) 100);
        boolean boolean14 = nodeList9.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream15 = nodeList9.stream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator16 = nodeList9.spliterator();
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = nodeList18.remove(obj20);
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        boolean boolean25 = nodeList23.isEmpty();
        int int27 = nodeList23.lastIndexOf((java.lang.Object) 100);
        boolean boolean28 = nodeList23.isEmpty();
        nodeList23.clear();
        boolean boolean30 = nodeList18.removeAll((java.util.Collection<javafx.scene.Node>) nodeList23);
        Interface.WoodTable woodTable31 = null;
        Interface.WoodTotalValues woodTotalValues32 = null;
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable31, woodTotalValues32);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
// flaky:         addWood33.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood33.getAll();
        boolean boolean39 = false; // flaky: nodeList23.addAll((java.util.Collection<javafx.scene.Node>) nodeList38);
        javafx.scene.Node node41 = null; // flaky: nodeList23.remove((int) (short) 1);
        int int42 = nodeList9.lastIndexOf((java.lang.Object) (short) 1);
        Interface.WoodTable woodTable43 = null;
        Interface.WoodTotalValues woodTotalValues44 = null; // flaky: new Interface.WoodTotalValues(woodTable43);
        java.util.ArrayList<javafx.scene.Node> nodeList45 = null; // flaky: woodTotalValues44.getAll();
        int int47 = 0; // flaky: nodeList45.indexOf((java.lang.Object) (byte) 0);
        java.lang.Object[] objArray48 = null; // flaky: nodeList45.toArray();
        Interface.WoodTable woodTable49 = null;
        Interface.WoodTotalValues woodTotalValues50 = null;
        Interface.AddWood addWood51 = null; // flaky: new Interface.AddWood(woodTable49, woodTotalValues50);
        java.util.ArrayList<javafx.scene.Node> nodeList52 = null; // flaky: addWood51.getAll();
        boolean boolean54 = false; // flaky: nodeList52.equals((java.lang.Object) (byte) 1);
        boolean boolean55 = false; // flaky: nodeList45.addAll((java.util.Collection<javafx.scene.Node>) nodeList52);
        boolean boolean56 = false; // flaky: nodeList45.isEmpty();
        boolean boolean57 = false; // flaky: nodeList9.addAll((java.util.Collection<javafx.scene.Node>) nodeList45);
        boolean boolean58 = nodeList1.remove((java.lang.Object) boolean57);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(nodeStream7);
        org.junit.Assert.assertNotNull(nodeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(nodeStream15);
        org.junit.Assert.assertNotNull(nodeSpliterator16);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
// flaky:         org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList45);
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
// flaky:         org.junit.Assert.assertNotNull(objArray48);
// flaky:         org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test625");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues2.getAll();
        Interface.AddWood addWood4 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
// flaky:         woodTotalValues2.redraw((double) 0L, (double) '#');
// flaky:         woodTotalValues2.redraw((double) (-1L), (double) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            woodTotalValues2.renew();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
    }

    @Test
    public void test626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test626");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = nodeList6.remove(obj8);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        boolean boolean18 = false; // flaky: nodeList11.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList17);
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        boolean boolean23 = nodeList21.isEmpty();
        int int25 = nodeList21.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        boolean boolean31 = false; // flaky: nodeList29.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node33 = null;
        javafx.scene.Node node34 = null; // flaky: nodeList29.set((int) (byte) 1, node33);
        boolean boolean35 = nodeList21.add(node34);
// flaky:         nodeList11.add(1, node34);
        boolean boolean37 = nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList11);
        boolean boolean38 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList11);
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        boolean boolean42 = nodeList40.isEmpty();
        int int44 = nodeList40.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable45 = null;
        Interface.WoodTotalValues woodTotalValues46 = null;
        Interface.AddWood addWood47 = null; // flaky: new Interface.AddWood(woodTable45, woodTotalValues46);
        java.util.ArrayList<javafx.scene.Node> nodeList48 = null; // flaky: addWood47.getAll();
        boolean boolean50 = false; // flaky: nodeList48.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node52 = null;
        javafx.scene.Node node53 = null; // flaky: nodeList48.set((int) (byte) 1, node52);
        boolean boolean54 = nodeList40.add(node53);
        javafx.scene.Node[] nodeArray55 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList56 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList56, nodeArray55);
        java.lang.Object obj58 = null;
        boolean boolean59 = nodeList56.remove(obj58);
        boolean boolean60 = nodeList40.retainAll((java.util.Collection<javafx.scene.Node>) nodeList56);
        javafx.scene.Node[] nodeArray61 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList62 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList62, nodeArray61);
        boolean boolean64 = nodeList62.isEmpty();
        int int66 = nodeList62.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable67 = null;
        Interface.WoodTotalValues woodTotalValues68 = null;
        Interface.AddWood addWood69 = null; // flaky: new Interface.AddWood(woodTable67, woodTotalValues68);
        java.util.ArrayList<javafx.scene.Node> nodeList70 = null; // flaky: addWood69.getAll();
        boolean boolean72 = false; // flaky: nodeList70.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node74 = null;
        javafx.scene.Node node75 = null; // flaky: nodeList70.set((int) (byte) 1, node74);
        boolean boolean76 = nodeList62.add(node75);
        java.util.stream.Stream<javafx.scene.Node> nodeStream77 = nodeList62.stream();
        boolean boolean78 = nodeList40.equals((java.lang.Object) nodeList62);
        boolean boolean79 = nodeList11.addAll((java.util.Collection<javafx.scene.Node>) nodeList62);
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node81 = nodeList11.remove((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
// flaky:         org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(nodeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(nodeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
// flaky:         org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(nodeStream77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test627");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable8 = null;
        Interface.WoodTotalValues woodTotalValues9 = null;
        Interface.AddWood addWood10 = null; // flaky: new Interface.AddWood(woodTable8, woodTotalValues9);
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: addWood10.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: addWood10.getAll();
        javafx.scene.Node[] nodeArray13 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList14 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList14, nodeArray13);
        boolean boolean16 = nodeList14.isEmpty();
        int int18 = nodeList14.lastIndexOf((java.lang.Object) 100);
        int int20 = nodeList14.lastIndexOf((java.lang.Object) 10);
        boolean boolean21 = false; // flaky: nodeList12.retainAll((java.util.Collection<javafx.scene.Node>) nodeList14);
        boolean boolean22 = nodeList1.containsAll((java.util.Collection<javafx.scene.Node>) nodeList14);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList26);
// flaky:         nodeList26.clear();
        javafx.scene.Node[] nodeArray35 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList36 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList36, nodeArray35);
        boolean boolean38 = nodeList36.isEmpty();
        int int40 = nodeList36.lastIndexOf((java.lang.Object) 100);
        boolean boolean41 = nodeList36.isEmpty();
        nodeList36.clear();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = false; // flaky: nodeList26.addAll((int) (short) -1, (java.util.Collection<javafx.scene.Node>) nodeList36);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertNotNull(nodeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(nodeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test628");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        javafx.scene.Node[] nodeArray16 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList17 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList17, nodeArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = nodeList17.remove(obj19);
        boolean boolean21 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList17);
        nodeList17.clear();
        java.util.ListIterator<javafx.scene.Node> nodeItor23 = nodeList17.listIterator();
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTotalValues woodTotalValues25 = null; // flaky: new Interface.WoodTotalValues(woodTable24);
// flaky:         woodTotalValues25.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: woodTotalValues25.getAll();
        Interface.WoodTable woodTable30 = null;
        Interface.WoodTotalValues woodTotalValues31 = null;
        Interface.AddWood addWood32 = null; // flaky: new Interface.AddWood(woodTable30, woodTotalValues31);
        java.util.ArrayList<javafx.scene.Node> nodeList33 = null; // flaky: addWood32.getAll();
        boolean boolean35 = false; // flaky: nodeList33.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node[] nodeArray37 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList38 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList38, nodeArray37);
        boolean boolean40 = nodeList38.isEmpty();
        int int42 = nodeList38.lastIndexOf((java.lang.Object) 100);
        int int44 = nodeList38.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable45 = null;
        Interface.WoodTotalValues woodTotalValues46 = null;
        Interface.AddWood addWood47 = null; // flaky: new Interface.AddWood(woodTable45, woodTotalValues46);
        java.util.ArrayList<javafx.scene.Node> nodeList48 = null; // flaky: addWood47.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList49 = null; // flaky: addWood47.getAll();
        javafx.scene.Node[] nodeArray50 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList51 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList51, nodeArray50);
        boolean boolean53 = nodeList51.isEmpty();
        int int55 = nodeList51.lastIndexOf((java.lang.Object) 100);
        int int57 = nodeList51.lastIndexOf((java.lang.Object) 10);
        boolean boolean58 = false; // flaky: nodeList49.retainAll((java.util.Collection<javafx.scene.Node>) nodeList51);
        boolean boolean59 = nodeList38.containsAll((java.util.Collection<javafx.scene.Node>) nodeList51);
        boolean boolean60 = false; // flaky: nodeList33.addAll(1, (java.util.Collection<javafx.scene.Node>) nodeList38);
        boolean boolean61 = false; // flaky: nodeList29.addAll((java.util.Collection<javafx.scene.Node>) nodeList33);
        boolean boolean62 = nodeList17.remove((java.lang.Object) boolean61);
        javafx.scene.Node[] nodeArray63 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList64 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList64, nodeArray63);
        boolean boolean66 = nodeList64.isEmpty();
        int int68 = nodeList64.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable69 = null;
        Interface.WoodTotalValues woodTotalValues70 = null;
        Interface.AddWood addWood71 = null; // flaky: new Interface.AddWood(woodTable69, woodTotalValues70);
        java.util.ArrayList<javafx.scene.Node> nodeList72 = null; // flaky: addWood71.getAll();
        boolean boolean74 = false; // flaky: nodeList72.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node76 = null;
        javafx.scene.Node node77 = null; // flaky: nodeList72.set((int) (byte) 1, node76);
        boolean boolean78 = nodeList64.add(node77);
        java.util.stream.Stream<javafx.scene.Node> nodeStream79 = nodeList64.parallelStream();
        nodeList64.clear();
        Interface.WoodTable woodTable81 = null;
        Interface.WoodTable woodTable82 = null;
        Interface.WoodTotalValues woodTotalValues83 = null; // flaky: new Interface.WoodTotalValues(woodTable82);
        java.util.ArrayList<javafx.scene.Node> nodeList84 = null; // flaky: woodTotalValues83.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList85 = null; // flaky: woodTotalValues83.getAll();
// flaky:         woodTotalValues83.redraw((double) (short) 100, 10.0d);
        Interface.AddWood addWood89 = null; // flaky: new Interface.AddWood(woodTable81, woodTotalValues83);
// flaky:         woodTotalValues83.redraw(10.0d, (double) 1.0f);
        java.util.ArrayList<javafx.scene.Node> nodeList93 = null; // flaky: woodTotalValues83.getAll();
        int int94 = nodeList64.indexOf((java.lang.Object) woodTotalValues83);
        int int95 = nodeList17.indexOf((java.lang.Object) nodeList64);
        java.util.function.UnaryOperator<javafx.scene.Node> nodeUnaryOperator96 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList17.replaceAll(nodeUnaryOperator96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(nodeItor23);
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
// flaky:         org.junit.Assert.assertNotNull(nodeList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(nodeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList48);
// flaky:         org.junit.Assert.assertNotNull(nodeList49);
        org.junit.Assert.assertNotNull(nodeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(nodeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
// flaky:         org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(nodeStream79);
// flaky:         org.junit.Assert.assertNotNull(nodeList84);
// flaky:         org.junit.Assert.assertNotNull(nodeList85);
// flaky:         org.junit.Assert.assertNotNull(nodeList93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test629");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node node5 = null;
        boolean boolean6 = nodeList1.add(node5);
        java.util.ListIterator<javafx.scene.Node> nodeItor7 = nodeList1.listIterator();
        int int9 = nodeList1.lastIndexOf((java.lang.Object) (byte) 100);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        java.lang.Object obj13 = null;
        boolean boolean14 = nodeList11.remove(obj13);
        javafx.scene.Node[] nodeArray15 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList16 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList16, nodeArray15);
        boolean boolean18 = nodeList16.isEmpty();
        int int20 = nodeList16.lastIndexOf((java.lang.Object) 100);
        boolean boolean21 = nodeList11.equals((java.lang.Object) nodeList16);
        Interface.WoodTable woodTable22 = null;
        Interface.WoodTotalValues woodTotalValues23 = null;
        Interface.AddWood addWood24 = null; // flaky: new Interface.AddWood(woodTable22, woodTotalValues23);
        java.util.ArrayList<javafx.scene.Node> nodeList25 = null; // flaky: addWood24.getAll();
// flaky:         addWood24.redraw((double) 10.0f, (double) 0L);
        boolean boolean29 = nodeList11.contains((java.lang.Object) 10.0f);
        boolean boolean30 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList11);
        java.util.stream.Stream<javafx.scene.Node> nodeStream31 = nodeList11.parallelStream();
        java.util.function.UnaryOperator<javafx.scene.Node> nodeUnaryOperator32 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList11.replaceAll(nodeUnaryOperator32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(nodeItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(nodeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(nodeStream31);
    }

    @Test
    public void test630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test630");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        boolean boolean33 = false; // flaky: nodeList7.add(node31);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        java.util.stream.Stream<javafx.scene.Node> nodeStream43 = null; // flaky: nodeList41.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator44 = null; // flaky: nodeList41.spliterator();
        javafx.scene.Node[] nodeArray45 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList46 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList46, nodeArray45);
        boolean boolean48 = nodeList46.isEmpty();
        int int50 = nodeList46.lastIndexOf((java.lang.Object) 100);
        boolean boolean51 = nodeList46.isEmpty();
        boolean boolean52 = false; // flaky: nodeList41.contains((java.lang.Object) boolean51);
        boolean boolean53 = false; // flaky: nodeList7.addAll((java.util.Collection<javafx.scene.Node>) nodeList41);
        int int54 = 0; // flaky: nodeList7.size();
        Interface.WoodTable woodTable55 = null;
        Interface.WoodTotalValues woodTotalValues56 = null;
        Interface.AddWood addWood57 = null; // flaky: new Interface.AddWood(woodTable55, woodTotalValues56);
        java.util.ArrayList<javafx.scene.Node> nodeList58 = null; // flaky: addWood57.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList59 = null; // flaky: addWood57.getAll();
        javafx.scene.Node[] nodeArray60 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList61 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList61, nodeArray60);
        boolean boolean63 = nodeList61.isEmpty();
        int int65 = nodeList61.lastIndexOf((java.lang.Object) 100);
        int int67 = nodeList61.lastIndexOf((java.lang.Object) 10);
        boolean boolean68 = false; // flaky: nodeList59.retainAll((java.util.Collection<javafx.scene.Node>) nodeList61);
        boolean boolean70 = false; // flaky: nodeList59.contains((java.lang.Object) false);
        Interface.WoodTable woodTable71 = null;
        Interface.WoodTotalValues woodTotalValues72 = null;
        Interface.AddWood addWood73 = null; // flaky: new Interface.AddWood(woodTable71, woodTotalValues72);
        java.util.ArrayList<javafx.scene.Node> nodeList74 = null; // flaky: addWood73.getAll();
        boolean boolean75 = false; // flaky: nodeList74.isEmpty();
        boolean boolean77 = false; // flaky: nodeList74.equals((java.lang.Object) 100);
        int int78 = 0; // flaky: nodeList59.lastIndexOf((java.lang.Object) nodeList74);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator79 = null; // flaky: nodeList74.spliterator();
        boolean boolean80 = false; // flaky: nodeList7.remove((java.lang.Object) nodeList74);
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node82 = null; // flaky: nodeList7.remove((int) (byte) -1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream43);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertNotNull(nodeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 11 + "'", int54 == 11);
// flaky:         org.junit.Assert.assertNotNull(nodeList58);
// flaky:         org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertNotNull(nodeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test631");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        java.lang.Iterable[] iterableArray15 = new java.lang.Iterable[0];
        @SuppressWarnings("unchecked")
        java.lang.Iterable<javafx.scene.Node>[] nodeIterableArray16 = (java.lang.Iterable<javafx.scene.Node>[]) iterableArray15;
        java.lang.Iterable<javafx.scene.Node>[] nodeIterableArray17 = nodeList6.toArray((java.lang.Iterable<javafx.scene.Node>[]) iterableArray15);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(iterableArray15);
        org.junit.Assert.assertNotNull(nodeIterableArray16);
        org.junit.Assert.assertNotNull(nodeIterableArray17);
    }

    @Test
    public void test632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test632");
        Interface.WoodTable woodTable0 = null;
        javafx.scene.Node[] nodeArray1 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList2 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList2, nodeArray1);
        boolean boolean4 = nodeList2.isEmpty();
        int int6 = nodeList2.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable7 = null;
        Interface.WoodTotalValues woodTotalValues8 = null;
        Interface.AddWood addWood9 = null; // flaky: new Interface.AddWood(woodTable7, woodTotalValues8);
        java.util.ArrayList<javafx.scene.Node> nodeList10 = null; // flaky: addWood9.getAll();
        boolean boolean12 = false; // flaky: nodeList10.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node14 = null;
        javafx.scene.Node node15 = null; // flaky: nodeList10.set((int) (byte) 1, node14);
        boolean boolean16 = nodeList2.add(node15);
        java.util.stream.Stream<javafx.scene.Node> nodeStream17 = nodeList2.parallelStream();
        nodeList2.clear();
        Interface.WoodTable woodTable19 = null;
        Interface.WoodTable woodTable20 = null;
        Interface.WoodTotalValues woodTotalValues21 = null; // flaky: new Interface.WoodTotalValues(woodTable20);
        java.util.ArrayList<javafx.scene.Node> nodeList22 = null; // flaky: woodTotalValues21.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList23 = null; // flaky: woodTotalValues21.getAll();
// flaky:         woodTotalValues21.redraw((double) (short) 100, 10.0d);
        Interface.AddWood addWood27 = null; // flaky: new Interface.AddWood(woodTable19, woodTotalValues21);
// flaky:         woodTotalValues21.redraw(10.0d, (double) 1.0f);
        java.util.ArrayList<javafx.scene.Node> nodeList31 = null; // flaky: woodTotalValues21.getAll();
        int int32 = nodeList2.indexOf((java.lang.Object) woodTotalValues21);
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues21);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
        javafx.scene.Node[] nodeArray35 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList36 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList36, nodeArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = nodeList36.remove(obj38);
        javafx.scene.Node[] nodeArray40 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList41 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList41, nodeArray40);
        boolean boolean43 = nodeList41.isEmpty();
        int int45 = nodeList41.lastIndexOf((java.lang.Object) 100);
        boolean boolean46 = nodeList41.isEmpty();
        nodeList41.clear();
        boolean boolean48 = nodeList36.removeAll((java.util.Collection<javafx.scene.Node>) nodeList41);
        Interface.WoodTable woodTable49 = null;
        Interface.WoodTotalValues woodTotalValues50 = null;
        Interface.AddWood addWood51 = null; // flaky: new Interface.AddWood(woodTable49, woodTotalValues50);
        java.util.ArrayList<javafx.scene.Node> nodeList52 = null; // flaky: addWood51.getAll();
// flaky:         addWood51.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList56 = null; // flaky: addWood51.getAll();
        boolean boolean57 = false; // flaky: nodeList41.addAll((java.util.Collection<javafx.scene.Node>) nodeList56);
        javafx.scene.Node node59 = null; // flaky: nodeList41.remove((int) (short) 1);
        boolean boolean60 = false; // flaky: nodeList34.add(node59);
        javafx.scene.Node[] nodeArray62 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList63 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList63, nodeArray62);
        Interface.WoodTable woodTable66 = null;
        Interface.WoodTotalValues woodTotalValues67 = null;
        Interface.AddWood addWood68 = null; // flaky: new Interface.AddWood(woodTable66, woodTotalValues67);
        java.util.ArrayList<javafx.scene.Node> nodeList69 = null; // flaky: addWood68.getAll();
        boolean boolean70 = false; // flaky: nodeList63.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList69);
        javafx.scene.Node[] nodeArray72 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList73 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList73, nodeArray72);
        boolean boolean75 = nodeList73.isEmpty();
        int int77 = nodeList73.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable78 = null;
        Interface.WoodTotalValues woodTotalValues79 = null;
        Interface.AddWood addWood80 = null; // flaky: new Interface.AddWood(woodTable78, woodTotalValues79);
        java.util.ArrayList<javafx.scene.Node> nodeList81 = null; // flaky: addWood80.getAll();
        boolean boolean83 = false; // flaky: nodeList81.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node85 = null;
        javafx.scene.Node node86 = null; // flaky: nodeList81.set((int) (byte) 1, node85);
        boolean boolean87 = nodeList73.add(node86);
// flaky:         nodeList63.add(1, node86);
        java.util.Iterator<javafx.scene.Node> nodeItor89 = nodeList63.iterator();
        javafx.scene.Node node91 = null; // flaky: nodeList63.remove((int) (byte) 1);
        javafx.scene.Node node92 = null; // flaky: nodeList34.set(5, node91);
        org.junit.Assert.assertNotNull(nodeArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(nodeStream17);
// flaky:         org.junit.Assert.assertNotNull(nodeList22);
// flaky:         org.junit.Assert.assertNotNull(nodeList23);
// flaky:         org.junit.Assert.assertNotNull(nodeList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
        org.junit.Assert.assertNotNull(nodeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(nodeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList52);
// flaky:         org.junit.Assert.assertNotNull(nodeList56);
// flaky:         org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
// flaky:         org.junit.Assert.assertNotNull(node59);
// flaky:         org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(nodeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList69);
// flaky:         org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(nodeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
// flaky:         org.junit.Assert.assertNotNull(node86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(nodeItor89);
// flaky:         org.junit.Assert.assertNotNull(node91);
// flaky:         org.junit.Assert.assertNotNull(node92);
    }

    @Test
    public void test633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test633");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood6.getAll();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        boolean boolean12 = nodeList10.isEmpty();
        int int14 = nodeList10.lastIndexOf((java.lang.Object) 100);
        int int16 = nodeList10.lastIndexOf((java.lang.Object) 10);
        boolean boolean17 = false; // flaky: nodeList8.retainAll((java.util.Collection<javafx.scene.Node>) nodeList10);
        boolean boolean18 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList8);
        java.util.List<javafx.scene.Node> nodeList21 = null; // flaky: nodeList8.subList(0, (int) (byte) 0);
        java.util.stream.Stream<javafx.scene.Node> nodeStream22 = null; // flaky: nodeList21.stream();
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null; // flaky: new Interface.WoodTotalValues(woodTable23);
        java.util.ArrayList<javafx.scene.Node> nodeList25 = null; // flaky: woodTotalValues24.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: woodTotalValues24.getAll();
        java.util.Iterator<javafx.scene.Node> nodeItor27 = null; // flaky: nodeList26.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor28 = null; // flaky: nodeList26.listIterator();
        javafx.scene.Node[] nodeArray29 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList30 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList30, nodeArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = nodeList30.remove(obj32);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        boolean boolean37 = nodeList35.isEmpty();
        int int39 = nodeList35.lastIndexOf((java.lang.Object) 100);
        boolean boolean40 = nodeList30.equals((java.lang.Object) nodeList35);
        Interface.WoodTable woodTable41 = null;
        Interface.WoodTotalValues woodTotalValues42 = null;
        Interface.AddWood addWood43 = null; // flaky: new Interface.AddWood(woodTable41, woodTotalValues42);
        java.util.ArrayList<javafx.scene.Node> nodeList44 = null; // flaky: addWood43.getAll();
// flaky:         addWood43.redraw((double) 10.0f, (double) 0L);
        boolean boolean48 = nodeList30.contains((java.lang.Object) 10.0f);
        Interface.WoodTable woodTable49 = null;
        Interface.WoodTotalValues woodTotalValues50 = null;
        Interface.AddWood addWood51 = null; // flaky: new Interface.AddWood(woodTable49, woodTotalValues50);
        java.util.ArrayList<javafx.scene.Node> nodeList52 = null; // flaky: addWood51.getAll();
        boolean boolean54 = false; // flaky: nodeList52.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node[] nodeArray56 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList57 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList57, nodeArray56);
        boolean boolean59 = nodeList57.isEmpty();
        int int61 = nodeList57.lastIndexOf((java.lang.Object) 100);
        int int63 = nodeList57.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable64 = null;
        Interface.WoodTotalValues woodTotalValues65 = null;
        Interface.AddWood addWood66 = null; // flaky: new Interface.AddWood(woodTable64, woodTotalValues65);
        java.util.ArrayList<javafx.scene.Node> nodeList67 = null; // flaky: addWood66.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList68 = null; // flaky: addWood66.getAll();
        javafx.scene.Node[] nodeArray69 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList70 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList70, nodeArray69);
        boolean boolean72 = nodeList70.isEmpty();
        int int74 = nodeList70.lastIndexOf((java.lang.Object) 100);
        int int76 = nodeList70.lastIndexOf((java.lang.Object) 10);
        boolean boolean77 = false; // flaky: nodeList68.retainAll((java.util.Collection<javafx.scene.Node>) nodeList70);
        boolean boolean78 = nodeList57.containsAll((java.util.Collection<javafx.scene.Node>) nodeList70);
        boolean boolean79 = false; // flaky: nodeList52.addAll(1, (java.util.Collection<javafx.scene.Node>) nodeList57);
        boolean boolean80 = false; // flaky: nodeList30.retainAll((java.util.Collection<javafx.scene.Node>) nodeList52);
        boolean boolean81 = false; // flaky: nodeList26.remove((java.lang.Object) nodeList52);
        boolean boolean82 = false; // flaky: nodeList21.equals((java.lang.Object) nodeList26);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertNotNull(nodeStream22);
// flaky:         org.junit.Assert.assertNotNull(nodeList25);
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
// flaky:         org.junit.Assert.assertNotNull(nodeItor27);
// flaky:         org.junit.Assert.assertNotNull(nodeItor28);
        org.junit.Assert.assertNotNull(nodeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(nodeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList67);
// flaky:         org.junit.Assert.assertNotNull(nodeList68);
        org.junit.Assert.assertNotNull(nodeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test634");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor8 = nodeList1.listIterator();
        int int9 = nodeList1.size();
        boolean boolean10 = nodeList1.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream11 = nodeList1.parallelStream();
        javafx.scene.Node[] nodeArray12 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList13 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList13, nodeArray12);
        boolean boolean15 = nodeList13.isEmpty();
        int int17 = nodeList13.lastIndexOf((java.lang.Object) 100);
        int int19 = nodeList13.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable20 = null;
        Interface.WoodTotalValues woodTotalValues21 = null;
        Interface.AddWood addWood22 = null; // flaky: new Interface.AddWood(woodTable20, woodTotalValues21);
        java.util.ArrayList<javafx.scene.Node> nodeList23 = null; // flaky: addWood22.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood22.getAll();
        javafx.scene.Node[] nodeArray25 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList26 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList26, nodeArray25);
        boolean boolean28 = nodeList26.isEmpty();
        int int30 = nodeList26.lastIndexOf((java.lang.Object) 100);
        int int32 = nodeList26.lastIndexOf((java.lang.Object) 10);
        boolean boolean33 = false; // flaky: nodeList24.retainAll((java.util.Collection<javafx.scene.Node>) nodeList26);
        boolean boolean34 = nodeList13.containsAll((java.util.Collection<javafx.scene.Node>) nodeList26);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        boolean boolean40 = false; // flaky: nodeList38.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node42 = null;
        javafx.scene.Node node43 = null; // flaky: nodeList38.set((int) (byte) 1, node42);
        boolean boolean44 = false; // flaky: nodeList13.removeAll((java.util.Collection<javafx.scene.Node>) nodeList38);
        int int45 = nodeList1.lastIndexOf((java.lang.Object) nodeList13);
        javafx.scene.Node[] nodeArray46 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList47 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList47, nodeArray46);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null;
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable50, woodTotalValues51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood52.getAll();
        boolean boolean54 = false; // flaky: nodeList47.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList53);
        int int56 = nodeList47.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray58 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList59 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList59, nodeArray58);
        boolean boolean61 = nodeList59.isEmpty();
        int int63 = nodeList59.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable64 = null;
        Interface.WoodTotalValues woodTotalValues65 = null;
        Interface.AddWood addWood66 = null; // flaky: new Interface.AddWood(woodTable64, woodTotalValues65);
        java.util.ArrayList<javafx.scene.Node> nodeList67 = null; // flaky: addWood66.getAll();
        boolean boolean69 = false; // flaky: nodeList67.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node71 = null;
        javafx.scene.Node node72 = null; // flaky: nodeList67.set((int) (byte) 1, node71);
        boolean boolean73 = nodeList59.add(node72);
        javafx.scene.Node node74 = null; // flaky: nodeList47.set((int) (short) 0, node72);
        boolean boolean75 = nodeList13.containsAll((java.util.Collection<javafx.scene.Node>) nodeList47);
        nodeList13.clear();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(nodeItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(nodeStream11);
        org.junit.Assert.assertNotNull(nodeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList23);
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertNotNull(nodeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(nodeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
// flaky:         org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(nodeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
// flaky:         org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
// flaky:         org.junit.Assert.assertNotNull(node74);
// flaky:         org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test635");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        boolean boolean5 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = nodeList7.remove(obj9);
        boolean boolean11 = nodeList7.isEmpty();
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.lang.String[] strArray15 = nodeList7.toArray(strArray14);
        java.lang.CharSequence[] charSequenceArray16 = nodeList1.toArray((java.lang.CharSequence[]) strArray14);
        Interface.WoodTable woodTable17 = null;
        Interface.WoodTotalValues woodTotalValues18 = null;
        Interface.AddWood addWood19 = null; // flaky: new Interface.AddWood(woodTable17, woodTotalValues18);
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood19.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood19.getAll();
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        boolean boolean25 = nodeList23.isEmpty();
        int int27 = nodeList23.lastIndexOf((java.lang.Object) 100);
        int int29 = nodeList23.lastIndexOf((java.lang.Object) 10);
        boolean boolean30 = false; // flaky: nodeList21.retainAll((java.util.Collection<javafx.scene.Node>) nodeList23);
        Interface.WoodTable woodTable31 = null;
        Interface.WoodTotalValues woodTotalValues32 = null;
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable31, woodTotalValues32);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood33.getAll();
        boolean boolean36 = false; // flaky: nodeList23.addAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        javafx.scene.Node[] nodeArray37 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList38 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList38, nodeArray37);
        java.lang.Object obj40 = null;
        boolean boolean41 = nodeList38.remove(obj40);
        javafx.scene.Node node42 = null;
        boolean boolean43 = nodeList38.add(node42);
        java.util.ListIterator<javafx.scene.Node> nodeItor44 = nodeList38.listIterator();
        boolean boolean45 = nodeList23.removeAll((java.util.Collection<javafx.scene.Node>) nodeList38);
        boolean boolean46 = nodeList1.containsAll((java.util.Collection<javafx.scene.Node>) nodeList23);
        Interface.WoodTable woodTable47 = null;
        Interface.WoodTotalValues woodTotalValues48 = null;
        Interface.AddWood addWood49 = null; // flaky: new Interface.AddWood(woodTable47, woodTotalValues48);
        java.util.ArrayList<javafx.scene.Node> nodeList50 = null; // flaky: addWood49.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList51 = null; // flaky: addWood49.getAll();
        javafx.scene.Node[] nodeArray52 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList53 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList53, nodeArray52);
        boolean boolean55 = nodeList53.isEmpty();
        int int57 = nodeList53.lastIndexOf((java.lang.Object) 100);
        int int59 = nodeList53.lastIndexOf((java.lang.Object) 10);
        boolean boolean60 = false; // flaky: nodeList51.retainAll((java.util.Collection<javafx.scene.Node>) nodeList53);
        Interface.WoodTable woodTable61 = null;
        Interface.WoodTotalValues woodTotalValues62 = null;
        Interface.AddWood addWood63 = null; // flaky: new Interface.AddWood(woodTable61, woodTotalValues62);
        java.util.ArrayList<javafx.scene.Node> nodeList64 = null; // flaky: addWood63.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList65 = null; // flaky: addWood63.getAll();
        boolean boolean66 = false; // flaky: nodeList53.addAll((java.util.Collection<javafx.scene.Node>) nodeList65);
        boolean boolean67 = nodeList23.containsAll((java.util.Collection<javafx.scene.Node>) nodeList53);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<javafx.scene.Node> nodeItor69 = nodeList53.listIterator((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(charSequenceArray16);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(nodeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(nodeItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList50);
// flaky:         org.junit.Assert.assertNotNull(nodeList51);
        org.junit.Assert.assertNotNull(nodeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList64);
// flaky:         org.junit.Assert.assertNotNull(nodeList65);
// flaky:         org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test636");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
// flaky:         woodTotalValues1.redraw((double) 0L, (double) 100.0f);
// flaky:         woodTotalValues1.redraw((double) 1L, (double) 0L);
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
    }

    @Test
    public void test637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test637");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood18.getAll();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        int int28 = nodeList22.lastIndexOf((java.lang.Object) 10);
        boolean boolean29 = false; // flaky: nodeList20.retainAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        boolean boolean30 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        Interface.WoodTable woodTable31 = null;
        Interface.WoodTotalValues woodTotalValues32 = null;
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable31, woodTotalValues32);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList36 = null; // flaky: addWood33.getAll();
        boolean boolean37 = false; // flaky: nodeList22.addAll((java.util.Collection<javafx.scene.Node>) nodeList36);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator38 = nodeList22.spliterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor40 = nodeList22.listIterator(0);
        java.util.ListIterator<javafx.scene.Node> nodeItor41 = nodeList22.listIterator();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertNotNull(nodeList36);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator38);
        org.junit.Assert.assertNotNull(nodeItor40);
        org.junit.Assert.assertNotNull(nodeItor41);
    }

    @Test
    public void test638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test638");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: woodTotalValues2.getAll();
// flaky:         woodTotalValues2.redraw((double) 2, (double) 5);
// flaky:         woodTotalValues2.redraw((double) (byte) 1, (double) 1);
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: woodTotalValues2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: woodTotalValues2.getAll();
// flaky:         woodTotalValues2.redraw((double) (short) 1, 1.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList16 = null; // flaky: woodTotalValues2.getAll();
        Interface.AddWood addWood17 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
        java.util.ArrayList<javafx.scene.Node> nodeList18 = null; // flaky: woodTotalValues2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: woodTotalValues2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: woodTotalValues2.getAll();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
// flaky:         org.junit.Assert.assertNotNull(nodeList16);
// flaky:         org.junit.Assert.assertNotNull(nodeList18);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
    }

    @Test
    public void test639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test639");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray7 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList8 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList8, nodeArray7);
        boolean boolean10 = nodeList8.isEmpty();
        int int12 = nodeList8.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable13 = null;
        Interface.WoodTotalValues woodTotalValues14 = null;
        Interface.AddWood addWood15 = null; // flaky: new Interface.AddWood(woodTable13, woodTotalValues14);
        java.util.ArrayList<javafx.scene.Node> nodeList16 = null; // flaky: addWood15.getAll();
        boolean boolean18 = false; // flaky: nodeList16.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node20 = null;
        javafx.scene.Node node21 = null; // flaky: nodeList16.set((int) (byte) 1, node20);
        boolean boolean22 = nodeList8.add(node21);
        javafx.scene.Node node23 = null; // flaky: nodeList5.set((int) (short) 0, node21);
        javafx.scene.Node[] nodeArray24 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList25 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList25, nodeArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = nodeList25.remove(obj27);
        javafx.scene.Node[] nodeArray29 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList30 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList30, nodeArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = nodeList30.remove(obj32);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        javafx.scene.Node[] nodeArray44 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList45 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList45, nodeArray44);
        boolean boolean47 = nodeList45.isEmpty();
        int int49 = nodeList45.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null;
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable50, woodTotalValues51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood52.getAll();
        boolean boolean55 = false; // flaky: nodeList53.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node57 = null;
        javafx.scene.Node node58 = null; // flaky: nodeList53.set((int) (byte) 1, node57);
        boolean boolean59 = nodeList45.add(node58);
// flaky:         nodeList35.add(1, node58);
        boolean boolean61 = nodeList30.retainAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        boolean boolean62 = nodeList25.retainAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        boolean boolean63 = false; // flaky: nodeList5.retainAll((java.util.Collection<javafx.scene.Node>) nodeList25);
        javafx.scene.Node node64 = null;
        boolean boolean65 = false; // flaky: nodeList5.add(node64);
        Interface.WoodTable woodTable67 = null;
        Interface.WoodTotalValues woodTotalValues68 = null;
        Interface.AddWood addWood69 = null; // flaky: new Interface.AddWood(woodTable67, woodTotalValues68);
        java.util.ArrayList<javafx.scene.Node> nodeList70 = null; // flaky: addWood69.getAll();
        boolean boolean71 = false; // flaky: nodeList70.isEmpty();
        boolean boolean73 = false; // flaky: nodeList70.equals((java.lang.Object) 100);
        java.util.Iterator<javafx.scene.Node> nodeItor74 = null; // flaky: nodeList70.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor75 = null; // flaky: nodeList70.listIterator();
        javafx.scene.Node node77 = null; // flaky: nodeList70.get(1);
        javafx.scene.Node node78 = null; // flaky: nodeList5.set((int) (short) 0, node77);
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node80 = null; // flaky: nodeList5.remove((int) (short) -1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(nodeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
// flaky:         org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(nodeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(nodeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(nodeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor74);
// flaky:         org.junit.Assert.assertNotNull(nodeItor75);
// flaky:         org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNull(node78);
    }

    @Test
    public void test640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test640");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        boolean boolean13 = nodeList11.isEmpty();
        int int15 = nodeList11.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean21 = false; // flaky: nodeList19.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node23 = null;
        javafx.scene.Node node24 = null; // flaky: nodeList19.set((int) (byte) 1, node23);
        boolean boolean25 = nodeList11.add(node24);
// flaky:         nodeList1.add(1, node24);
        java.lang.Object[] objArray27 = nodeList1.toArray();
        nodeList1.clear();
        nodeList1.clear();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objArray27);
    }

    @Test
    public void test641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test641");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues2.getAll();
        Interface.AddWood addWood4 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: woodTotalValues2.getAll();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = nodeList7.remove(obj9);
        boolean boolean11 = nodeList7.isEmpty();
        javafx.scene.Node[] nodeArray12 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList13 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList13, nodeArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = nodeList13.remove(obj15);
        boolean boolean17 = nodeList13.isEmpty();
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!" };
        java.lang.String[] strArray21 = nodeList13.toArray(strArray20);
        java.lang.CharSequence[] charSequenceArray22 = nodeList7.toArray((java.lang.CharSequence[]) strArray20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence[] charSequenceArray23 = null; // flaky: nodeList5.toArray((java.lang.CharSequence[]) strArray20);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(nodeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(charSequenceArray22);
    }

    @Test
    public void test642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test642");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        int int10 = nodeList1.indexOf((java.lang.Object) true);
        javafx.scene.Node node12 = null; // flaky: nodeList1.get((int) (byte) 0);
        Interface.WoodTable woodTable13 = null;
        Interface.WoodTotalValues woodTotalValues14 = null;
        Interface.AddWood addWood15 = null; // flaky: new Interface.AddWood(woodTable13, woodTotalValues14);
        java.util.ArrayList<javafx.scene.Node> nodeList16 = null; // flaky: addWood15.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood15.getAll();
        javafx.scene.Node[] nodeArray18 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList19 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList19, nodeArray18);
        boolean boolean21 = nodeList19.isEmpty();
        int int23 = nodeList19.lastIndexOf((java.lang.Object) 100);
        int int25 = nodeList19.lastIndexOf((java.lang.Object) 10);
        boolean boolean26 = false; // flaky: nodeList17.retainAll((java.util.Collection<javafx.scene.Node>) nodeList19);
        javafx.scene.Node[] nodeArray27 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList28 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList28, nodeArray27);
        boolean boolean30 = nodeList28.isEmpty();
        int int32 = nodeList28.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable33 = null;
        Interface.WoodTotalValues woodTotalValues34 = null;
        Interface.AddWood addWood35 = null; // flaky: new Interface.AddWood(woodTable33, woodTotalValues34);
        java.util.ArrayList<javafx.scene.Node> nodeList36 = null; // flaky: addWood35.getAll();
        boolean boolean38 = false; // flaky: nodeList36.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node40 = null;
        javafx.scene.Node node41 = null; // flaky: nodeList36.set((int) (byte) 1, node40);
        boolean boolean42 = nodeList28.add(node41);
        java.util.stream.Stream<javafx.scene.Node> nodeStream43 = nodeList28.stream();
        boolean boolean44 = nodeList19.equals((java.lang.Object) nodeStream43);
        boolean boolean45 = nodeList19.isEmpty();
        boolean boolean46 = nodeList1.remove((java.lang.Object) nodeList19);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator47 = nodeList19.spliterator();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
// flaky:         org.junit.Assert.assertNotNull(node12);
// flaky:         org.junit.Assert.assertNotNull(nodeList16);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
        org.junit.Assert.assertNotNull(nodeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(nodeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(nodeStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(nodeSpliterator47);
    }

    @Test
    public void test643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test643");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues2.getAll();
        Interface.AddWood addWood4 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
// flaky:         addWood4.redraw((double) 6, 0.0d);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
    }

    @Test
    public void test644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test644");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = nodeList10.remove(obj12);
        javafx.scene.Node node14 = null;
        boolean boolean15 = nodeList10.add(node14);
        java.util.ListIterator<javafx.scene.Node> nodeItor16 = nodeList10.listIterator();
        boolean boolean17 = false; // flaky: nodeList8.contains((java.lang.Object) nodeList10);
        boolean boolean18 = nodeList10.isEmpty();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeItor16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test645");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTable woodTable3 = null;
        Interface.WoodTotalValues woodTotalValues4 = null; // flaky: new Interface.WoodTotalValues(woodTable3);
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: woodTotalValues4.getAll();
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable2, woodTotalValues4);
        Interface.AddWood addWood7 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues4);
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues4);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        java.util.stream.Stream<javafx.scene.Node> nodeStream10 = null; // flaky: nodeList9.stream();
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
// flaky:         org.junit.Assert.assertNotNull(nodeStream10);
    }

    @Test
    public void test646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test646");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTable woodTable3 = null;
        Interface.WoodTotalValues woodTotalValues4 = null; // flaky: new Interface.WoodTotalValues(woodTable3);
        Interface.AddWood addWood5 = null; // flaky: new Interface.AddWood(woodTable2, woodTotalValues4);
// flaky:         woodTotalValues4.redraw(0.0d, (double) 0L);
        Interface.AddWood addWood9 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues4);
        java.util.ArrayList<javafx.scene.Node> nodeList10 = null; // flaky: woodTotalValues4.getAll();
// flaky:         woodTotalValues4.redraw(1.0d, (double) (-1L));
        java.util.ArrayList<javafx.scene.Node> nodeList14 = null; // flaky: woodTotalValues4.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList15 = null; // flaky: woodTotalValues4.getAll();
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues4);
// flaky:         org.junit.Assert.assertNotNull(nodeList10);
// flaky:         org.junit.Assert.assertNotNull(nodeList14);
// flaky:         org.junit.Assert.assertNotNull(nodeList15);
    }

    @Test
    public void test647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test647");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray4 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList5 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList5, nodeArray4);
        boolean boolean7 = nodeList5.isEmpty();
        int int9 = nodeList5.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable10 = null;
        Interface.WoodTotalValues woodTotalValues11 = null;
        Interface.AddWood addWood12 = null; // flaky: new Interface.AddWood(woodTable10, woodTotalValues11);
        java.util.ArrayList<javafx.scene.Node> nodeList13 = null; // flaky: addWood12.getAll();
        boolean boolean15 = false; // flaky: nodeList13.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node17 = null;
        javafx.scene.Node node18 = null; // flaky: nodeList13.set((int) (byte) 1, node17);
        boolean boolean19 = nodeList5.add(node18);
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        java.lang.Object obj23 = null;
        boolean boolean24 = nodeList21.remove(obj23);
        boolean boolean25 = nodeList5.retainAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        Interface.WoodTable woodTable30 = null;
        Interface.WoodTotalValues woodTotalValues31 = null;
        Interface.AddWood addWood32 = null; // flaky: new Interface.AddWood(woodTable30, woodTotalValues31);
        java.util.ArrayList<javafx.scene.Node> nodeList33 = null; // flaky: addWood32.getAll();
        boolean boolean34 = false; // flaky: nodeList27.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList33);
        java.util.stream.Stream<javafx.scene.Node> nodeStream35 = null; // flaky: nodeList33.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator36 = null; // flaky: nodeList33.spliterator();
        boolean boolean37 = false; // flaky: nodeList5.addAll((java.util.Collection<javafx.scene.Node>) nodeList33);
        java.util.Iterator<javafx.scene.Node> nodeItor38 = null; // flaky: nodeList33.iterator();
        javafx.scene.Node node40 = null; // flaky: nodeList33.remove(1);
        boolean boolean41 = nodeList1.remove((java.lang.Object) nodeList33);
        Interface.WoodTable woodTable42 = null;
        Interface.WoodTotalValues woodTotalValues43 = null; // flaky: new Interface.WoodTotalValues(woodTable42);
        java.util.ArrayList<javafx.scene.Node> nodeList44 = null; // flaky: woodTotalValues43.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList45 = null; // flaky: woodTotalValues43.getAll();
// flaky:         woodTotalValues43.redraw((double) 2, (double) 5);
// flaky:         woodTotalValues43.redraw((double) (byte) 1, (double) 1);
        java.util.ArrayList<javafx.scene.Node> nodeList52 = null; // flaky: woodTotalValues43.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: woodTotalValues43.getAll();
// flaky:         woodTotalValues43.redraw((double) (short) 1, 1.0d);
        boolean boolean57 = false; // flaky: nodeList33.equals((java.lang.Object) 1.0d);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(nodeArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList33);
// flaky:         org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream35);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator36);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor38);
// flaky:         org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList44);
// flaky:         org.junit.Assert.assertNotNull(nodeList45);
// flaky:         org.junit.Assert.assertNotNull(nodeList52);
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test648");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = nodeList6.remove(obj8);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        boolean boolean18 = false; // flaky: nodeList11.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList17);
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        boolean boolean23 = nodeList21.isEmpty();
        int int25 = nodeList21.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        boolean boolean31 = false; // flaky: nodeList29.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node33 = null;
        javafx.scene.Node node34 = null; // flaky: nodeList29.set((int) (byte) 1, node33);
        boolean boolean35 = nodeList21.add(node34);
// flaky:         nodeList11.add(1, node34);
        boolean boolean37 = nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList11);
        boolean boolean38 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList11);
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        boolean boolean42 = nodeList40.isEmpty();
        boolean boolean43 = nodeList40.isEmpty();
        nodeList40.clear();
        java.util.ListIterator<javafx.scene.Node> nodeItor46 = nodeList40.listIterator(0);
        Interface.WoodTable woodTable47 = null;
        Interface.WoodTotalValues woodTotalValues48 = null;
        Interface.AddWood addWood49 = null; // flaky: new Interface.AddWood(woodTable47, woodTotalValues48);
        java.util.ArrayList<javafx.scene.Node> nodeList50 = null; // flaky: addWood49.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList51 = null; // flaky: addWood49.getAll();
        javafx.scene.Node[] nodeArray52 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList53 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList53, nodeArray52);
        boolean boolean55 = nodeList53.isEmpty();
        int int57 = nodeList53.lastIndexOf((java.lang.Object) 100);
        int int59 = nodeList53.lastIndexOf((java.lang.Object) 10);
        boolean boolean60 = false; // flaky: nodeList51.retainAll((java.util.Collection<javafx.scene.Node>) nodeList53);
        boolean boolean62 = false; // flaky: nodeList51.contains((java.lang.Object) false);
        Interface.WoodTable woodTable63 = null;
        Interface.WoodTotalValues woodTotalValues64 = null;
        Interface.AddWood addWood65 = null; // flaky: new Interface.AddWood(woodTable63, woodTotalValues64);
        java.util.ArrayList<javafx.scene.Node> nodeList66 = null; // flaky: addWood65.getAll();
        boolean boolean67 = false; // flaky: nodeList66.isEmpty();
        boolean boolean69 = false; // flaky: nodeList66.equals((java.lang.Object) 100);
        int int70 = 0; // flaky: nodeList51.lastIndexOf((java.lang.Object) nodeList66);
        java.lang.Object[] objArray71 = null; // flaky: nodeList51.toArray();
        int int72 = nodeList40.lastIndexOf((java.lang.Object) objArray71);
        java.util.stream.Stream<javafx.scene.Node> nodeStream73 = nodeList40.stream();
        nodeList40.clear();
        boolean boolean75 = nodeList11.retainAll((java.util.Collection<javafx.scene.Node>) nodeList40);
        int int76 = nodeList11.size();
        javafx.scene.Node[] nodeArray77 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList78 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList78, nodeArray77);
        java.lang.Object obj80 = null;
        boolean boolean81 = nodeList78.remove(obj80);
        int int82 = nodeList78.size();
        javafx.scene.Node[] nodeArray83 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList84 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList84, nodeArray83);
        Interface.WoodTable woodTable87 = null;
        Interface.WoodTotalValues woodTotalValues88 = null;
        Interface.AddWood addWood89 = null; // flaky: new Interface.AddWood(woodTable87, woodTotalValues88);
        java.util.ArrayList<javafx.scene.Node> nodeList90 = null; // flaky: addWood89.getAll();
        boolean boolean91 = false; // flaky: nodeList84.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList90);
        boolean boolean92 = nodeList78.retainAll((java.util.Collection<javafx.scene.Node>) nodeList84);
        java.lang.Class<?> wildcardClass93 = nodeList78.getClass();
        int int94 = nodeList11.lastIndexOf((java.lang.Object) wildcardClass93);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(nodeItor46);
// flaky:         org.junit.Assert.assertNotNull(nodeList50);
// flaky:         org.junit.Assert.assertNotNull(nodeList51);
        org.junit.Assert.assertNotNull(nodeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
// flaky:         org.junit.Assert.assertNotNull(objArray71);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(nodeStream73);
// flaky:         org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(nodeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(nodeArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList90);
// flaky:         org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test649");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator9 = nodeList1.spliterator();
        nodeList1.clear();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        boolean boolean14 = nodeList12.isEmpty();
        Interface.WoodTable woodTable15 = null;
        Interface.WoodTotalValues woodTotalValues16 = null;
        Interface.AddWood addWood17 = null; // flaky: new Interface.AddWood(woodTable15, woodTotalValues16);
        java.util.ArrayList<javafx.scene.Node> nodeList18 = null; // flaky: addWood17.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood17.getAll();
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        boolean boolean23 = nodeList21.isEmpty();
        int int25 = nodeList21.lastIndexOf((java.lang.Object) 100);
        int int27 = nodeList21.lastIndexOf((java.lang.Object) 10);
        boolean boolean28 = false; // flaky: nodeList19.retainAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        boolean boolean29 = false; // flaky: nodeList12.removeAll((java.util.Collection<javafx.scene.Node>) nodeList19);
        boolean boolean30 = false; // flaky: nodeList19.isEmpty();
        java.util.ListIterator<javafx.scene.Node> nodeItor31 = null; // flaky: nodeList19.listIterator();
        int int32 = nodeList1.indexOf((java.lang.Object) nodeItor31);
        Interface.AddWood[] addWoodArray33 = new Interface.AddWood[] {};
        Interface.AddWood[] addWoodArray34 = nodeList1.toArray(addWoodArray33);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTable woodTable36 = null;
        Interface.WoodTotalValues woodTotalValues37 = null; // flaky: new Interface.WoodTotalValues(woodTable36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: woodTotalValues37.getAll();
        Interface.AddWood addWood39 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues37);
        int int40 = nodeList1.lastIndexOf((java.lang.Object) woodTable35);
        boolean boolean41 = nodeList1.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<javafx.scene.Node> nodeList44 = nodeList1.subList((int) (byte) 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList18);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(addWoodArray33);
        org.junit.Assert.assertNotNull(addWoodArray34);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test650");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean14 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray15 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList16 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList16, nodeArray15);
        boolean boolean18 = nodeList16.isEmpty();
        boolean boolean19 = nodeList16.isEmpty();
        nodeList16.clear();
        java.util.ListIterator<javafx.scene.Node> nodeItor22 = nodeList16.listIterator(0);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        javafx.css.Styleable[] styleableArray32 = new javafx.css.Styleable[] { node31 };
        Interface.WoodTable woodTable33 = null;
        Interface.WoodTotalValues woodTotalValues34 = null;
        Interface.AddWood addWood35 = null; // flaky: new Interface.AddWood(woodTable33, woodTotalValues34);
        java.util.ArrayList<javafx.scene.Node> nodeList36 = null; // flaky: addWood35.getAll();
        boolean boolean38 = false; // flaky: nodeList36.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node40 = null;
        javafx.scene.Node node41 = null; // flaky: nodeList36.set((int) (byte) 1, node40);
        javafx.css.Styleable[] styleableArray42 = new javafx.css.Styleable[] { node41 };
        javafx.css.Styleable[][] styleableArray43 = new javafx.css.Styleable[][] { styleableArray32, styleableArray42 };
        javafx.css.Styleable[][] styleableArray44 = nodeList16.toArray(styleableArray43);
        boolean boolean45 = nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList16);
        int int46 = nodeList1.size();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(nodeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(nodeItor22);
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(styleableArray32);
// flaky:         org.junit.Assert.assertNotNull(nodeList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(styleableArray42);
        org.junit.Assert.assertNotNull(styleableArray43);
        org.junit.Assert.assertNotNull(styleableArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test651");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList1.equals((java.lang.Object) nodeList6);
        Interface.WoodTable woodTable12 = null;
        Interface.WoodTotalValues woodTotalValues13 = null;
        Interface.AddWood addWood14 = null; // flaky: new Interface.AddWood(woodTable12, woodTotalValues13);
        java.util.ArrayList<javafx.scene.Node> nodeList15 = null; // flaky: addWood14.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList16 = null; // flaky: addWood14.getAll();
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        int int24 = nodeList18.lastIndexOf((java.lang.Object) 10);
        boolean boolean25 = false; // flaky: nodeList16.retainAll((java.util.Collection<javafx.scene.Node>) nodeList18);
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = nodeList27.remove(obj29);
        boolean boolean31 = nodeList27.isEmpty();
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        Interface.WoodTable woodTable36 = null;
        Interface.WoodTotalValues woodTotalValues37 = null;
        Interface.AddWood addWood38 = null; // flaky: new Interface.AddWood(woodTable36, woodTotalValues37);
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood38.getAll();
        boolean boolean40 = false; // flaky: nodeList33.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList39);
        int int42 = nodeList33.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray44 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList45 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList45, nodeArray44);
        boolean boolean47 = nodeList45.isEmpty();
        int int49 = nodeList45.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null;
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable50, woodTotalValues51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood52.getAll();
        boolean boolean55 = false; // flaky: nodeList53.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node57 = null;
        javafx.scene.Node node58 = null; // flaky: nodeList53.set((int) (byte) 1, node57);
        boolean boolean59 = nodeList45.add(node58);
        javafx.scene.Node node60 = null; // flaky: nodeList33.set((int) (short) 0, node58);
        boolean boolean61 = nodeList27.add(node60);
        boolean boolean63 = nodeList27.remove((java.lang.Object) 100L);
        boolean boolean64 = nodeList18.remove((java.lang.Object) boolean63);
        boolean boolean65 = nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList18);
        Interface.WoodTable woodTable66 = null;
        Interface.WoodTotalValues woodTotalValues67 = null;
        Interface.AddWood addWood68 = null; // flaky: new Interface.AddWood(woodTable66, woodTotalValues67);
        java.util.ArrayList<javafx.scene.Node> nodeList69 = null; // flaky: addWood68.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList70 = null; // flaky: addWood68.getAll();
        javafx.scene.Node[] nodeArray71 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList72 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList72, nodeArray71);
        boolean boolean74 = nodeList72.isEmpty();
        int int76 = nodeList72.lastIndexOf((java.lang.Object) 100);
        int int78 = nodeList72.lastIndexOf((java.lang.Object) 10);
        boolean boolean79 = false; // flaky: nodeList70.retainAll((java.util.Collection<javafx.scene.Node>) nodeList72);
        boolean boolean81 = false; // flaky: nodeList70.contains((java.lang.Object) false);
        Interface.WoodTable woodTable82 = null;
        Interface.WoodTotalValues woodTotalValues83 = null;
        Interface.AddWood addWood84 = null; // flaky: new Interface.AddWood(woodTable82, woodTotalValues83);
        java.util.ArrayList<javafx.scene.Node> nodeList85 = null; // flaky: addWood84.getAll();
        boolean boolean86 = false; // flaky: nodeList85.isEmpty();
        boolean boolean88 = false; // flaky: nodeList85.equals((java.lang.Object) 100);
        int int89 = 0; // flaky: nodeList70.lastIndexOf((java.lang.Object) nodeList85);
        boolean boolean90 = false; // flaky: nodeList70.isEmpty();
        boolean boolean91 = nodeList18.equals((java.lang.Object) boolean90);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList15);
// flaky:         org.junit.Assert.assertNotNull(nodeList16);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
// flaky:         org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(nodeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
// flaky:         org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList69);
// flaky:         org.junit.Assert.assertNotNull(nodeList70);
        org.junit.Assert.assertNotNull(nodeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test652");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList18 = null; // flaky: addWood16.getAll();
        javafx.scene.Node[] nodeArray19 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList20 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList20, nodeArray19);
        boolean boolean22 = nodeList20.isEmpty();
        int int24 = nodeList20.lastIndexOf((java.lang.Object) 100);
        int int26 = nodeList20.lastIndexOf((java.lang.Object) 10);
        boolean boolean27 = false; // flaky: nodeList18.retainAll((java.util.Collection<javafx.scene.Node>) nodeList20);
        javafx.scene.Node[] nodeArray28 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList29 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList29, nodeArray28);
        boolean boolean31 = nodeList29.isEmpty();
        int int33 = nodeList29.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable34 = null;
        Interface.WoodTotalValues woodTotalValues35 = null;
        Interface.AddWood addWood36 = null; // flaky: new Interface.AddWood(woodTable34, woodTotalValues35);
        java.util.ArrayList<javafx.scene.Node> nodeList37 = null; // flaky: addWood36.getAll();
        boolean boolean39 = false; // flaky: nodeList37.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node41 = null;
        javafx.scene.Node node42 = null; // flaky: nodeList37.set((int) (byte) 1, node41);
        boolean boolean43 = nodeList29.add(node42);
        java.util.stream.Stream<javafx.scene.Node> nodeStream44 = nodeList29.stream();
        boolean boolean45 = nodeList20.equals((java.lang.Object) nodeStream44);
        boolean boolean46 = nodeList20.isEmpty();
        boolean boolean47 = nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList20);
        java.util.ListIterator<javafx.scene.Node> nodeItor48 = nodeList1.listIterator();
        java.lang.Object[] objArray49 = nodeList1.toArray();
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node51 = nodeList1.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList18);
        org.junit.Assert.assertNotNull(nodeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(nodeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(nodeStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(nodeItor48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
    }

    @Test
    public void test653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test653");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTotalValues woodTotalValues3 = null; // flaky: new Interface.WoodTotalValues(woodTable2);
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: woodTotalValues3.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: woodTotalValues3.getAll();
// flaky:         woodTotalValues3.redraw((double) (short) 100, 10.0d);
        Interface.AddWood addWood9 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues3);
// flaky:         woodTotalValues3.redraw(10.0d, (double) 1.0f);
        Interface.AddWood addWood13 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues3);
// flaky:         woodTotalValues3.redraw(1.0d, (double) 5);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
    }

    @Test
    public void test654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test654");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node node5 = null;
        boolean boolean6 = nodeList1.add(node5);
        java.util.ListIterator<javafx.scene.Node> nodeItor7 = nodeList1.listIterator();
        int int9 = nodeList1.lastIndexOf((java.lang.Object) (byte) 100);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        java.lang.Object obj13 = null;
        boolean boolean14 = nodeList11.remove(obj13);
        javafx.scene.Node[] nodeArray15 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList16 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList16, nodeArray15);
        boolean boolean18 = nodeList16.isEmpty();
        int int20 = nodeList16.lastIndexOf((java.lang.Object) 100);
        boolean boolean21 = nodeList11.equals((java.lang.Object) nodeList16);
        Interface.WoodTable woodTable22 = null;
        Interface.WoodTotalValues woodTotalValues23 = null;
        Interface.AddWood addWood24 = null; // flaky: new Interface.AddWood(woodTable22, woodTotalValues23);
        java.util.ArrayList<javafx.scene.Node> nodeList25 = null; // flaky: addWood24.getAll();
// flaky:         addWood24.redraw((double) 10.0f, (double) 0L);
        boolean boolean29 = nodeList11.contains((java.lang.Object) 10.0f);
        boolean boolean30 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList11);
        java.util.ListIterator<javafx.scene.Node> nodeItor31 = nodeList11.listIterator();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(nodeItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(nodeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(nodeItor31);
    }

    @Test
    public void test655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test655");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator9 = nodeList1.spliterator();
        java.util.stream.Stream<javafx.scene.Node> nodeStream10 = nodeList1.parallelStream();
        Interface.WoodTable woodTable11 = null;
        Interface.WoodTotalValues woodTotalValues12 = null; // flaky: new Interface.WoodTotalValues(woodTable11);
        java.util.ArrayList<javafx.scene.Node> nodeList13 = null; // flaky: woodTotalValues12.getAll();
        int int14 = nodeList1.indexOf((java.lang.Object) woodTotalValues12);
        // The following exception was thrown during execution in test generation
        try {
            woodTotalValues12.renew();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNotNull(nodeStream10);
// flaky:         org.junit.Assert.assertNotNull(nodeList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test656");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
        int int4 = 0; // flaky: nodeList2.indexOf((java.lang.Object) (byte) 0);
        java.lang.Object[] objArray5 = null; // flaky: nodeList2.toArray();
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        boolean boolean12 = false; // flaky: nodeList2.addAll((java.util.Collection<javafx.scene.Node>) nodeList9);
        javafx.scene.Node[] nodeArray13 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList14 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList14, nodeArray13);
        java.lang.Object obj16 = null;
        boolean boolean17 = nodeList14.remove(obj16);
        javafx.scene.Node[] nodeArray18 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList19 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList19, nodeArray18);
        boolean boolean21 = nodeList19.isEmpty();
        int int23 = nodeList19.lastIndexOf((java.lang.Object) 100);
        boolean boolean24 = nodeList19.isEmpty();
        nodeList19.clear();
        boolean boolean26 = nodeList14.removeAll((java.util.Collection<javafx.scene.Node>) nodeList19);
        Interface.WoodTable woodTable27 = null;
        Interface.WoodTotalValues woodTotalValues28 = null;
        Interface.AddWood addWood29 = null; // flaky: new Interface.AddWood(woodTable27, woodTotalValues28);
        java.util.ArrayList<javafx.scene.Node> nodeList30 = null; // flaky: addWood29.getAll();
// flaky:         addWood29.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood29.getAll();
        boolean boolean35 = false; // flaky: nodeList19.addAll((java.util.Collection<javafx.scene.Node>) nodeList34);
        javafx.scene.Node[] nodeArray36 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList37 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList37, nodeArray36);
        boolean boolean39 = nodeList37.isEmpty();
        boolean boolean40 = nodeList37.isEmpty();
        nodeList37.clear();
        boolean boolean42 = nodeList19.retainAll((java.util.Collection<javafx.scene.Node>) nodeList37);
        boolean boolean43 = false; // flaky: nodeList9.removeAll((java.util.Collection<javafx.scene.Node>) nodeList19);
// flaky:         nodeList9.clear();
        java.util.stream.Stream<javafx.scene.Node> nodeStream45 = null; // flaky: nodeList9.parallelStream();
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
// flaky:         org.junit.Assert.assertNotNull(objArray5);
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(nodeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(nodeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList30);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(nodeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeStream45);
    }

    @Test
    public void test657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test657");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor8 = nodeList1.listIterator();
        int int9 = nodeList1.size();
        boolean boolean10 = nodeList1.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream11 = nodeList1.parallelStream();
        javafx.scene.Node[] nodeArray12 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList13 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList13, nodeArray12);
        boolean boolean15 = nodeList13.isEmpty();
        int int17 = nodeList13.lastIndexOf((java.lang.Object) 100);
        int int19 = nodeList13.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable20 = null;
        Interface.WoodTotalValues woodTotalValues21 = null;
        Interface.AddWood addWood22 = null; // flaky: new Interface.AddWood(woodTable20, woodTotalValues21);
        java.util.ArrayList<javafx.scene.Node> nodeList23 = null; // flaky: addWood22.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood22.getAll();
        javafx.scene.Node[] nodeArray25 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList26 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList26, nodeArray25);
        boolean boolean28 = nodeList26.isEmpty();
        int int30 = nodeList26.lastIndexOf((java.lang.Object) 100);
        int int32 = nodeList26.lastIndexOf((java.lang.Object) 10);
        boolean boolean33 = false; // flaky: nodeList24.retainAll((java.util.Collection<javafx.scene.Node>) nodeList26);
        boolean boolean34 = nodeList13.containsAll((java.util.Collection<javafx.scene.Node>) nodeList26);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        boolean boolean40 = false; // flaky: nodeList38.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node42 = null;
        javafx.scene.Node node43 = null; // flaky: nodeList38.set((int) (byte) 1, node42);
        boolean boolean44 = false; // flaky: nodeList13.removeAll((java.util.Collection<javafx.scene.Node>) nodeList38);
        int int45 = nodeList1.lastIndexOf((java.lang.Object) nodeList13);
        Interface.WoodTable woodTable46 = null;
        Interface.WoodTotalValues woodTotalValues47 = null; // flaky: new Interface.WoodTotalValues(woodTable46);
        java.util.ArrayList<javafx.scene.Node> nodeList48 = null; // flaky: woodTotalValues47.getAll();
        int int49 = nodeList13.lastIndexOf((java.lang.Object) woodTotalValues47);
        javafx.scene.Node[] nodeArray50 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList51 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList51, nodeArray50);
        boolean boolean53 = nodeList51.isEmpty();
        int int55 = nodeList51.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable56 = null;
        Interface.WoodTotalValues woodTotalValues57 = null;
        Interface.AddWood addWood58 = null; // flaky: new Interface.AddWood(woodTable56, woodTotalValues57);
        java.util.ArrayList<javafx.scene.Node> nodeList59 = null; // flaky: addWood58.getAll();
        boolean boolean61 = false; // flaky: nodeList59.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node63 = null;
        javafx.scene.Node node64 = null; // flaky: nodeList59.set((int) (byte) 1, node63);
        boolean boolean65 = nodeList51.add(node64);
        javafx.scene.Node[] nodeArray66 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList67 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList67, nodeArray66);
        java.lang.Object obj69 = null;
        boolean boolean70 = nodeList67.remove(obj69);
        boolean boolean71 = nodeList51.retainAll((java.util.Collection<javafx.scene.Node>) nodeList67);
        javafx.scene.Node[] nodeArray72 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList73 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList73, nodeArray72);
        Interface.WoodTable woodTable76 = null;
        Interface.WoodTotalValues woodTotalValues77 = null;
        Interface.AddWood addWood78 = null; // flaky: new Interface.AddWood(woodTable76, woodTotalValues77);
        java.util.ArrayList<javafx.scene.Node> nodeList79 = null; // flaky: addWood78.getAll();
        boolean boolean80 = false; // flaky: nodeList73.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList79);
        java.util.stream.Stream<javafx.scene.Node> nodeStream81 = null; // flaky: nodeList79.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator82 = null; // flaky: nodeList79.spliterator();
        boolean boolean83 = false; // flaky: nodeList51.addAll((java.util.Collection<javafx.scene.Node>) nodeList79);
        java.util.Iterator<javafx.scene.Node> nodeItor84 = null; // flaky: nodeList79.iterator();
        javafx.scene.Node node86 = null; // flaky: nodeList79.remove(1);
        boolean boolean87 = nodeList13.add(node86);
        java.lang.Object[] objArray88 = nodeList13.toArray();
        int int89 = nodeList13.size();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(nodeItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(nodeStream11);
        org.junit.Assert.assertNotNull(nodeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList23);
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertNotNull(nodeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(nodeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
// flaky:         org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(nodeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(nodeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList79);
// flaky:         org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream81);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator82);
// flaky:         org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor84);
// flaky:         org.junit.Assert.assertNotNull(node86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
    }

    @Test
    public void test658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test658");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        int int10 = nodeList1.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        javafx.scene.Node[] nodeArray16 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList17 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList17, nodeArray16);
        boolean boolean19 = nodeList17.isEmpty();
        int int21 = nodeList17.lastIndexOf((java.lang.Object) 100);
        boolean boolean22 = nodeList17.isEmpty();
        nodeList17.clear();
        boolean boolean24 = nodeList12.removeAll((java.util.Collection<javafx.scene.Node>) nodeList17);
        boolean boolean25 = nodeList12.isEmpty();
        java.util.Iterator<javafx.scene.Node> nodeItor26 = nodeList12.iterator();
        int int27 = nodeList12.size();
        boolean boolean28 = nodeList1.equals((java.lang.Object) nodeList12);
        javafx.scene.Node[] nodeArray29 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList30 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList30, nodeArray29);
        Interface.WoodTable woodTable33 = null;
        Interface.WoodTotalValues woodTotalValues34 = null;
        Interface.AddWood addWood35 = null; // flaky: new Interface.AddWood(woodTable33, woodTotalValues34);
        java.util.ArrayList<javafx.scene.Node> nodeList36 = null; // flaky: addWood35.getAll();
        boolean boolean37 = false; // flaky: nodeList30.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList36);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator38 = nodeList30.spliterator();
        java.util.stream.Stream<javafx.scene.Node> nodeStream39 = nodeList30.parallelStream();
        javafx.scene.Node[] nodeArray40 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList41 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList41, nodeArray40);
        java.lang.Object obj43 = null;
        boolean boolean44 = nodeList41.remove(obj43);
        boolean boolean45 = nodeList41.isEmpty();
        javafx.scene.Node[] nodeArray46 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList47 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList47, nodeArray46);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null;
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable50, woodTotalValues51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood52.getAll();
        boolean boolean54 = false; // flaky: nodeList47.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList53);
        int int56 = nodeList47.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray58 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList59 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList59, nodeArray58);
        boolean boolean61 = nodeList59.isEmpty();
        int int63 = nodeList59.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable64 = null;
        Interface.WoodTotalValues woodTotalValues65 = null;
        Interface.AddWood addWood66 = null; // flaky: new Interface.AddWood(woodTable64, woodTotalValues65);
        java.util.ArrayList<javafx.scene.Node> nodeList67 = null; // flaky: addWood66.getAll();
        boolean boolean69 = false; // flaky: nodeList67.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node71 = null;
        javafx.scene.Node node72 = null; // flaky: nodeList67.set((int) (byte) 1, node71);
        boolean boolean73 = nodeList59.add(node72);
        javafx.scene.Node node74 = null; // flaky: nodeList47.set((int) (short) 0, node72);
        boolean boolean75 = nodeList41.add(node74);
        boolean boolean76 = nodeList30.addAll((java.util.Collection<javafx.scene.Node>) nodeList41);
        boolean boolean77 = nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList41);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(nodeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeItor26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(nodeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList36);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator38);
        org.junit.Assert.assertNotNull(nodeStream39);
        org.junit.Assert.assertNotNull(nodeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(nodeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
// flaky:         org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(nodeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
// flaky:         org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
// flaky:         org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test659");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        Interface.WoodTable woodTable9 = null;
        Interface.WoodTotalValues woodTotalValues10 = null;
        Interface.AddWood addWood11 = null; // flaky: new Interface.AddWood(woodTable9, woodTotalValues10);
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: addWood11.getAll();
        boolean boolean13 = false; // flaky: nodeList6.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList12);
        java.util.stream.Stream<javafx.scene.Node> nodeStream14 = null; // flaky: nodeList12.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator15 = null; // flaky: nodeList12.spliterator();
        javafx.scene.Node[] nodeArray16 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList17 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList17, nodeArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = nodeList17.remove(obj19);
        boolean boolean21 = false; // flaky: nodeList12.removeAll((java.util.Collection<javafx.scene.Node>) nodeList17);
        int int22 = nodeList1.lastIndexOf((java.lang.Object) nodeList17);
        nodeList1.clear();
        javafx.scene.Node[] nodeArray24 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList25 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList25, nodeArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = nodeList25.remove(obj27);
        javafx.scene.Node[] nodeArray29 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList30 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList30, nodeArray29);
        boolean boolean32 = nodeList30.isEmpty();
        int int34 = nodeList30.lastIndexOf((java.lang.Object) 100);
        boolean boolean35 = nodeList25.equals((java.lang.Object) nodeList30);
        java.lang.Object obj36 = null;
        int int37 = nodeList25.lastIndexOf(obj36);
        javafx.scene.Node[] nodeArray38 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList39 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList39, nodeArray38);
        java.lang.Object obj41 = null;
        boolean boolean42 = nodeList39.remove(obj41);
        javafx.scene.Node[] nodeArray43 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList44 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList44, nodeArray43);
        boolean boolean46 = nodeList44.isEmpty();
        int int48 = nodeList44.lastIndexOf((java.lang.Object) 100);
        boolean boolean49 = nodeList39.equals((java.lang.Object) nodeList44);
        javafx.scene.Node[] nodeArray50 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList51 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList51, nodeArray50);
        boolean boolean53 = nodeList51.isEmpty();
        int int55 = nodeList51.lastIndexOf((java.lang.Object) 100);
        int int57 = nodeList51.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor58 = nodeList51.listIterator();
        int int59 = nodeList39.indexOf((java.lang.Object) nodeList51);
        int int60 = nodeList25.lastIndexOf((java.lang.Object) nodeList51);
        java.util.ArrayList[] arrayListArray62 = new java.util.ArrayList[1];
        @SuppressWarnings("unchecked")
        java.util.ArrayList<javafx.scene.Node>[] nodeListArray63 = (java.util.ArrayList<javafx.scene.Node>[]) arrayListArray62;
        nodeListArray63[0] = nodeList51;
        java.util.ArrayList<javafx.scene.Node>[] nodeListArray66 = nodeList1.toArray(nodeListArray63);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator67 = nodeList1.spliterator();
        java.util.stream.Stream<javafx.scene.Node> nodeStream68 = nodeList1.stream();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream14);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNotNull(nodeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(nodeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(nodeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(nodeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(nodeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(nodeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(nodeItor58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(arrayListArray62);
        org.junit.Assert.assertNotNull(nodeListArray63);
        org.junit.Assert.assertNotNull(nodeListArray66);
        org.junit.Assert.assertNotNull(nodeSpliterator67);
        org.junit.Assert.assertNotNull(nodeStream68);
    }

    @Test
    public void test660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test660");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray7 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList8 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList8, nodeArray7);
        boolean boolean10 = nodeList8.isEmpty();
        int int12 = nodeList8.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable13 = null;
        Interface.WoodTotalValues woodTotalValues14 = null;
        Interface.AddWood addWood15 = null; // flaky: new Interface.AddWood(woodTable13, woodTotalValues14);
        java.util.ArrayList<javafx.scene.Node> nodeList16 = null; // flaky: addWood15.getAll();
        boolean boolean18 = false; // flaky: nodeList16.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node20 = null;
        javafx.scene.Node node21 = null; // flaky: nodeList16.set((int) (byte) 1, node20);
        boolean boolean22 = nodeList8.add(node21);
        javafx.scene.Node node23 = null; // flaky: nodeList5.set((int) (short) 0, node21);
        int int24 = 0; // flaky: nodeList5.size();
        Interface.WoodTable woodTable25 = null;
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null; // flaky: new Interface.WoodTotalValues(woodTable26);
        java.util.ArrayList<javafx.scene.Node> nodeList28 = null; // flaky: woodTotalValues27.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: woodTotalValues27.getAll();
// flaky:         woodTotalValues27.redraw((double) (short) 100, 10.0d);
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable25, woodTotalValues27);
// flaky:         woodTotalValues27.redraw(10.0d, (double) 1.0f);
        java.util.ArrayList<javafx.scene.Node> nodeList37 = null; // flaky: woodTotalValues27.getAll();
        java.util.ListIterator<javafx.scene.Node> nodeItor38 = null; // flaky: nodeList37.listIterator();
        boolean boolean39 = false; // flaky: nodeList5.retainAll((java.util.Collection<javafx.scene.Node>) nodeList37);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(nodeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
// flaky:         org.junit.Assert.assertNotNull(node23);
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
// flaky:         org.junit.Assert.assertNotNull(nodeList28);
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
// flaky:         org.junit.Assert.assertNotNull(nodeList37);
// flaky:         org.junit.Assert.assertNotNull(nodeItor38);
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test661");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) 10.0f, (double) 0L);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood2.getAll();
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList8.parallelStream();
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        boolean boolean13 = nodeList11.isEmpty();
        int int15 = nodeList11.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean21 = false; // flaky: nodeList19.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node23 = null;
        javafx.scene.Node node24 = null; // flaky: nodeList19.set((int) (byte) 1, node23);
        boolean boolean25 = nodeList11.add(node24);
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = nodeList27.remove(obj29);
        boolean boolean31 = nodeList11.retainAll((java.util.Collection<javafx.scene.Node>) nodeList27);
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        java.lang.Object obj35 = null;
        boolean boolean36 = nodeList33.remove(obj35);
        javafx.scene.Node node37 = null;
        boolean boolean38 = nodeList33.add(node37);
        boolean boolean39 = nodeList27.equals((java.lang.Object) boolean38);
        boolean boolean40 = false; // flaky: nodeList8.removeAll((java.util.Collection<javafx.scene.Node>) nodeList27);
        java.lang.Object obj41 = null;
        boolean boolean42 = nodeList27.remove(obj41);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test662");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean14 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray15 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList16 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList16, nodeArray15);
        boolean boolean18 = nodeList16.isEmpty();
        int int20 = nodeList16.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable21 = null;
        Interface.WoodTotalValues woodTotalValues22 = null;
        Interface.AddWood addWood23 = null; // flaky: new Interface.AddWood(woodTable21, woodTotalValues22);
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood23.getAll();
        boolean boolean26 = false; // flaky: nodeList24.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node28 = null;
        javafx.scene.Node node29 = null; // flaky: nodeList24.set((int) (byte) 1, node28);
        boolean boolean30 = nodeList16.add(node29);
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        Interface.WoodTable woodTable36 = null;
        Interface.WoodTotalValues woodTotalValues37 = null;
        Interface.AddWood addWood38 = null; // flaky: new Interface.AddWood(woodTable36, woodTotalValues37);
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood38.getAll();
        boolean boolean40 = false; // flaky: nodeList33.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList39);
        int int42 = nodeList33.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray44 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList45 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList45, nodeArray44);
        boolean boolean47 = nodeList45.isEmpty();
        int int49 = nodeList45.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null;
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable50, woodTotalValues51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood52.getAll();
        boolean boolean55 = false; // flaky: nodeList53.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node57 = null;
        javafx.scene.Node node58 = null; // flaky: nodeList53.set((int) (byte) 1, node57);
        boolean boolean59 = nodeList45.add(node58);
        javafx.scene.Node node60 = null; // flaky: nodeList33.set((int) (short) 0, node58);
        javafx.scene.Node node61 = nodeList16.set((int) (byte) 0, node58);
        boolean boolean62 = nodeList1.containsAll((java.util.Collection<javafx.scene.Node>) nodeList16);
        javafx.scene.Node[] nodeArray63 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList64 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList64, nodeArray63);
        boolean boolean66 = nodeList64.isEmpty();
        int int68 = nodeList64.lastIndexOf((java.lang.Object) 100);
        javafx.scene.Node[] nodeArray69 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList70 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList70, nodeArray69);
        boolean boolean72 = nodeList70.isEmpty();
        int int74 = nodeList70.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable75 = null;
        Interface.WoodTotalValues woodTotalValues76 = null;
        Interface.AddWood addWood77 = null; // flaky: new Interface.AddWood(woodTable75, woodTotalValues76);
        java.util.ArrayList<javafx.scene.Node> nodeList78 = null; // flaky: addWood77.getAll();
        boolean boolean80 = false; // flaky: nodeList78.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node82 = null;
        javafx.scene.Node node83 = null; // flaky: nodeList78.set((int) (byte) 1, node82);
        boolean boolean84 = nodeList70.add(node83);
        javafx.scene.Node[] nodeArray85 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList86 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList86, nodeArray85);
        java.lang.Object obj88 = null;
        boolean boolean89 = nodeList86.remove(obj88);
        boolean boolean90 = nodeList70.retainAll((java.util.Collection<javafx.scene.Node>) nodeList86);
        boolean boolean91 = nodeList64.addAll((java.util.Collection<javafx.scene.Node>) nodeList70);
        int int93 = nodeList64.lastIndexOf((java.lang.Object) (short) 0);
        int int94 = nodeList1.lastIndexOf((java.lang.Object) nodeList64);
        java.util.stream.Stream<javafx.scene.Node> nodeStream95 = nodeList1.parallelStream();
        int int96 = nodeList1.size();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(nodeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
// flaky:         org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
// flaky:         org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(nodeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
// flaky:         org.junit.Assert.assertNotNull(node60);
// flaky:         org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(nodeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(nodeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
// flaky:         org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(nodeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(nodeStream95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test663");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        javafx.scene.Node[] nodeArray16 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList17 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList17, nodeArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = nodeList17.remove(obj19);
        boolean boolean21 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList17);
        boolean boolean22 = nodeList1.isEmpty();
        java.util.Iterator<javafx.scene.Node> nodeItor23 = nodeList1.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor24 = nodeList1.listIterator();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(nodeItor23);
        org.junit.Assert.assertNotNull(nodeItor24);
    }

    @Test
    public void test664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test664");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
// flaky:         addWood16.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood16.getAll();
        boolean boolean22 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        javafx.scene.Node[] nodeArray23 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList24 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList24, nodeArray23);
        boolean boolean26 = nodeList24.isEmpty();
        int int28 = nodeList24.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable29 = null;
        Interface.WoodTotalValues woodTotalValues30 = null;
        Interface.AddWood addWood31 = null; // flaky: new Interface.AddWood(woodTable29, woodTotalValues30);
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood31.getAll();
        boolean boolean34 = false; // flaky: nodeList32.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node36 = null;
        javafx.scene.Node node37 = null; // flaky: nodeList32.set((int) (byte) 1, node36);
        boolean boolean38 = nodeList24.add(node37);
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        java.lang.Object obj42 = null;
        boolean boolean43 = nodeList40.remove(obj42);
        boolean boolean44 = nodeList24.retainAll((java.util.Collection<javafx.scene.Node>) nodeList40);
        boolean boolean45 = nodeList24.isEmpty();
        boolean boolean46 = nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList24);
        java.lang.Object[] objArray47 = nodeList24.toArray();
        javafx.scene.Node[] nodeArray48 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList49 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList49, nodeArray48);
        Interface.WoodTable woodTable52 = null;
        Interface.WoodTotalValues woodTotalValues53 = null;
        Interface.AddWood addWood54 = null; // flaky: new Interface.AddWood(woodTable52, woodTotalValues53);
        java.util.ArrayList<javafx.scene.Node> nodeList55 = null; // flaky: addWood54.getAll();
        boolean boolean56 = false; // flaky: nodeList49.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList55);
        Interface.WoodTable woodTable57 = null;
        Interface.WoodTotalValues woodTotalValues58 = null;
        Interface.AddWood addWood59 = null; // flaky: new Interface.AddWood(woodTable57, woodTotalValues58);
        java.util.ArrayList<javafx.scene.Node> nodeList60 = null; // flaky: addWood59.getAll();
        boolean boolean61 = false; // flaky: nodeList60.isEmpty();
        boolean boolean62 = false; // flaky: nodeList49.removeAll((java.util.Collection<javafx.scene.Node>) nodeList60);
        java.util.ListIterator<javafx.scene.Node> nodeItor64 = null; // flaky: nodeList49.listIterator(2);
        boolean boolean65 = nodeList24.equals((java.lang.Object) nodeList49);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(nodeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(nodeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList55);
// flaky:         org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor64);
// flaky:         org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test665");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor8 = nodeList1.listIterator();
        int int9 = nodeList1.size();
        Interface.WoodTable woodTable10 = null;
        Interface.WoodTotalValues woodTotalValues11 = null;
        Interface.AddWood addWood12 = null; // flaky: new Interface.AddWood(woodTable10, woodTotalValues11);
        java.util.ArrayList<javafx.scene.Node> nodeList13 = null; // flaky: addWood12.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList14 = null; // flaky: addWood12.getAll();
        javafx.scene.Node[] nodeArray15 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList16 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList16, nodeArray15);
        boolean boolean18 = nodeList16.isEmpty();
        int int20 = nodeList16.lastIndexOf((java.lang.Object) 100);
        int int22 = nodeList16.lastIndexOf((java.lang.Object) 10);
        boolean boolean23 = false; // flaky: nodeList14.retainAll((java.util.Collection<javafx.scene.Node>) nodeList16);
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTotalValues woodTotalValues25 = null;
        Interface.AddWood addWood26 = null; // flaky: new Interface.AddWood(woodTable24, woodTotalValues25);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood26.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList28 = null; // flaky: addWood26.getAll();
        boolean boolean29 = false; // flaky: nodeList16.addAll((java.util.Collection<javafx.scene.Node>) nodeList28);
        javafx.scene.Node[] nodeArray30 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList31 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList31, nodeArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = nodeList31.remove(obj33);
        javafx.scene.Node node35 = null;
        boolean boolean36 = nodeList31.add(node35);
        java.util.ListIterator<javafx.scene.Node> nodeItor37 = nodeList31.listIterator();
        boolean boolean38 = nodeList16.removeAll((java.util.Collection<javafx.scene.Node>) nodeList31);
        java.util.stream.Stream<javafx.scene.Node> nodeStream39 = nodeList16.stream();
        boolean boolean40 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList16);
        java.util.stream.Stream<javafx.scene.Node> nodeStream41 = nodeList1.stream();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(nodeItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
// flaky:         org.junit.Assert.assertNotNull(nodeList13);
// flaky:         org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(nodeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
// flaky:         org.junit.Assert.assertNotNull(nodeList28);
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(nodeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(nodeStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(nodeStream41);
    }

    @Test
    public void test666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test666");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) 10.0f, (double) 0L);
// flaky:         addWood2.redraw(10.0d, 10.0d);
// flaky:         addWood2.redraw((double) (short) 10, (double) 0L);
// flaky:         addWood2.redraw((double) 0L, (double) 0L);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
    }

    @Test
    public void test667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test667");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        boolean boolean6 = nodeList1.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream7 = nodeList1.stream();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = nodeList10.remove(obj12);
        javafx.scene.Node[] nodeArray14 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList15 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList15, nodeArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = nodeList15.remove(obj17);
        javafx.scene.Node[] nodeArray19 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList20 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList20, nodeArray19);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean27 = false; // flaky: nodeList20.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList26);
        javafx.scene.Node[] nodeArray29 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList30 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList30, nodeArray29);
        boolean boolean32 = nodeList30.isEmpty();
        int int34 = nodeList30.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        boolean boolean40 = false; // flaky: nodeList38.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node42 = null;
        javafx.scene.Node node43 = null; // flaky: nodeList38.set((int) (byte) 1, node42);
        boolean boolean44 = nodeList30.add(node43);
// flaky:         nodeList20.add(1, node43);
        boolean boolean46 = nodeList15.retainAll((java.util.Collection<javafx.scene.Node>) nodeList20);
        boolean boolean47 = nodeList10.retainAll((java.util.Collection<javafx.scene.Node>) nodeList20);
        boolean boolean48 = nodeList1.addAll((int) (short) 0, (java.util.Collection<javafx.scene.Node>) nodeList20);
        javafx.scene.Node[] nodeArray49 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList50 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList50, nodeArray49);
        boolean boolean52 = nodeList50.isEmpty();
        Interface.WoodTable woodTable53 = null;
        Interface.WoodTotalValues woodTotalValues54 = null;
        Interface.AddWood addWood55 = null; // flaky: new Interface.AddWood(woodTable53, woodTotalValues54);
        java.util.ArrayList<javafx.scene.Node> nodeList56 = null; // flaky: addWood55.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList57 = null; // flaky: addWood55.getAll();
        javafx.scene.Node[] nodeArray58 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList59 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList59, nodeArray58);
        boolean boolean61 = nodeList59.isEmpty();
        int int63 = nodeList59.lastIndexOf((java.lang.Object) 100);
        int int65 = nodeList59.lastIndexOf((java.lang.Object) 10);
        boolean boolean66 = false; // flaky: nodeList57.retainAll((java.util.Collection<javafx.scene.Node>) nodeList59);
        boolean boolean67 = false; // flaky: nodeList50.removeAll((java.util.Collection<javafx.scene.Node>) nodeList57);
        boolean boolean68 = false; // flaky: nodeList57.isEmpty();
        java.util.Iterator<javafx.scene.Node> nodeItor69 = null; // flaky: nodeList57.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor71 = null; // flaky: nodeList57.listIterator(0);
        javafx.scene.Node[] nodeArray72 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList73 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList73, nodeArray72);
        boolean boolean75 = nodeList73.isEmpty();
        Interface.WoodTable woodTable76 = null;
        Interface.WoodTotalValues woodTotalValues77 = null;
        Interface.AddWood addWood78 = null; // flaky: new Interface.AddWood(woodTable76, woodTotalValues77);
        java.util.ArrayList<javafx.scene.Node> nodeList79 = null; // flaky: addWood78.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList80 = null; // flaky: addWood78.getAll();
        javafx.scene.Node[] nodeArray81 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList82 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList82, nodeArray81);
        boolean boolean84 = nodeList82.isEmpty();
        int int86 = nodeList82.lastIndexOf((java.lang.Object) 100);
        int int88 = nodeList82.lastIndexOf((java.lang.Object) 10);
        boolean boolean89 = false; // flaky: nodeList80.retainAll((java.util.Collection<javafx.scene.Node>) nodeList82);
        boolean boolean90 = false; // flaky: nodeList73.removeAll((java.util.Collection<javafx.scene.Node>) nodeList80);
        java.util.List<javafx.scene.Node> nodeList93 = null; // flaky: nodeList80.subList(0, (int) (byte) 0);
        boolean boolean94 = false; // flaky: nodeList57.contains((java.lang.Object) nodeList93);
        boolean boolean95 = false; // flaky: nodeList20.addAll((java.util.Collection<javafx.scene.Node>) nodeList93);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(nodeStream7);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(nodeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(nodeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
// flaky:         org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(nodeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(nodeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList56);
// flaky:         org.junit.Assert.assertNotNull(nodeList57);
        org.junit.Assert.assertNotNull(nodeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor69);
// flaky:         org.junit.Assert.assertNotNull(nodeItor71);
        org.junit.Assert.assertNotNull(nodeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList79);
// flaky:         org.junit.Assert.assertNotNull(nodeList80);
        org.junit.Assert.assertNotNull(nodeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test668");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean14 = nodeList1.isEmpty();
        java.util.Iterator<javafx.scene.Node> nodeItor15 = nodeList1.iterator();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator16 = nodeList1.spliterator();
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = nodeList18.remove(obj20);
        javafx.scene.Node node22 = null;
        boolean boolean23 = nodeList18.add(node22);
        java.util.ListIterator<javafx.scene.Node> nodeItor24 = nodeList18.listIterator();
        Interface.WoodTable woodTable25 = null;
        Interface.WoodTotalValues woodTotalValues26 = null;
        Interface.AddWood addWood27 = null; // flaky: new Interface.AddWood(woodTable25, woodTotalValues26);
        java.util.ArrayList<javafx.scene.Node> nodeList28 = null; // flaky: addWood27.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood27.getAll();
        javafx.scene.Node[] nodeArray30 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList31 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList31, nodeArray30);
        boolean boolean33 = nodeList31.isEmpty();
        int int35 = nodeList31.lastIndexOf((java.lang.Object) 100);
        int int37 = nodeList31.lastIndexOf((java.lang.Object) 10);
        boolean boolean38 = false; // flaky: nodeList29.retainAll((java.util.Collection<javafx.scene.Node>) nodeList31);
        boolean boolean40 = false; // flaky: nodeList29.contains((java.lang.Object) false);
        Interface.WoodTable woodTable41 = null;
        Interface.WoodTotalValues woodTotalValues42 = null;
        Interface.AddWood addWood43 = null; // flaky: new Interface.AddWood(woodTable41, woodTotalValues42);
        java.util.ArrayList<javafx.scene.Node> nodeList44 = null; // flaky: addWood43.getAll();
        boolean boolean45 = false; // flaky: nodeList44.isEmpty();
        boolean boolean47 = false; // flaky: nodeList44.equals((java.lang.Object) 100);
        int int48 = 0; // flaky: nodeList29.lastIndexOf((java.lang.Object) nodeList44);
        javafx.scene.Node[] nodeArray49 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList50 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList50, nodeArray49);
        java.lang.Object obj52 = null;
        boolean boolean53 = nodeList50.remove(obj52);
        javafx.scene.Node[] nodeArray54 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList55 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList55, nodeArray54);
        boolean boolean57 = nodeList55.isEmpty();
        int int59 = nodeList55.lastIndexOf((java.lang.Object) 100);
        boolean boolean60 = nodeList50.equals((java.lang.Object) nodeList55);
        Interface.WoodTable woodTable61 = null;
        Interface.WoodTotalValues woodTotalValues62 = null;
        Interface.AddWood addWood63 = null; // flaky: new Interface.AddWood(woodTable61, woodTotalValues62);
        java.util.ArrayList<javafx.scene.Node> nodeList64 = null; // flaky: addWood63.getAll();
// flaky:         addWood63.redraw((double) 10.0f, (double) 0L);
        boolean boolean68 = nodeList50.contains((java.lang.Object) 10.0f);
        boolean boolean69 = false; // flaky: nodeList44.contains((java.lang.Object) 10.0f);
        boolean boolean70 = false; // flaky: nodeList18.removeAll((java.util.Collection<javafx.scene.Node>) nodeList44);
        Interface.WoodTable woodTable71 = null;
        Interface.WoodTotalValues woodTotalValues72 = null;
        Interface.AddWood addWood73 = null; // flaky: new Interface.AddWood(woodTable71, woodTotalValues72);
        java.util.ArrayList<javafx.scene.Node> nodeList74 = null; // flaky: addWood73.getAll();
        boolean boolean75 = false; // flaky: nodeList74.isEmpty();
        boolean boolean77 = false; // flaky: nodeList74.equals((java.lang.Object) 100);
        java.util.Iterator<javafx.scene.Node> nodeItor78 = null; // flaky: nodeList74.iterator();
        boolean boolean79 = false; // flaky: nodeList44.equals((java.lang.Object) nodeList74);
        javafx.scene.Node[] nodeArray81 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList82 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList82, nodeArray81);
        Interface.WoodTable woodTable85 = null;
        Interface.WoodTotalValues woodTotalValues86 = null;
        Interface.AddWood addWood87 = null; // flaky: new Interface.AddWood(woodTable85, woodTotalValues86);
        java.util.ArrayList<javafx.scene.Node> nodeList88 = null; // flaky: addWood87.getAll();
        boolean boolean89 = false; // flaky: nodeList82.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList88);
        int int91 = nodeList82.indexOf((java.lang.Object) true);
        javafx.scene.Node node93 = null; // flaky: nodeList82.get((int) (byte) 0);
        javafx.scene.Node node94 = null; // flaky: nodeList44.set((int) (short) 0, node93);
        boolean boolean95 = nodeList1.add(node94);
        nodeList1.clear();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(nodeItor15);
        org.junit.Assert.assertNotNull(nodeSpliterator16);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(nodeItor24);
// flaky:         org.junit.Assert.assertNotNull(nodeList28);
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertNotNull(nodeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(nodeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(nodeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(nodeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList88);
// flaky:         org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
// flaky:         org.junit.Assert.assertNotNull(node93);
// flaky:         org.junit.Assert.assertNotNull(node94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test669");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        javafx.scene.Node[] nodeArray14 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList15 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList15, nodeArray14);
        boolean boolean17 = nodeList15.isEmpty();
        int int19 = nodeList15.lastIndexOf((java.lang.Object) 100);
        java.lang.Class<?> wildcardClass20 = nodeList15.getClass();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        java.lang.Class<?> wildcardClass27 = nodeList22.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray28 = new java.lang.reflect.AnnotatedElement[] { wildcardClass20, wildcardClass27 };
        java.lang.reflect.AnnotatedElement[] annotatedElementArray29 = nodeList6.toArray(annotatedElementArray28);
        javafx.scene.Node[] nodeArray30 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList31 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList31, nodeArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = nodeList31.remove(obj33);
        javafx.scene.Node[] nodeArray35 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList36 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList36, nodeArray35);
        Interface.WoodTable woodTable39 = null;
        Interface.WoodTotalValues woodTotalValues40 = null;
        Interface.AddWood addWood41 = null; // flaky: new Interface.AddWood(woodTable39, woodTotalValues40);
        java.util.ArrayList<javafx.scene.Node> nodeList42 = null; // flaky: addWood41.getAll();
        boolean boolean43 = false; // flaky: nodeList36.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList42);
        java.util.stream.Stream<javafx.scene.Node> nodeStream44 = null; // flaky: nodeList42.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator45 = null; // flaky: nodeList42.spliterator();
        javafx.scene.Node[] nodeArray46 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList47 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList47, nodeArray46);
        java.lang.Object obj49 = null;
        boolean boolean50 = nodeList47.remove(obj49);
        boolean boolean51 = false; // flaky: nodeList42.removeAll((java.util.Collection<javafx.scene.Node>) nodeList47);
        int int52 = nodeList31.lastIndexOf((java.lang.Object) nodeList47);
        javafx.scene.Node[] nodeArray53 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList54 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList54, nodeArray53);
        boolean boolean56 = nodeList54.isEmpty();
        int int58 = nodeList54.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable59 = null;
        Interface.WoodTotalValues woodTotalValues60 = null;
        Interface.AddWood addWood61 = null; // flaky: new Interface.AddWood(woodTable59, woodTotalValues60);
        java.util.ArrayList<javafx.scene.Node> nodeList62 = null; // flaky: addWood61.getAll();
        boolean boolean64 = false; // flaky: nodeList62.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node66 = null;
        javafx.scene.Node node67 = null; // flaky: nodeList62.set((int) (byte) 1, node66);
        boolean boolean68 = nodeList54.add(node67);
        javafx.scene.Node[] nodeArray69 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList70 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList70, nodeArray69);
        java.lang.Object obj72 = null;
        boolean boolean73 = nodeList70.remove(obj72);
        boolean boolean74 = nodeList54.retainAll((java.util.Collection<javafx.scene.Node>) nodeList70);
        javafx.scene.Node[] nodeArray75 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList76 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList76, nodeArray75);
        Interface.WoodTable woodTable79 = null;
        Interface.WoodTotalValues woodTotalValues80 = null;
        Interface.AddWood addWood81 = null; // flaky: new Interface.AddWood(woodTable79, woodTotalValues80);
        java.util.ArrayList<javafx.scene.Node> nodeList82 = null; // flaky: addWood81.getAll();
        boolean boolean83 = false; // flaky: nodeList76.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList82);
        java.util.stream.Stream<javafx.scene.Node> nodeStream84 = null; // flaky: nodeList82.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator85 = null; // flaky: nodeList82.spliterator();
        boolean boolean86 = false; // flaky: nodeList54.addAll((java.util.Collection<javafx.scene.Node>) nodeList82);
// flaky:         nodeList82.clear();
        boolean boolean88 = nodeList31.contains((java.lang.Object) nodeList82);
        boolean boolean89 = false; // flaky: nodeList6.containsAll((java.util.Collection<javafx.scene.Node>) nodeList82);
// flaky:         nodeList82.clear();
// flaky:         nodeList82.clear();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(nodeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotatedElementArray28);
        org.junit.Assert.assertNotNull(annotatedElementArray29);
        org.junit.Assert.assertNotNull(nodeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(nodeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList42);
// flaky:         org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream44);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator45);
        org.junit.Assert.assertNotNull(nodeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(nodeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(nodeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(nodeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList82);
// flaky:         org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream84);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator85);
// flaky:         org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test670");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        boolean boolean13 = nodeList11.isEmpty();
        int int15 = nodeList11.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean21 = false; // flaky: nodeList19.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node23 = null;
        javafx.scene.Node node24 = null; // flaky: nodeList19.set((int) (byte) 1, node23);
        boolean boolean25 = nodeList11.add(node24);
// flaky:         nodeList1.add(1, node24);
        java.lang.Object[] objArray27 = nodeList1.toArray();
        java.util.ListIterator<javafx.scene.Node> nodeItor28 = nodeList1.listIterator();
        Interface.WoodTable woodTable29 = null;
        Interface.WoodTotalValues woodTotalValues30 = null; // flaky: new Interface.WoodTotalValues(woodTable29);
        int int31 = nodeList1.lastIndexOf((java.lang.Object) woodTable29);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(nodeItor28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test671");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        javafx.scene.Node[] nodeArray8 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList9 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList9, nodeArray8);
        boolean boolean11 = nodeList9.isEmpty();
        int int13 = nodeList9.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        boolean boolean19 = false; // flaky: nodeList17.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node21 = null;
        javafx.scene.Node node22 = null; // flaky: nodeList17.set((int) (byte) 1, node21);
        boolean boolean23 = nodeList9.add(node22);
        java.util.stream.Stream<javafx.scene.Node> nodeStream24 = nodeList9.stream();
        javafx.scene.Node node25 = null;
        boolean boolean26 = nodeList9.add(node25);
        boolean boolean27 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList9);
        Interface.WoodTable woodTable28 = null;
        Interface.WoodTotalValues woodTotalValues29 = null;
        Interface.AddWood addWood30 = null; // flaky: new Interface.AddWood(woodTable28, woodTotalValues29);
        java.util.ArrayList<javafx.scene.Node> nodeList31 = null; // flaky: addWood30.getAll();
// flaky:         addWood30.redraw((double) 10.0f, (double) 0L);
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood30.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList36 = null; // flaky: addWood30.getAll();
        int int37 = 0; // flaky: nodeList36.size();
        Interface.WoodTable woodTable39 = null;
        Interface.WoodTotalValues woodTotalValues40 = null;
        Interface.AddWood addWood41 = null; // flaky: new Interface.AddWood(woodTable39, woodTotalValues40);
        java.util.ArrayList<javafx.scene.Node> nodeList42 = null; // flaky: addWood41.getAll();
        boolean boolean43 = false; // flaky: nodeList42.isEmpty();
        javafx.scene.Node[] nodeArray45 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList46 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList46, nodeArray45);
        boolean boolean48 = nodeList46.isEmpty();
        int int50 = nodeList46.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable51 = null;
        Interface.WoodTotalValues woodTotalValues52 = null;
        Interface.AddWood addWood53 = null; // flaky: new Interface.AddWood(woodTable51, woodTotalValues52);
        java.util.ArrayList<javafx.scene.Node> nodeList54 = null; // flaky: addWood53.getAll();
        boolean boolean56 = false; // flaky: nodeList54.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node58 = null;
        javafx.scene.Node node59 = null; // flaky: nodeList54.set((int) (byte) 1, node58);
        boolean boolean60 = nodeList46.add(node59);
        javafx.scene.Node[] nodeArray62 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList63 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList63, nodeArray62);
        Interface.WoodTable woodTable66 = null;
        Interface.WoodTotalValues woodTotalValues67 = null;
        Interface.AddWood addWood68 = null; // flaky: new Interface.AddWood(woodTable66, woodTotalValues67);
        java.util.ArrayList<javafx.scene.Node> nodeList69 = null; // flaky: addWood68.getAll();
        boolean boolean70 = false; // flaky: nodeList63.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList69);
        int int72 = nodeList63.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray74 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList75 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList75, nodeArray74);
        boolean boolean77 = nodeList75.isEmpty();
        int int79 = nodeList75.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable80 = null;
        Interface.WoodTotalValues woodTotalValues81 = null;
        Interface.AddWood addWood82 = null; // flaky: new Interface.AddWood(woodTable80, woodTotalValues81);
        java.util.ArrayList<javafx.scene.Node> nodeList83 = null; // flaky: addWood82.getAll();
        boolean boolean85 = false; // flaky: nodeList83.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node87 = null;
        javafx.scene.Node node88 = null; // flaky: nodeList83.set((int) (byte) 1, node87);
        boolean boolean89 = nodeList75.add(node88);
        javafx.scene.Node node90 = null; // flaky: nodeList63.set((int) (short) 0, node88);
        javafx.scene.Node node91 = nodeList46.set((int) (byte) 0, node88);
// flaky:         nodeList42.add((int) (short) 0, node91);
        boolean boolean93 = false; // flaky: nodeList36.addAll((int) (byte) 0, (java.util.Collection<javafx.scene.Node>) nodeList42);
        boolean boolean94 = false; // flaky: nodeList9.addAll((java.util.Collection<javafx.scene.Node>) nodeList42);
        javafx.scene.Node node96 = null; // flaky: nodeList42.remove(0);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(nodeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
// flaky:         org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(nodeStream24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList31);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertNotNull(nodeList36);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 5 + "'", int37 == 5);
// flaky:         org.junit.Assert.assertNotNull(nodeList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(nodeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
// flaky:         org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(nodeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList69);
// flaky:         org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(nodeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
// flaky:         org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
// flaky:         org.junit.Assert.assertNotNull(node90);
// flaky:         org.junit.Assert.assertNotNull(node91);
// flaky:         org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
// flaky:         org.junit.Assert.assertNotNull(node96);
    }

    @Test
    public void test672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test672");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
// flaky:         addWood16.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood16.getAll();
        boolean boolean22 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        javafx.scene.Node[] nodeArray23 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList24 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList24, nodeArray23);
        boolean boolean26 = nodeList24.isEmpty();
        int int28 = nodeList24.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable29 = null;
        Interface.WoodTotalValues woodTotalValues30 = null;
        Interface.AddWood addWood31 = null; // flaky: new Interface.AddWood(woodTable29, woodTotalValues30);
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood31.getAll();
        boolean boolean34 = false; // flaky: nodeList32.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node36 = null;
        javafx.scene.Node node37 = null; // flaky: nodeList32.set((int) (byte) 1, node36);
        boolean boolean38 = nodeList24.add(node37);
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        java.lang.Object obj42 = null;
        boolean boolean43 = nodeList40.remove(obj42);
        boolean boolean44 = nodeList24.retainAll((java.util.Collection<javafx.scene.Node>) nodeList40);
        boolean boolean45 = nodeList24.isEmpty();
        boolean boolean46 = nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList24);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator47 = nodeList6.spliterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor48 = nodeList6.listIterator();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(nodeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertNotNull(nodeItor48);
    }

    @Test
    public void test673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test673");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        javafx.scene.Node[] nodeArray14 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList15 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList15, nodeArray14);
        Interface.WoodTable woodTable18 = null;
        Interface.WoodTotalValues woodTotalValues19 = null;
        Interface.AddWood addWood20 = null; // flaky: new Interface.AddWood(woodTable18, woodTotalValues19);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood20.getAll();
        boolean boolean22 = false; // flaky: nodeList15.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList21);
        int int24 = nodeList15.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray25 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList26 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList26, nodeArray25);
        java.lang.Object obj28 = null;
        boolean boolean29 = nodeList26.remove(obj28);
        boolean boolean30 = nodeList26.isEmpty();
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.lang.String[] strArray34 = nodeList26.toArray(strArray33);
        boolean boolean35 = nodeList15.equals((java.lang.Object) strArray34);
        int int36 = 0; // flaky: nodeList4.lastIndexOf((java.lang.Object) boolean35);
        javafx.scene.Node[] nodeArray37 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList38 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList38, nodeArray37);
        Interface.WoodTable woodTable41 = null;
        Interface.WoodTotalValues woodTotalValues42 = null;
        Interface.AddWood addWood43 = null; // flaky: new Interface.AddWood(woodTable41, woodTotalValues42);
        java.util.ArrayList<javafx.scene.Node> nodeList44 = null; // flaky: addWood43.getAll();
        boolean boolean45 = false; // flaky: nodeList38.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList44);
        int int47 = nodeList38.indexOf((java.lang.Object) true);
        javafx.scene.Node node49 = null; // flaky: nodeList38.get((int) (byte) 0);
        boolean boolean50 = false; // flaky: nodeList4.addAll((java.util.Collection<javafx.scene.Node>) nodeList38);
        java.lang.Class<?> wildcardClass51 = nodeList38.getClass();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(nodeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(nodeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList44);
// flaky:         org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
// flaky:         org.junit.Assert.assertNotNull(node49);
// flaky:         org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test674");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
        Interface.AddWood addWood3 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
// flaky:         woodTotalValues2.redraw(0.0d, (double) 0L);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: woodTotalValues2.getAll();
        javafx.scene.Node[] nodeArray8 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList9 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList9, nodeArray8);
        Interface.WoodTable woodTable12 = null;
        Interface.WoodTotalValues woodTotalValues13 = null;
        Interface.AddWood addWood14 = null; // flaky: new Interface.AddWood(woodTable12, woodTotalValues13);
        java.util.ArrayList<javafx.scene.Node> nodeList15 = null; // flaky: addWood14.getAll();
        boolean boolean16 = false; // flaky: nodeList9.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList15);
        java.util.stream.Stream<javafx.scene.Node> nodeStream17 = null; // flaky: nodeList15.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator18 = null; // flaky: nodeList15.spliterator();
        javafx.scene.Node[] nodeArray19 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList20 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList20, nodeArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = nodeList20.remove(obj22);
        boolean boolean24 = false; // flaky: nodeList15.removeAll((java.util.Collection<javafx.scene.Node>) nodeList20);
        Interface.WoodTable woodTable25 = null;
        Interface.WoodTotalValues woodTotalValues26 = null;
        Interface.AddWood addWood27 = null; // flaky: new Interface.AddWood(woodTable25, woodTotalValues26);
        java.util.ArrayList<javafx.scene.Node> nodeList28 = null; // flaky: addWood27.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood27.getAll();
        int int30 = 0; // flaky: nodeList29.size();
        boolean boolean31 = false; // flaky: nodeList15.containsAll((java.util.Collection<javafx.scene.Node>) nodeList29);
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        boolean boolean35 = nodeList33.isEmpty();
        int int37 = nodeList33.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean43 = false; // flaky: nodeList41.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node45 = null;
        javafx.scene.Node node46 = null; // flaky: nodeList41.set((int) (byte) 1, node45);
        boolean boolean47 = nodeList33.add(node46);
        javafx.scene.Node[] nodeArray48 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList49 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList49, nodeArray48);
        java.lang.Object obj51 = null;
        boolean boolean52 = nodeList49.remove(obj51);
        boolean boolean53 = nodeList33.retainAll((java.util.Collection<javafx.scene.Node>) nodeList49);
        nodeList49.clear();
        java.util.ListIterator<javafx.scene.Node> nodeItor55 = nodeList49.listIterator();
        boolean boolean56 = false; // flaky: nodeList29.containsAll((java.util.Collection<javafx.scene.Node>) nodeList49);
        Interface.WoodTable woodTable58 = null;
        Interface.WoodTotalValues woodTotalValues59 = null;
        Interface.AddWood addWood60 = null; // flaky: new Interface.AddWood(woodTable58, woodTotalValues59);
        java.util.ArrayList<javafx.scene.Node> nodeList61 = null; // flaky: addWood60.getAll();
        boolean boolean62 = false; // flaky: nodeList61.isEmpty();
        javafx.scene.Node[] nodeArray64 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList65 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList65, nodeArray64);
        Interface.WoodTable woodTable68 = null;
        Interface.WoodTotalValues woodTotalValues69 = null;
        Interface.AddWood addWood70 = null; // flaky: new Interface.AddWood(woodTable68, woodTotalValues69);
        java.util.ArrayList<javafx.scene.Node> nodeList71 = null; // flaky: addWood70.getAll();
        boolean boolean72 = false; // flaky: nodeList65.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList71);
        javafx.scene.Node[] nodeArray74 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList75 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList75, nodeArray74);
        boolean boolean77 = nodeList75.isEmpty();
        int int79 = nodeList75.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable80 = null;
        Interface.WoodTotalValues woodTotalValues81 = null;
        Interface.AddWood addWood82 = null; // flaky: new Interface.AddWood(woodTable80, woodTotalValues81);
        java.util.ArrayList<javafx.scene.Node> nodeList83 = null; // flaky: addWood82.getAll();
        boolean boolean85 = false; // flaky: nodeList83.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node87 = null;
        javafx.scene.Node node88 = null; // flaky: nodeList83.set((int) (byte) 1, node87);
        boolean boolean89 = nodeList75.add(node88);
// flaky:         nodeList65.add(1, node88);
        javafx.scene.Node node91 = null; // flaky: nodeList61.set(0, node88);
// flaky:         nodeList29.add((int) (byte) 1, node88);
        int int93 = 0; // flaky: nodeList7.lastIndexOf((java.lang.Object) (byte) 1);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
        org.junit.Assert.assertNotNull(nodeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList15);
// flaky:         org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream17);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertNotNull(nodeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList28);
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(nodeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(nodeItor55);
// flaky:         org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(nodeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList71);
// flaky:         org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(nodeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
// flaky:         org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
// flaky:         org.junit.Assert.assertNotNull(node91);
// flaky:         org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
    }

    @Test
    public void test675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test675");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        Interface.WoodTable woodTable9 = null;
        Interface.WoodTotalValues woodTotalValues10 = null;
        Interface.AddWood addWood11 = null; // flaky: new Interface.AddWood(woodTable9, woodTotalValues10);
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: addWood11.getAll();
        boolean boolean13 = false; // flaky: nodeList6.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray15 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList16 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList16, nodeArray15);
        boolean boolean18 = nodeList16.isEmpty();
        int int20 = nodeList16.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable21 = null;
        Interface.WoodTotalValues woodTotalValues22 = null;
        Interface.AddWood addWood23 = null; // flaky: new Interface.AddWood(woodTable21, woodTotalValues22);
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood23.getAll();
        boolean boolean26 = false; // flaky: nodeList24.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node28 = null;
        javafx.scene.Node node29 = null; // flaky: nodeList24.set((int) (byte) 1, node28);
        boolean boolean30 = nodeList16.add(node29);
// flaky:         nodeList6.add(1, node29);
        boolean boolean32 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        javafx.scene.Node[] nodeArray33 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList34 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList34, nodeArray33);
        Interface.WoodTable woodTable37 = null;
        Interface.WoodTotalValues woodTotalValues38 = null;
        Interface.AddWood addWood39 = null; // flaky: new Interface.AddWood(woodTable37, woodTotalValues38);
        java.util.ArrayList<javafx.scene.Node> nodeList40 = null; // flaky: addWood39.getAll();
        boolean boolean41 = false; // flaky: nodeList34.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList40);
        javafx.scene.Node[] nodeArray43 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList44 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList44, nodeArray43);
        boolean boolean46 = nodeList44.isEmpty();
        int int48 = nodeList44.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable49 = null;
        Interface.WoodTotalValues woodTotalValues50 = null;
        Interface.AddWood addWood51 = null; // flaky: new Interface.AddWood(woodTable49, woodTotalValues50);
        java.util.ArrayList<javafx.scene.Node> nodeList52 = null; // flaky: addWood51.getAll();
        boolean boolean54 = false; // flaky: nodeList52.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node56 = null;
        javafx.scene.Node node57 = null; // flaky: nodeList52.set((int) (byte) 1, node56);
        boolean boolean58 = nodeList44.add(node57);
// flaky:         nodeList34.add(1, node57);
        int int60 = nodeList1.lastIndexOf((java.lang.Object) 1);
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node62 = nodeList1.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(nodeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
// flaky:         org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(nodeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList40);
// flaky:         org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(nodeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test676");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) 10.0f, (double) 0L);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood2.getAll();
        int int9 = 0; // flaky: nodeList8.size();
        Interface.WoodTable woodTable11 = null;
        Interface.WoodTotalValues woodTotalValues12 = null;
        Interface.AddWood addWood13 = null; // flaky: new Interface.AddWood(woodTable11, woodTotalValues12);
        java.util.ArrayList<javafx.scene.Node> nodeList14 = null; // flaky: addWood13.getAll();
        boolean boolean15 = false; // flaky: nodeList14.isEmpty();
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        int int44 = nodeList35.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray46 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList47 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList47, nodeArray46);
        boolean boolean49 = nodeList47.isEmpty();
        int int51 = nodeList47.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable52 = null;
        Interface.WoodTotalValues woodTotalValues53 = null;
        Interface.AddWood addWood54 = null; // flaky: new Interface.AddWood(woodTable52, woodTotalValues53);
        java.util.ArrayList<javafx.scene.Node> nodeList55 = null; // flaky: addWood54.getAll();
        boolean boolean57 = false; // flaky: nodeList55.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node59 = null;
        javafx.scene.Node node60 = null; // flaky: nodeList55.set((int) (byte) 1, node59);
        boolean boolean61 = nodeList47.add(node60);
        javafx.scene.Node node62 = null; // flaky: nodeList35.set((int) (short) 0, node60);
        javafx.scene.Node node63 = nodeList18.set((int) (byte) 0, node60);
// flaky:         nodeList14.add((int) (short) 0, node63);
        boolean boolean65 = false; // flaky: nodeList8.addAll((int) (byte) 0, (java.util.Collection<javafx.scene.Node>) nodeList14);
        javafx.scene.Node[] nodeArray66 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList67 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList67, nodeArray66);
        boolean boolean69 = nodeList67.isEmpty();
        int int70 = 0; // flaky: nodeList14.indexOf((java.lang.Object) nodeList67);
        Interface.WoodTable woodTable71 = null;
        Interface.WoodTotalValues woodTotalValues72 = null;
        Interface.AddWood addWood73 = null; // flaky: new Interface.AddWood(woodTable71, woodTotalValues72);
        java.util.ArrayList<javafx.scene.Node> nodeList74 = null; // flaky: addWood73.getAll();
// flaky:         addWood73.redraw((double) 10.0f, (double) 0L);
// flaky:         addWood73.redraw(0.0d, (double) 1.0f);
        java.util.ArrayList<javafx.scene.Node> nodeList81 = null; // flaky: addWood73.getAll();
        boolean boolean82 = nodeList67.equals((java.lang.Object) addWood73);
        java.util.ArrayList<javafx.scene.Node> nodeList83 = null; // flaky: addWood73.getAll();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator84 = null; // flaky: nodeList83.spliterator();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
// flaky:         org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(nodeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
// flaky:         org.junit.Assert.assertNotNull(node62);
// flaky:         org.junit.Assert.assertNotNull(node63);
// flaky:         org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(nodeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList74);
// flaky:         org.junit.Assert.assertNotNull(nodeList81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList83);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator84);
    }

    @Test
    public void test677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test677");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues1.getAll();
        java.util.Iterator<javafx.scene.Node> nodeItor4 = null; // flaky: nodeList3.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor5 = null; // flaky: nodeList3.listIterator();
        java.util.stream.Stream<javafx.scene.Node> nodeStream6 = null; // flaky: nodeList3.parallelStream();
        javafx.scene.Node[] nodeArray7 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList8 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList8, nodeArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = nodeList8.remove(obj10);
        int int12 = nodeList8.size();
        javafx.scene.Node[] nodeArray13 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList14 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList14, nodeArray13);
        Interface.WoodTable woodTable17 = null;
        Interface.WoodTotalValues woodTotalValues18 = null;
        Interface.AddWood addWood19 = null; // flaky: new Interface.AddWood(woodTable17, woodTotalValues18);
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood19.getAll();
        boolean boolean21 = false; // flaky: nodeList14.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList20);
        boolean boolean22 = nodeList8.retainAll((java.util.Collection<javafx.scene.Node>) nodeList14);
        java.util.stream.Stream<javafx.scene.Node> nodeStream23 = nodeList8.parallelStream();
        boolean boolean24 = false; // flaky: nodeList3.retainAll((java.util.Collection<javafx.scene.Node>) nodeList8);
        javafx.scene.Node[] nodeArray25 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList26 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList26, nodeArray25);
        java.lang.Object obj28 = null;
        boolean boolean29 = nodeList26.remove(obj28);
        boolean boolean30 = nodeList26.isEmpty();
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.lang.String[] strArray34 = nodeList26.toArray(strArray33);
        boolean boolean35 = false; // flaky: nodeList3.containsAll((java.util.Collection<javafx.scene.Node>) nodeList26);
        Interface.WoodTable woodTable36 = null;
        Interface.WoodTotalValues woodTotalValues37 = null;
        Interface.AddWood addWood38 = null; // flaky: new Interface.AddWood(woodTable36, woodTotalValues37);
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood38.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList40 = null; // flaky: addWood38.getAll();
        javafx.scene.Node[] nodeArray41 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList42 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList42, nodeArray41);
        boolean boolean44 = nodeList42.isEmpty();
        int int46 = nodeList42.lastIndexOf((java.lang.Object) 100);
        int int48 = nodeList42.lastIndexOf((java.lang.Object) 10);
        boolean boolean49 = false; // flaky: nodeList40.retainAll((java.util.Collection<javafx.scene.Node>) nodeList42);
        javafx.scene.Node[] nodeArray50 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList51 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList51, nodeArray50);
        boolean boolean53 = nodeList51.isEmpty();
        int int55 = nodeList51.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable56 = null;
        Interface.WoodTotalValues woodTotalValues57 = null;
        Interface.AddWood addWood58 = null; // flaky: new Interface.AddWood(woodTable56, woodTotalValues57);
        java.util.ArrayList<javafx.scene.Node> nodeList59 = null; // flaky: addWood58.getAll();
        boolean boolean61 = false; // flaky: nodeList59.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node63 = null;
        javafx.scene.Node node64 = null; // flaky: nodeList59.set((int) (byte) 1, node63);
        boolean boolean65 = nodeList51.add(node64);
        java.util.stream.Stream<javafx.scene.Node> nodeStream66 = nodeList51.stream();
        boolean boolean67 = nodeList42.equals((java.lang.Object) nodeStream66);
        boolean boolean68 = false; // flaky: nodeList3.addAll((java.util.Collection<javafx.scene.Node>) nodeList42);
        java.lang.Object[] objArray69 = nodeList42.toArray();
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeItor4);
// flaky:         org.junit.Assert.assertNotNull(nodeItor5);
// flaky:         org.junit.Assert.assertNotNull(nodeStream6);
        org.junit.Assert.assertNotNull(nodeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(nodeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
// flaky:         org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(nodeStream23);
// flaky:         org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(nodeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
// flaky:         org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
// flaky:         org.junit.Assert.assertNotNull(nodeList40);
        org.junit.Assert.assertNotNull(nodeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(nodeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
// flaky:         org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(nodeStream66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
    }

    @Test
    public void test678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test678");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList18 = null; // flaky: addWood16.getAll();
        javafx.scene.Node[] nodeArray19 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList20 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList20, nodeArray19);
        boolean boolean22 = nodeList20.isEmpty();
        int int24 = nodeList20.lastIndexOf((java.lang.Object) 100);
        int int26 = nodeList20.lastIndexOf((java.lang.Object) 10);
        boolean boolean27 = false; // flaky: nodeList18.retainAll((java.util.Collection<javafx.scene.Node>) nodeList20);
        javafx.scene.Node[] nodeArray28 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList29 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList29, nodeArray28);
        boolean boolean31 = nodeList29.isEmpty();
        int int33 = nodeList29.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable34 = null;
        Interface.WoodTotalValues woodTotalValues35 = null;
        Interface.AddWood addWood36 = null; // flaky: new Interface.AddWood(woodTable34, woodTotalValues35);
        java.util.ArrayList<javafx.scene.Node> nodeList37 = null; // flaky: addWood36.getAll();
        boolean boolean39 = false; // flaky: nodeList37.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node41 = null;
        javafx.scene.Node node42 = null; // flaky: nodeList37.set((int) (byte) 1, node41);
        boolean boolean43 = nodeList29.add(node42);
        java.util.stream.Stream<javafx.scene.Node> nodeStream44 = nodeList29.stream();
        boolean boolean45 = nodeList20.equals((java.lang.Object) nodeStream44);
        boolean boolean46 = nodeList20.isEmpty();
        boolean boolean47 = nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList20);
        java.util.ListIterator<javafx.scene.Node> nodeItor48 = nodeList1.listIterator();
        java.util.stream.Stream<javafx.scene.Node> nodeStream49 = nodeList1.parallelStream();
        boolean boolean50 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray52 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList53 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList53, nodeArray52);
        boolean boolean55 = nodeList53.isEmpty();
        int int57 = nodeList53.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable58 = null;
        Interface.WoodTotalValues woodTotalValues59 = null;
        Interface.AddWood addWood60 = null; // flaky: new Interface.AddWood(woodTable58, woodTotalValues59);
        java.util.ArrayList<javafx.scene.Node> nodeList61 = null; // flaky: addWood60.getAll();
        boolean boolean63 = false; // flaky: nodeList61.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node65 = null;
        javafx.scene.Node node66 = null; // flaky: nodeList61.set((int) (byte) 1, node65);
        boolean boolean67 = nodeList53.add(node66);
        javafx.scene.Node[] nodeArray69 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList70 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList70, nodeArray69);
        Interface.WoodTable woodTable73 = null;
        Interface.WoodTotalValues woodTotalValues74 = null;
        Interface.AddWood addWood75 = null; // flaky: new Interface.AddWood(woodTable73, woodTotalValues74);
        java.util.ArrayList<javafx.scene.Node> nodeList76 = null; // flaky: addWood75.getAll();
        boolean boolean77 = false; // flaky: nodeList70.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList76);
        int int79 = nodeList70.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray81 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList82 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList82, nodeArray81);
        boolean boolean84 = nodeList82.isEmpty();
        int int86 = nodeList82.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable87 = null;
        Interface.WoodTotalValues woodTotalValues88 = null;
        Interface.AddWood addWood89 = null; // flaky: new Interface.AddWood(woodTable87, woodTotalValues88);
        java.util.ArrayList<javafx.scene.Node> nodeList90 = null; // flaky: addWood89.getAll();
        boolean boolean92 = false; // flaky: nodeList90.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node94 = null;
        javafx.scene.Node node95 = null; // flaky: nodeList90.set((int) (byte) 1, node94);
        boolean boolean96 = nodeList82.add(node95);
        javafx.scene.Node node97 = null; // flaky: nodeList70.set((int) (short) 0, node95);
        javafx.scene.Node node98 = nodeList53.set((int) (byte) 0, node95);
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node99 = nodeList1.set((int) (short) 10, node95);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList18);
        org.junit.Assert.assertNotNull(nodeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(nodeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(nodeStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(nodeItor48);
        org.junit.Assert.assertNotNull(nodeStream49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(nodeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
// flaky:         org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(nodeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList76);
// flaky:         org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(nodeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
// flaky:         org.junit.Assert.assertNotNull(node95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
// flaky:         org.junit.Assert.assertNotNull(node97);
// flaky:         org.junit.Assert.assertNotNull(node98);
    }

    @Test
    public void test679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test679");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node node5 = null;
        boolean boolean6 = nodeList1.add(node5);
        java.util.ListIterator<javafx.scene.Node> nodeItor7 = nodeList1.listIterator();
        Interface.WoodTable woodTable8 = null;
        Interface.WoodTotalValues woodTotalValues9 = null;
        Interface.AddWood addWood10 = null; // flaky: new Interface.AddWood(woodTable8, woodTotalValues9);
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: addWood10.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: addWood10.getAll();
        javafx.scene.Node[] nodeArray13 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList14 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList14, nodeArray13);
        boolean boolean16 = nodeList14.isEmpty();
        int int18 = nodeList14.lastIndexOf((java.lang.Object) 100);
        int int20 = nodeList14.lastIndexOf((java.lang.Object) 10);
        boolean boolean21 = false; // flaky: nodeList12.retainAll((java.util.Collection<javafx.scene.Node>) nodeList14);
        boolean boolean23 = false; // flaky: nodeList12.contains((java.lang.Object) false);
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTotalValues woodTotalValues25 = null;
        Interface.AddWood addWood26 = null; // flaky: new Interface.AddWood(woodTable24, woodTotalValues25);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood26.getAll();
        boolean boolean28 = false; // flaky: nodeList27.isEmpty();
        boolean boolean30 = false; // flaky: nodeList27.equals((java.lang.Object) 100);
        int int31 = 0; // flaky: nodeList12.lastIndexOf((java.lang.Object) nodeList27);
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        java.lang.Object obj35 = null;
        boolean boolean36 = nodeList33.remove(obj35);
        javafx.scene.Node[] nodeArray37 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList38 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList38, nodeArray37);
        boolean boolean40 = nodeList38.isEmpty();
        int int42 = nodeList38.lastIndexOf((java.lang.Object) 100);
        boolean boolean43 = nodeList33.equals((java.lang.Object) nodeList38);
        Interface.WoodTable woodTable44 = null;
        Interface.WoodTotalValues woodTotalValues45 = null;
        Interface.AddWood addWood46 = null; // flaky: new Interface.AddWood(woodTable44, woodTotalValues45);
        java.util.ArrayList<javafx.scene.Node> nodeList47 = null; // flaky: addWood46.getAll();
// flaky:         addWood46.redraw((double) 10.0f, (double) 0L);
        boolean boolean51 = nodeList33.contains((java.lang.Object) 10.0f);
        boolean boolean52 = false; // flaky: nodeList27.contains((java.lang.Object) 10.0f);
        boolean boolean53 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList27);
        java.util.function.UnaryOperator<javafx.scene.Node> nodeUnaryOperator54 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList27.replaceAll(nodeUnaryOperator54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(nodeItor7);
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertNotNull(nodeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(nodeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test680");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor8 = nodeList1.listIterator();
        int int9 = nodeList1.size();
        boolean boolean10 = nodeList1.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<javafx.scene.Node> nodeList13 = nodeList1.subList((int) ' ', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(nodeItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test681");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        javafx.scene.Node[] nodeArray14 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList15 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList15, nodeArray14);
        boolean boolean17 = nodeList15.isEmpty();
        int int19 = nodeList15.lastIndexOf((java.lang.Object) 100);
        java.lang.Class<?> wildcardClass20 = nodeList15.getClass();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        java.lang.Class<?> wildcardClass27 = nodeList22.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray28 = new java.lang.reflect.AnnotatedElement[] { wildcardClass20, wildcardClass27 };
        java.lang.reflect.AnnotatedElement[] annotatedElementArray29 = nodeList6.toArray(annotatedElementArray28);
        java.util.stream.Stream<javafx.scene.Node> nodeStream30 = nodeList6.stream();
        java.lang.Class<?> wildcardClass31 = nodeList6.getClass();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(nodeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotatedElementArray28);
        org.junit.Assert.assertNotNull(annotatedElementArray29);
        org.junit.Assert.assertNotNull(nodeStream30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test682");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList18 = null; // flaky: addWood16.getAll();
        boolean boolean19 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList18);
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        java.lang.Object obj23 = null;
        boolean boolean24 = nodeList21.remove(obj23);
        javafx.scene.Node node25 = null;
        boolean boolean26 = nodeList21.add(node25);
        java.util.ListIterator<javafx.scene.Node> nodeItor27 = nodeList21.listIterator();
        boolean boolean28 = nodeList6.removeAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        java.util.stream.Stream<javafx.scene.Node> nodeStream29 = nodeList6.parallelStream();
        java.util.stream.Stream<javafx.scene.Node> nodeStream30 = nodeList6.stream();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList18);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(nodeItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(nodeStream29);
        org.junit.Assert.assertNotNull(nodeStream30);
    }

    @Test
    public void test683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test683");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        javafx.scene.Node[] nodeArray8 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList9 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList9, nodeArray8);
        boolean boolean11 = nodeList9.isEmpty();
        int int13 = nodeList9.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        boolean boolean19 = false; // flaky: nodeList17.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node21 = null;
        javafx.scene.Node node22 = null; // flaky: nodeList17.set((int) (byte) 1, node21);
        boolean boolean23 = nodeList9.add(node22);
        java.util.stream.Stream<javafx.scene.Node> nodeStream24 = nodeList9.stream();
        javafx.scene.Node node25 = null;
        boolean boolean26 = nodeList9.add(node25);
        boolean boolean27 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList9);
        java.lang.Object[] objArray28 = nodeList9.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<javafx.scene.Node> nodeList31 = nodeList9.subList((int) 'a', (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(97) > toIndex(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(nodeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
// flaky:         org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(nodeStream24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objArray28);
    }

    @Test
    public void test684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test684");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        Interface.WoodTable woodTable9 = null;
        Interface.WoodTotalValues woodTotalValues10 = null;
        Interface.AddWood addWood11 = null; // flaky: new Interface.AddWood(woodTable9, woodTotalValues10);
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: addWood11.getAll();
        boolean boolean13 = false; // flaky: nodeList12.isEmpty();
        boolean boolean14 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray15 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList16 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList16, nodeArray15);
        Interface.WoodTable woodTable19 = null;
        Interface.WoodTotalValues woodTotalValues20 = null;
        Interface.AddWood addWood21 = null; // flaky: new Interface.AddWood(woodTable19, woodTotalValues20);
        java.util.ArrayList<javafx.scene.Node> nodeList22 = null; // flaky: addWood21.getAll();
        boolean boolean23 = false; // flaky: nodeList16.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList22);
        javafx.scene.Node[] nodeArray25 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList26 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList26, nodeArray25);
        boolean boolean28 = nodeList26.isEmpty();
        int int30 = nodeList26.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable31 = null;
        Interface.WoodTotalValues woodTotalValues32 = null;
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable31, woodTotalValues32);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
        boolean boolean36 = false; // flaky: nodeList34.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node38 = null;
        javafx.scene.Node node39 = null; // flaky: nodeList34.set((int) (byte) 1, node38);
        boolean boolean40 = nodeList26.add(node39);
// flaky:         nodeList16.add(1, node39);
        java.util.stream.Stream<javafx.scene.Node> nodeStream42 = nodeList16.stream();
        boolean boolean43 = nodeList16.isEmpty();
        boolean boolean44 = false; // flaky: nodeList12.retainAll((java.util.Collection<javafx.scene.Node>) nodeList16);
        java.util.function.UnaryOperator<javafx.scene.Node> nodeUnaryOperator45 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList12.replaceAll(nodeUnaryOperator45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(nodeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList22);
// flaky:         org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(nodeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(nodeStream42);
// flaky:         org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test685");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        Interface.WoodTable woodTable10 = null;
        Interface.WoodTotalValues woodTotalValues11 = null;
        Interface.AddWood addWood12 = null; // flaky: new Interface.AddWood(woodTable10, woodTotalValues11);
        java.util.ArrayList<javafx.scene.Node> nodeList13 = null; // flaky: addWood12.getAll();
        boolean boolean15 = false; // flaky: nodeList13.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node17 = null;
        javafx.scene.Node node18 = null; // flaky: nodeList13.set((int) (byte) 1, node17);
        java.util.ListIterator<javafx.scene.Node> nodeItor19 = null; // flaky: nodeList13.listIterator();
        Interface.WoodTable woodTable20 = null;
        Interface.WoodTotalValues woodTotalValues21 = null;
        Interface.AddWood addWood22 = null; // flaky: new Interface.AddWood(woodTable20, woodTotalValues21);
        java.util.ArrayList<javafx.scene.Node> nodeList23 = null; // flaky: addWood22.getAll();
// flaky:         addWood22.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood22.getAll();
        java.util.stream.Stream<javafx.scene.Node> nodeStream28 = null; // flaky: nodeList27.stream();
        java.util.Iterator<javafx.scene.Node> nodeItor29 = null; // flaky: nodeList27.iterator();
        boolean boolean30 = false; // flaky: nodeList13.equals((java.lang.Object) nodeList27);
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        java.lang.Object obj35 = null;
        boolean boolean36 = nodeList33.remove(obj35);
        javafx.scene.Node[] nodeArray37 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList38 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList38, nodeArray37);
        boolean boolean40 = nodeList38.isEmpty();
        int int42 = nodeList38.lastIndexOf((java.lang.Object) 100);
        boolean boolean43 = nodeList38.isEmpty();
        nodeList38.clear();
        boolean boolean45 = nodeList33.removeAll((java.util.Collection<javafx.scene.Node>) nodeList38);
        Interface.WoodTable woodTable46 = null;
        Interface.WoodTotalValues woodTotalValues47 = null;
        Interface.AddWood addWood48 = null; // flaky: new Interface.AddWood(woodTable46, woodTotalValues47);
        java.util.ArrayList<javafx.scene.Node> nodeList49 = null; // flaky: addWood48.getAll();
// flaky:         addWood48.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood48.getAll();
        boolean boolean54 = false; // flaky: nodeList38.addAll((java.util.Collection<javafx.scene.Node>) nodeList53);
        java.lang.Object[] objArray55 = nodeList38.toArray();
        Interface.WoodTable woodTable56 = null;
        Interface.WoodTotalValues woodTotalValues57 = null;
        Interface.AddWood addWood58 = null; // flaky: new Interface.AddWood(woodTable56, woodTotalValues57);
        java.util.ArrayList<javafx.scene.Node> nodeList59 = null; // flaky: addWood58.getAll();
// flaky:         addWood58.redraw((double) 10.0f, (double) (-1L));
        java.util.ArrayList<javafx.scene.Node> nodeList63 = null; // flaky: addWood58.getAll();
        int int64 = nodeList38.lastIndexOf((java.lang.Object) addWood58);
        java.util.ArrayList<javafx.scene.Node> nodeList65 = null; // flaky: addWood58.getAll();
        javafx.scene.Node[] nodeArray67 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList68 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList68, nodeArray67);
        Interface.WoodTable woodTable71 = null;
        Interface.WoodTotalValues woodTotalValues72 = null;
        Interface.AddWood addWood73 = null; // flaky: new Interface.AddWood(woodTable71, woodTotalValues72);
        java.util.ArrayList<javafx.scene.Node> nodeList74 = null; // flaky: addWood73.getAll();
        boolean boolean75 = false; // flaky: nodeList68.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList74);
        javafx.scene.Node[] nodeArray77 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList78 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList78, nodeArray77);
        boolean boolean80 = nodeList78.isEmpty();
        int int82 = nodeList78.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable83 = null;
        Interface.WoodTotalValues woodTotalValues84 = null;
        Interface.AddWood addWood85 = null; // flaky: new Interface.AddWood(woodTable83, woodTotalValues84);
        java.util.ArrayList<javafx.scene.Node> nodeList86 = null; // flaky: addWood85.getAll();
        boolean boolean88 = false; // flaky: nodeList86.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node90 = null;
        javafx.scene.Node node91 = null; // flaky: nodeList86.set((int) (byte) 1, node90);
        boolean boolean92 = nodeList78.add(node91);
// flaky:         nodeList68.add(1, node91);
        javafx.scene.Node node94 = null; // flaky: nodeList65.set((int) (short) 0, node91);
// flaky:         nodeList13.add((int) (short) 0, node94);
        javafx.scene.Node node96 = null; // flaky: nodeList1.set((int) (short) 0, node94);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertNotNull(node18);
// flaky:         org.junit.Assert.assertNotNull(nodeItor19);
// flaky:         org.junit.Assert.assertNotNull(nodeList23);
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
// flaky:         org.junit.Assert.assertNotNull(nodeStream28);
// flaky:         org.junit.Assert.assertNotNull(nodeItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(nodeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList49);
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
// flaky:         org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objArray55);
// flaky:         org.junit.Assert.assertNotNull(nodeList59);
// flaky:         org.junit.Assert.assertNotNull(nodeList63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList65);
        org.junit.Assert.assertNotNull(nodeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList74);
// flaky:         org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(nodeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
// flaky:         org.junit.Assert.assertNotNull(node91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
// flaky:         org.junit.Assert.assertNotNull(node94);
// flaky:         org.junit.Assert.assertNotNull(node96);
    }

    @Test
    public void test686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test686");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        boolean boolean8 = nodeList1.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = nodeList1.parallelStream();
        java.lang.Class<?> wildcardClass10 = nodeList1.getClass();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(nodeStream9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test687");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTotalValues woodTotalValues3 = null; // flaky: new Interface.WoodTotalValues(woodTable2);
        Interface.AddWood addWood4 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues3);
// flaky:         woodTotalValues3.redraw(0.0d, (double) 0L);
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues3);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList10 = null; // flaky: addWood8.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: addWood8.getAll();
        java.util.stream.Stream<javafx.scene.Node> nodeStream12 = null; // flaky: nodeList11.stream();
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
// flaky:         org.junit.Assert.assertNotNull(nodeList10);
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
// flaky:         org.junit.Assert.assertNotNull(nodeStream12);
    }

    @Test
    public void test688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test688");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        javafx.scene.Node[] nodeArray2 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList3 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList3, nodeArray2);
        boolean boolean5 = nodeList3.isEmpty();
        int int7 = nodeList3.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable8 = null;
        Interface.WoodTotalValues woodTotalValues9 = null;
        Interface.AddWood addWood10 = null; // flaky: new Interface.AddWood(woodTable8, woodTotalValues9);
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: addWood10.getAll();
        boolean boolean13 = false; // flaky: nodeList11.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node15 = null;
        javafx.scene.Node node16 = null; // flaky: nodeList11.set((int) (byte) 1, node15);
        boolean boolean17 = nodeList3.add(node16);
        java.util.stream.Stream<javafx.scene.Node> nodeStream18 = nodeList3.parallelStream();
        nodeList3.clear();
        Interface.WoodTable woodTable20 = null;
        Interface.WoodTable woodTable21 = null;
        Interface.WoodTotalValues woodTotalValues22 = null; // flaky: new Interface.WoodTotalValues(woodTable21);
        java.util.ArrayList<javafx.scene.Node> nodeList23 = null; // flaky: woodTotalValues22.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: woodTotalValues22.getAll();
// flaky:         woodTotalValues22.redraw((double) (short) 100, 10.0d);
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable20, woodTotalValues22);
// flaky:         woodTotalValues22.redraw(10.0d, (double) 1.0f);
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: woodTotalValues22.getAll();
        int int33 = nodeList3.indexOf((java.lang.Object) woodTotalValues22);
        Interface.AddWood addWood34 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues22);
// flaky:         woodTotalValues22.redraw((double) 100.0f, (double) 2);
        Interface.AddWood addWood38 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues22);
        org.junit.Assert.assertNotNull(nodeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(nodeStream18);
// flaky:         org.junit.Assert.assertNotNull(nodeList23);
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test689");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        int int5 = 0; // flaky: nodeList4.size();
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTable woodTable7 = null;
        Interface.WoodTable woodTable8 = null;
        Interface.WoodTable woodTable9 = null;
        Interface.WoodTotalValues woodTotalValues10 = null; // flaky: new Interface.WoodTotalValues(woodTable9);
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: woodTotalValues10.getAll();
        Interface.AddWood addWood12 = null; // flaky: new Interface.AddWood(woodTable8, woodTotalValues10);
        Interface.AddWood addWood13 = null; // flaky: new Interface.AddWood(woodTable7, woodTotalValues10);
        Interface.AddWood addWood14 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues10);
// flaky:         woodTotalValues10.redraw((double) ' ', (double) 10.0f);
        java.util.ArrayList<javafx.scene.Node> nodeList18 = null; // flaky: woodTotalValues10.getAll();
        boolean boolean19 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList18);
        java.lang.Object obj20 = null;
        int int21 = 0; // flaky: nodeList4.lastIndexOf(obj20);
        java.util.stream.Stream<javafx.scene.Node> nodeStream22 = null; // flaky: nodeList4.stream();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
// flaky:         org.junit.Assert.assertNotNull(nodeList18);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeStream22);
    }

    @Test
    public void test690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test690");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        javafx.scene.Node[] nodeArray16 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList17 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList17, nodeArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = nodeList17.remove(obj19);
        boolean boolean21 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList17);
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = nodeList23.remove(obj25);
        javafx.scene.Node node27 = null;
        boolean boolean28 = nodeList23.add(node27);
        boolean boolean29 = nodeList17.equals((java.lang.Object) boolean28);
        Interface.WoodTable woodTable30 = null;
        Interface.WoodTotalValues woodTotalValues31 = null;
        Interface.AddWood addWood32 = null; // flaky: new Interface.AddWood(woodTable30, woodTotalValues31);
        java.util.ArrayList<javafx.scene.Node> nodeList33 = null; // flaky: addWood32.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood32.getAll();
        javafx.scene.Node[] nodeArray35 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList36 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList36, nodeArray35);
        boolean boolean38 = nodeList36.isEmpty();
        int int40 = nodeList36.lastIndexOf((java.lang.Object) 100);
        int int42 = nodeList36.lastIndexOf((java.lang.Object) 10);
        boolean boolean43 = false; // flaky: nodeList34.retainAll((java.util.Collection<javafx.scene.Node>) nodeList36);
        boolean boolean45 = false; // flaky: nodeList34.contains((java.lang.Object) false);
        Interface.WoodTable woodTable46 = null;
        Interface.WoodTotalValues woodTotalValues47 = null;
        Interface.AddWood addWood48 = null; // flaky: new Interface.AddWood(woodTable46, woodTotalValues47);
        java.util.ArrayList<javafx.scene.Node> nodeList49 = null; // flaky: addWood48.getAll();
        boolean boolean50 = false; // flaky: nodeList49.isEmpty();
        boolean boolean52 = false; // flaky: nodeList49.equals((java.lang.Object) 100);
        int int53 = 0; // flaky: nodeList34.lastIndexOf((java.lang.Object) nodeList49);
        boolean boolean54 = false; // flaky: nodeList34.isEmpty();
        javafx.scene.Node[] nodeArray55 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList56 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList56, nodeArray55);
        Interface.WoodTable woodTable59 = null;
        Interface.WoodTotalValues woodTotalValues60 = null;
        Interface.AddWood addWood61 = null; // flaky: new Interface.AddWood(woodTable59, woodTotalValues60);
        java.util.ArrayList<javafx.scene.Node> nodeList62 = null; // flaky: addWood61.getAll();
        boolean boolean63 = false; // flaky: nodeList56.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList62);
        int int65 = nodeList56.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray67 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList68 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList68, nodeArray67);
        boolean boolean70 = nodeList68.isEmpty();
        int int72 = nodeList68.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable73 = null;
        Interface.WoodTotalValues woodTotalValues74 = null;
        Interface.AddWood addWood75 = null; // flaky: new Interface.AddWood(woodTable73, woodTotalValues74);
        java.util.ArrayList<javafx.scene.Node> nodeList76 = null; // flaky: addWood75.getAll();
        boolean boolean78 = false; // flaky: nodeList76.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node80 = null;
        javafx.scene.Node node81 = null; // flaky: nodeList76.set((int) (byte) 1, node80);
        boolean boolean82 = nodeList68.add(node81);
        javafx.scene.Node node83 = null; // flaky: nodeList56.set((int) (short) 0, node81);
        int int84 = 0; // flaky: nodeList34.lastIndexOf((java.lang.Object) nodeList56);
        boolean boolean85 = nodeList17.remove((java.lang.Object) nodeList56);
        java.lang.Object[] objArray86 = nodeList56.toArray();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator87 = nodeList56.spliterator();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList33);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
        org.junit.Assert.assertNotNull(nodeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(nodeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList62);
// flaky:         org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(nodeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
// flaky:         org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
// flaky:         org.junit.Assert.assertNotNull(node83);
// flaky:         org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertNotNull(nodeSpliterator87);
    }

    @Test
    public void test691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test691");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        boolean boolean5 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        Interface.WoodTable woodTable10 = null;
        Interface.WoodTotalValues woodTotalValues11 = null;
        Interface.AddWood addWood12 = null; // flaky: new Interface.AddWood(woodTable10, woodTotalValues11);
        java.util.ArrayList<javafx.scene.Node> nodeList13 = null; // flaky: addWood12.getAll();
        boolean boolean14 = false; // flaky: nodeList7.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList13);
        int int16 = nodeList7.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray18 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList19 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList19, nodeArray18);
        boolean boolean21 = nodeList19.isEmpty();
        int int23 = nodeList19.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTotalValues woodTotalValues25 = null;
        Interface.AddWood addWood26 = null; // flaky: new Interface.AddWood(woodTable24, woodTotalValues25);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood26.getAll();
        boolean boolean29 = false; // flaky: nodeList27.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node31 = null;
        javafx.scene.Node node32 = null; // flaky: nodeList27.set((int) (byte) 1, node31);
        boolean boolean33 = nodeList19.add(node32);
        javafx.scene.Node node34 = null; // flaky: nodeList7.set((int) (short) 0, node32);
        boolean boolean35 = nodeList1.add(node34);
        java.util.Iterator<javafx.scene.Node> nodeItor36 = nodeList1.iterator();
        boolean boolean37 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray38 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList39 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList39, nodeArray38);
        boolean boolean41 = nodeList39.isEmpty();
        int int43 = nodeList39.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable44 = null;
        Interface.WoodTotalValues woodTotalValues45 = null;
        Interface.AddWood addWood46 = null; // flaky: new Interface.AddWood(woodTable44, woodTotalValues45);
        java.util.ArrayList<javafx.scene.Node> nodeList47 = null; // flaky: addWood46.getAll();
        boolean boolean49 = false; // flaky: nodeList47.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node51 = null;
        javafx.scene.Node node52 = null; // flaky: nodeList47.set((int) (byte) 1, node51);
        boolean boolean53 = nodeList39.add(node52);
        Interface.WoodTable woodTable54 = null;
        Interface.WoodTotalValues woodTotalValues55 = null;
        Interface.AddWood addWood56 = null; // flaky: new Interface.AddWood(woodTable54, woodTotalValues55);
        java.util.ArrayList<javafx.scene.Node> nodeList57 = null; // flaky: addWood56.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList58 = null; // flaky: addWood56.getAll();
        javafx.scene.Node[] nodeArray59 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList60 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList60, nodeArray59);
        boolean boolean62 = nodeList60.isEmpty();
        int int64 = nodeList60.lastIndexOf((java.lang.Object) 100);
        int int66 = nodeList60.lastIndexOf((java.lang.Object) 10);
        boolean boolean67 = false; // flaky: nodeList58.retainAll((java.util.Collection<javafx.scene.Node>) nodeList60);
        boolean boolean68 = nodeList39.removeAll((java.util.Collection<javafx.scene.Node>) nodeList60);
        Interface.WoodTable woodTable69 = null;
        Interface.WoodTotalValues woodTotalValues70 = null;
        Interface.AddWood addWood71 = null; // flaky: new Interface.AddWood(woodTable69, woodTotalValues70);
        java.util.ArrayList<javafx.scene.Node> nodeList72 = null; // flaky: addWood71.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList73 = null; // flaky: addWood71.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList74 = null; // flaky: addWood71.getAll();
        boolean boolean75 = false; // flaky: nodeList60.addAll((java.util.Collection<javafx.scene.Node>) nodeList74);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator76 = nodeList60.spliterator();
        javafx.scene.Node[] nodeArray77 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList78 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList78, nodeArray77);
        boolean boolean80 = nodeList78.isEmpty();
        boolean boolean81 = nodeList60.containsAll((java.util.Collection<javafx.scene.Node>) nodeList78);
        Interface.WoodTable woodTable82 = null;
        Interface.WoodTotalValues woodTotalValues83 = null;
        Interface.AddWood addWood84 = null; // flaky: new Interface.AddWood(woodTable82, woodTotalValues83);
        java.util.ArrayList<javafx.scene.Node> nodeList85 = null; // flaky: addWood84.getAll();
        boolean boolean87 = false; // flaky: nodeList85.equals((java.lang.Object) (byte) 1);
        javafx.css.Styleable[] styleableArray88 = new javafx.css.Styleable[] {};
        javafx.css.Styleable[] styleableArray89 = null; // flaky: nodeList85.toArray(styleableArray88);
        int int90 = nodeList60.indexOf((java.lang.Object) styleableArray88);
        javafx.css.Styleable[] styleableArray91 = nodeList1.toArray(styleableArray88);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList13);
// flaky:         org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(nodeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(nodeItor36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(nodeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList57);
// flaky:         org.junit.Assert.assertNotNull(nodeList58);
        org.junit.Assert.assertNotNull(nodeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList72);
// flaky:         org.junit.Assert.assertNotNull(nodeList73);
// flaky:         org.junit.Assert.assertNotNull(nodeList74);
// flaky:         org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator76);
        org.junit.Assert.assertNotNull(nodeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(styleableArray88);
// flaky:         org.junit.Assert.assertNotNull(styleableArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(styleableArray91);
    }

    @Test
    public void test692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test692");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray7 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList8 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList8, nodeArray7);
        boolean boolean10 = nodeList8.isEmpty();
        int int12 = nodeList8.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable13 = null;
        Interface.WoodTotalValues woodTotalValues14 = null;
        Interface.AddWood addWood15 = null; // flaky: new Interface.AddWood(woodTable13, woodTotalValues14);
        java.util.ArrayList<javafx.scene.Node> nodeList16 = null; // flaky: addWood15.getAll();
        boolean boolean18 = false; // flaky: nodeList16.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node20 = null;
        javafx.scene.Node node21 = null; // flaky: nodeList16.set((int) (byte) 1, node20);
        boolean boolean22 = nodeList8.add(node21);
        javafx.scene.Node node23 = null; // flaky: nodeList5.set((int) (short) 0, node21);
        javafx.scene.Node[] nodeArray24 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList25 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList25, nodeArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = nodeList25.remove(obj27);
        javafx.scene.Node[] nodeArray29 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList30 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList30, nodeArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = nodeList30.remove(obj32);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        javafx.scene.Node[] nodeArray44 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList45 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList45, nodeArray44);
        boolean boolean47 = nodeList45.isEmpty();
        int int49 = nodeList45.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null;
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable50, woodTotalValues51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood52.getAll();
        boolean boolean55 = false; // flaky: nodeList53.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node57 = null;
        javafx.scene.Node node58 = null; // flaky: nodeList53.set((int) (byte) 1, node57);
        boolean boolean59 = nodeList45.add(node58);
// flaky:         nodeList35.add(1, node58);
        boolean boolean61 = nodeList30.retainAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        boolean boolean62 = nodeList25.retainAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        boolean boolean63 = false; // flaky: nodeList5.retainAll((java.util.Collection<javafx.scene.Node>) nodeList25);
        javafx.scene.Node[] nodeArray64 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList65 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList65, nodeArray64);
        java.lang.Object obj67 = null;
        boolean boolean68 = nodeList65.remove(obj67);
        javafx.scene.Node node69 = null;
        boolean boolean70 = nodeList65.add(node69);
        int int72 = nodeList65.indexOf((java.lang.Object) (short) 10);
        Interface.WoodTable woodTable73 = null;
        Interface.WoodTotalValues woodTotalValues74 = null;
        Interface.AddWood addWood75 = null; // flaky: new Interface.AddWood(woodTable73, woodTotalValues74);
        java.util.ArrayList<javafx.scene.Node> nodeList76 = null; // flaky: addWood75.getAll();
// flaky:         addWood75.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList80 = null; // flaky: addWood75.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList81 = null; // flaky: addWood75.getAll();
        javafx.scene.Node[] nodeArray82 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList83 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList83, nodeArray82);
        java.lang.Object obj85 = null;
        boolean boolean86 = nodeList83.remove(obj85);
        javafx.scene.Node node87 = null;
        boolean boolean88 = nodeList83.add(node87);
        java.util.ListIterator<javafx.scene.Node> nodeItor89 = nodeList83.listIterator();
        boolean boolean90 = false; // flaky: nodeList81.contains((java.lang.Object) nodeList83);
        java.util.ListIterator<javafx.scene.Node> nodeItor91 = nodeList83.listIterator();
        boolean boolean92 = nodeList65.remove((java.lang.Object) nodeList83);
        boolean boolean93 = nodeList25.containsAll((java.util.Collection<javafx.scene.Node>) nodeList83);
        java.util.stream.Stream<javafx.scene.Node> nodeStream94 = nodeList83.stream();
        boolean boolean95 = nodeList83.isEmpty();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(nodeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
// flaky:         org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(nodeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(nodeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(nodeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(nodeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList76);
// flaky:         org.junit.Assert.assertNotNull(nodeList80);
// flaky:         org.junit.Assert.assertNotNull(nodeList81);
        org.junit.Assert.assertNotNull(nodeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(nodeItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(nodeItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(nodeStream94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test693");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = nodeList18.remove(obj20);
        int int22 = nodeList18.size();
        javafx.scene.Node[] nodeArray23 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList24 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList24, nodeArray23);
        Interface.WoodTable woodTable27 = null;
        Interface.WoodTotalValues woodTotalValues28 = null;
        Interface.AddWood addWood29 = null; // flaky: new Interface.AddWood(woodTable27, woodTotalValues28);
        java.util.ArrayList<javafx.scene.Node> nodeList30 = null; // flaky: addWood29.getAll();
        boolean boolean31 = false; // flaky: nodeList24.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList30);
        boolean boolean32 = nodeList18.retainAll((java.util.Collection<javafx.scene.Node>) nodeList24);
        boolean boolean33 = nodeList12.removeAll((java.util.Collection<javafx.scene.Node>) nodeList24);
        boolean boolean34 = nodeList24.isEmpty();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(nodeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList30);
// flaky:         org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test694");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood6.getAll();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        boolean boolean12 = nodeList10.isEmpty();
        int int14 = nodeList10.lastIndexOf((java.lang.Object) 100);
        int int16 = nodeList10.lastIndexOf((java.lang.Object) 10);
        boolean boolean17 = false; // flaky: nodeList8.retainAll((java.util.Collection<javafx.scene.Node>) nodeList10);
        boolean boolean18 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList8);
        java.util.List<javafx.scene.Node> nodeList21 = null; // flaky: nodeList8.subList(0, (int) (byte) 0);
        boolean boolean22 = false; // flaky: nodeList21.isEmpty();
        javafx.scene.Node[] nodeArray23 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList24 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList24, nodeArray23);
        boolean boolean26 = nodeList24.isEmpty();
        int int28 = nodeList24.lastIndexOf((java.lang.Object) 100);
        int int30 = nodeList24.lastIndexOf((java.lang.Object) 10);
        javafx.scene.Node[] nodeArray31 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList32 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList32, nodeArray31);
        boolean boolean34 = nodeList32.isEmpty();
        int int36 = nodeList32.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable37 = null;
        Interface.WoodTotalValues woodTotalValues38 = null;
        Interface.AddWood addWood39 = null; // flaky: new Interface.AddWood(woodTable37, woodTotalValues38);
        java.util.ArrayList<javafx.scene.Node> nodeList40 = null; // flaky: addWood39.getAll();
        boolean boolean42 = false; // flaky: nodeList40.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node44 = null;
        javafx.scene.Node node45 = null; // flaky: nodeList40.set((int) (byte) 1, node44);
        boolean boolean46 = nodeList32.add(node45);
        java.util.stream.Stream<javafx.scene.Node> nodeStream47 = nodeList32.stream();
        javafx.scene.Node node48 = null;
        boolean boolean49 = nodeList32.add(node48);
        boolean boolean50 = nodeList24.retainAll((java.util.Collection<javafx.scene.Node>) nodeList32);
        java.lang.Object[] objArray51 = nodeList24.toArray();
        java.util.stream.Stream<javafx.scene.Node> nodeStream52 = nodeList24.parallelStream();
        boolean boolean53 = false; // flaky: nodeList21.equals((java.lang.Object) nodeStream52);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(nodeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(nodeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
// flaky:         org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(nodeStream47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(nodeStream52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test695");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
        Interface.AddWood addWood3 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
// flaky:         woodTotalValues2.redraw(0.0d, (double) 0L);
// flaky:         woodTotalValues2.redraw((double) (byte) 10, (double) 100);
        java.util.ArrayList<javafx.scene.Node> nodeList10 = null; // flaky: woodTotalValues2.getAll();
// flaky:         org.junit.Assert.assertNotNull(nodeList10);
    }

    @Test
    public void test696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test696");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        boolean boolean13 = nodeList11.isEmpty();
        int int15 = nodeList11.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean21 = false; // flaky: nodeList19.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node23 = null;
        javafx.scene.Node node24 = null; // flaky: nodeList19.set((int) (byte) 1, node23);
        boolean boolean25 = nodeList11.add(node24);
// flaky:         nodeList1.add(1, node24);
        java.util.Iterator<javafx.scene.Node> nodeItor27 = nodeList1.iterator();
        javafx.scene.Node node29 = null; // flaky: nodeList1.remove((int) (byte) 1);
        javafx.scene.Node[] nodeArray30 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList31 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList31, nodeArray30);
        Interface.WoodTable woodTable34 = null;
        Interface.WoodTotalValues woodTotalValues35 = null;
        Interface.AddWood addWood36 = null; // flaky: new Interface.AddWood(woodTable34, woodTotalValues35);
        java.util.ArrayList<javafx.scene.Node> nodeList37 = null; // flaky: addWood36.getAll();
        boolean boolean38 = false; // flaky: nodeList31.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList37);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator39 = nodeList31.spliterator();
        java.util.stream.Stream<javafx.scene.Node> nodeStream40 = nodeList31.parallelStream();
        Interface.WoodTable woodTable41 = null;
        Interface.WoodTotalValues woodTotalValues42 = null; // flaky: new Interface.WoodTotalValues(woodTable41);
        java.util.ArrayList<javafx.scene.Node> nodeList43 = null; // flaky: woodTotalValues42.getAll();
        int int44 = nodeList31.indexOf((java.lang.Object) woodTotalValues42);
        int int45 = nodeList1.indexOf((java.lang.Object) int44);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeItor27);
// flaky:         org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(nodeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList37);
// flaky:         org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator39);
        org.junit.Assert.assertNotNull(nodeStream40);
// flaky:         org.junit.Assert.assertNotNull(nodeList43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test697");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor8 = nodeList1.listIterator();
        int int9 = nodeList1.size();
        boolean boolean10 = nodeList1.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream11 = nodeList1.parallelStream();
        javafx.scene.Node[] nodeArray12 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList13 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList13, nodeArray12);
        boolean boolean15 = nodeList13.isEmpty();
        int int17 = nodeList13.lastIndexOf((java.lang.Object) 100);
        int int19 = nodeList13.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable20 = null;
        Interface.WoodTotalValues woodTotalValues21 = null;
        Interface.AddWood addWood22 = null; // flaky: new Interface.AddWood(woodTable20, woodTotalValues21);
        java.util.ArrayList<javafx.scene.Node> nodeList23 = null; // flaky: addWood22.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood22.getAll();
        javafx.scene.Node[] nodeArray25 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList26 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList26, nodeArray25);
        boolean boolean28 = nodeList26.isEmpty();
        int int30 = nodeList26.lastIndexOf((java.lang.Object) 100);
        int int32 = nodeList26.lastIndexOf((java.lang.Object) 10);
        boolean boolean33 = false; // flaky: nodeList24.retainAll((java.util.Collection<javafx.scene.Node>) nodeList26);
        boolean boolean34 = nodeList13.containsAll((java.util.Collection<javafx.scene.Node>) nodeList26);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        boolean boolean40 = false; // flaky: nodeList38.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node42 = null;
        javafx.scene.Node node43 = null; // flaky: nodeList38.set((int) (byte) 1, node42);
        boolean boolean44 = false; // flaky: nodeList13.removeAll((java.util.Collection<javafx.scene.Node>) nodeList38);
        int int45 = nodeList1.lastIndexOf((java.lang.Object) nodeList13);
        javafx.scene.Node[] nodeArray46 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList47 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList47, nodeArray46);
        java.lang.Object obj49 = null;
        boolean boolean50 = nodeList47.remove(obj49);
        javafx.scene.Node[] nodeArray51 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList52 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList52, nodeArray51);
        boolean boolean54 = nodeList52.isEmpty();
        int int56 = nodeList52.lastIndexOf((java.lang.Object) 100);
        boolean boolean57 = nodeList52.isEmpty();
        nodeList52.clear();
        boolean boolean59 = nodeList47.removeAll((java.util.Collection<javafx.scene.Node>) nodeList52);
        javafx.scene.Node[] nodeArray60 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList61 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList61, nodeArray60);
        boolean boolean63 = nodeList61.isEmpty();
        int int65 = nodeList61.lastIndexOf((java.lang.Object) 100);
        java.lang.Class<?> wildcardClass66 = nodeList61.getClass();
        javafx.scene.Node[] nodeArray67 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList68 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList68, nodeArray67);
        boolean boolean70 = nodeList68.isEmpty();
        int int72 = nodeList68.lastIndexOf((java.lang.Object) 100);
        java.lang.Class<?> wildcardClass73 = nodeList68.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray74 = new java.lang.reflect.AnnotatedElement[] { wildcardClass66, wildcardClass73 };
        java.lang.reflect.AnnotatedElement[] annotatedElementArray75 = nodeList52.toArray(annotatedElementArray74);
        java.lang.reflect.AnnotatedElement[] annotatedElementArray76 = nodeList13.toArray(annotatedElementArray74);
        Interface.WoodTable woodTable77 = null;
        Interface.WoodTable woodTable78 = null;
        Interface.WoodTable woodTable79 = null;
        Interface.WoodTotalValues woodTotalValues80 = null; // flaky: new Interface.WoodTotalValues(woodTable79);
        Interface.AddWood addWood81 = null; // flaky: new Interface.AddWood(woodTable78, woodTotalValues80);
// flaky:         woodTotalValues80.redraw(0.0d, (double) 0L);
        Interface.AddWood addWood85 = null; // flaky: new Interface.AddWood(woodTable77, woodTotalValues80);
        java.util.ArrayList<javafx.scene.Node> nodeList86 = null; // flaky: addWood85.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList87 = null; // flaky: addWood85.getAll();
        boolean boolean88 = false; // flaky: nodeList13.containsAll((java.util.Collection<javafx.scene.Node>) nodeList87);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(nodeItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(nodeStream11);
        org.junit.Assert.assertNotNull(nodeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList23);
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertNotNull(nodeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(nodeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(nodeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(nodeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(nodeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(annotatedElementArray74);
        org.junit.Assert.assertNotNull(annotatedElementArray75);
        org.junit.Assert.assertNotNull(annotatedElementArray76);
// flaky:         org.junit.Assert.assertNotNull(nodeList86);
// flaky:         org.junit.Assert.assertNotNull(nodeList87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test698");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) 10.0f, (double) 0L);
// flaky:         addWood2.redraw((double) 100L, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList10 = null; // flaky: addWood2.getAll();
        Interface.WoodTable woodTable11 = null;
        Interface.WoodTotalValues woodTotalValues12 = null;
        Interface.AddWood addWood13 = null; // flaky: new Interface.AddWood(woodTable11, woodTotalValues12);
        java.util.ArrayList<javafx.scene.Node> nodeList14 = null; // flaky: addWood13.getAll();
        boolean boolean16 = false; // flaky: nodeList14.equals((java.lang.Object) (byte) 1);
        javafx.css.Styleable[] styleableArray17 = new javafx.css.Styleable[] {};
        javafx.css.Styleable[] styleableArray18 = null; // flaky: nodeList14.toArray(styleableArray17);
        boolean boolean19 = false; // flaky: nodeList10.remove((java.lang.Object) nodeList14);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList10);
// flaky:         org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(styleableArray17);
// flaky:         org.junit.Assert.assertNotNull(styleableArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test699");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
// flaky:         addWood16.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood16.getAll();
        boolean boolean22 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        javafx.scene.Node[] nodeArray23 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList24 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList24, nodeArray23);
        boolean boolean26 = nodeList24.isEmpty();
        boolean boolean27 = nodeList24.isEmpty();
        nodeList24.clear();
        boolean boolean29 = nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList24);
        nodeList24.clear();
        java.util.stream.Stream<javafx.scene.Node> nodeStream31 = nodeList24.stream();
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        Interface.WoodTable woodTable36 = null;
        Interface.WoodTotalValues woodTotalValues37 = null;
        Interface.AddWood addWood38 = null; // flaky: new Interface.AddWood(woodTable36, woodTotalValues37);
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood38.getAll();
        boolean boolean40 = false; // flaky: nodeList33.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList39);
        int int42 = nodeList33.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray44 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList45 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList45, nodeArray44);
        boolean boolean47 = nodeList45.isEmpty();
        int int49 = nodeList45.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null;
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable50, woodTotalValues51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood52.getAll();
        boolean boolean55 = false; // flaky: nodeList53.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node57 = null;
        javafx.scene.Node node58 = null; // flaky: nodeList53.set((int) (byte) 1, node57);
        boolean boolean59 = nodeList45.add(node58);
        javafx.scene.Node node60 = null; // flaky: nodeList33.set((int) (short) 0, node58);
        boolean boolean61 = nodeList24.equals((java.lang.Object) (short) 0);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(nodeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(nodeStream31);
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
// flaky:         org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(nodeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
// flaky:         org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test700");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood18.getAll();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        int int28 = nodeList22.lastIndexOf((java.lang.Object) 10);
        boolean boolean29 = false; // flaky: nodeList20.retainAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        boolean boolean30 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        javafx.scene.Node[] nodeArray31 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList32 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList32, nodeArray31);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        boolean boolean39 = false; // flaky: nodeList32.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList38);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator40 = nodeList32.spliterator();
        boolean boolean41 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList32);
        javafx.scene.Node[] nodeArray42 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList43 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList43, nodeArray42);
        boolean boolean45 = nodeList43.isEmpty();
        int int47 = nodeList43.lastIndexOf((java.lang.Object) 100);
        int int49 = nodeList43.lastIndexOf((java.lang.Object) 10);
        int int50 = nodeList1.lastIndexOf((java.lang.Object) nodeList43);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(nodeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(nodeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test701");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        int int5 = nodeList1.size();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        Interface.WoodTable woodTable10 = null;
        Interface.WoodTotalValues woodTotalValues11 = null;
        Interface.AddWood addWood12 = null; // flaky: new Interface.AddWood(woodTable10, woodTotalValues11);
        java.util.ArrayList<javafx.scene.Node> nodeList13 = null; // flaky: addWood12.getAll();
        boolean boolean14 = false; // flaky: nodeList7.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList13);
        boolean boolean15 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream16 = nodeList1.parallelStream();
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = nodeList18.remove(obj20);
        javafx.scene.Node node22 = null;
        boolean boolean23 = nodeList18.add(node22);
        int int25 = nodeList18.indexOf((java.lang.Object) (short) 10);
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
// flaky:         addWood28.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList33 = null; // flaky: addWood28.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood28.getAll();
        javafx.scene.Node[] nodeArray35 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList36 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList36, nodeArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = nodeList36.remove(obj38);
        javafx.scene.Node node40 = null;
        boolean boolean41 = nodeList36.add(node40);
        java.util.ListIterator<javafx.scene.Node> nodeItor42 = nodeList36.listIterator();
        boolean boolean43 = false; // flaky: nodeList34.contains((java.lang.Object) nodeList36);
        java.util.ListIterator<javafx.scene.Node> nodeItor44 = nodeList36.listIterator();
        boolean boolean45 = nodeList18.remove((java.lang.Object) nodeList36);
        java.lang.Object[] objArray46 = nodeList36.toArray();
        boolean boolean47 = nodeList1.containsAll((java.util.Collection<javafx.scene.Node>) nodeList36);
        java.util.stream.Stream<javafx.scene.Node> nodeStream48 = nodeList1.stream();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList13);
// flaky:         org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(nodeStream16);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
// flaky:         org.junit.Assert.assertNotNull(nodeList33);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
        org.junit.Assert.assertNotNull(nodeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(nodeItor42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(nodeItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[null]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(nodeStream48);
    }

    @Test
    public void test702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test702");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues2.getAll();
        Interface.AddWood addWood4 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: addWood4.getAll();
// flaky:         addWood4.redraw((double) 0, (double) '#');
// flaky:         addWood4.redraw((double) 1, (double) (-1L));
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
    }

    @Test
    public void test703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test703");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        boolean boolean5 = false; // flaky: nodeList3.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node7 = null;
        javafx.scene.Node node8 = null; // flaky: nodeList3.set((int) (byte) 1, node7);
// flaky:         nodeList3.clear();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
// flaky:         org.junit.Assert.assertNotNull(node8);
    }

    @Test
    public void test704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test704");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        boolean boolean33 = false; // flaky: nodeList7.add(node31);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        boolean boolean37 = nodeList35.isEmpty();
        int int39 = nodeList35.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable40 = null;
        Interface.WoodTotalValues woodTotalValues41 = null;
        Interface.AddWood addWood42 = null; // flaky: new Interface.AddWood(woodTable40, woodTotalValues41);
        java.util.ArrayList<javafx.scene.Node> nodeList43 = null; // flaky: addWood42.getAll();
        boolean boolean45 = false; // flaky: nodeList43.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node47 = null;
        javafx.scene.Node node48 = null; // flaky: nodeList43.set((int) (byte) 1, node47);
        boolean boolean49 = nodeList35.add(node48);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null;
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable50, woodTotalValues51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood52.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList54 = null; // flaky: addWood52.getAll();
        javafx.scene.Node[] nodeArray55 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList56 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList56, nodeArray55);
        boolean boolean58 = nodeList56.isEmpty();
        int int60 = nodeList56.lastIndexOf((java.lang.Object) 100);
        int int62 = nodeList56.lastIndexOf((java.lang.Object) 10);
        boolean boolean63 = false; // flaky: nodeList54.retainAll((java.util.Collection<javafx.scene.Node>) nodeList56);
        boolean boolean64 = nodeList35.removeAll((java.util.Collection<javafx.scene.Node>) nodeList56);
        boolean boolean65 = false; // flaky: nodeList7.containsAll((java.util.Collection<javafx.scene.Node>) nodeList56);
        int int66 = 0; // flaky: nodeList7.size();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
// flaky:         org.junit.Assert.assertNotNull(nodeList54);
        org.junit.Assert.assertNotNull(nodeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int66 + "' != '" + 6 + "'", int66 == 6);
    }

    @Test
    public void test705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test705");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
// flaky:         woodTotalValues2.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList6 = null; // flaky: woodTotalValues2.getAll();
// flaky:         woodTotalValues2.redraw(10.0d, 1.0d);
        Interface.AddWood addWood10 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
// flaky:         addWood10.redraw(0.0d, (double) 1);
// flaky:         addWood10.redraw((double) (short) 100, (double) (short) 10);
// flaky:         org.junit.Assert.assertNotNull(nodeList6);
    }

    @Test
    public void test706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test706");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList1.equals((java.lang.Object) nodeList6);
        Interface.WoodTable woodTable12 = null;
        Interface.WoodTotalValues woodTotalValues13 = null;
        Interface.AddWood addWood14 = null; // flaky: new Interface.AddWood(woodTable12, woodTotalValues13);
        java.util.ArrayList<javafx.scene.Node> nodeList15 = null; // flaky: addWood14.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList16 = null; // flaky: addWood14.getAll();
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        int int24 = nodeList18.lastIndexOf((java.lang.Object) 10);
        boolean boolean25 = false; // flaky: nodeList16.retainAll((java.util.Collection<javafx.scene.Node>) nodeList18);
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = nodeList27.remove(obj29);
        boolean boolean31 = nodeList27.isEmpty();
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        Interface.WoodTable woodTable36 = null;
        Interface.WoodTotalValues woodTotalValues37 = null;
        Interface.AddWood addWood38 = null; // flaky: new Interface.AddWood(woodTable36, woodTotalValues37);
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood38.getAll();
        boolean boolean40 = false; // flaky: nodeList33.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList39);
        int int42 = nodeList33.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray44 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList45 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList45, nodeArray44);
        boolean boolean47 = nodeList45.isEmpty();
        int int49 = nodeList45.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null;
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable50, woodTotalValues51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood52.getAll();
        boolean boolean55 = false; // flaky: nodeList53.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node57 = null;
        javafx.scene.Node node58 = null; // flaky: nodeList53.set((int) (byte) 1, node57);
        boolean boolean59 = nodeList45.add(node58);
        javafx.scene.Node node60 = null; // flaky: nodeList33.set((int) (short) 0, node58);
        boolean boolean61 = nodeList27.add(node60);
        boolean boolean63 = nodeList27.remove((java.lang.Object) 100L);
        boolean boolean64 = nodeList18.remove((java.lang.Object) boolean63);
        boolean boolean65 = nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList18);
        java.lang.Object[] objArray66 = nodeList1.toArray();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator67 = nodeList1.spliterator();
        int int68 = nodeList1.size();
        nodeList1.clear();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList15);
// flaky:         org.junit.Assert.assertNotNull(nodeList16);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
// flaky:         org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(nodeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
// flaky:         org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNotNull(nodeSpliterator67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test707");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues2.getAll();
        Interface.AddWood addWood4 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: addWood4.getAll();
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean10 = false; // flaky: nodeList9.isEmpty();
        javafx.scene.Node[] nodeArray12 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList13 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList13, nodeArray12);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean20 = false; // flaky: nodeList13.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList19);
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        boolean boolean25 = nodeList23.isEmpty();
        int int27 = nodeList23.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable28 = null;
        Interface.WoodTotalValues woodTotalValues29 = null;
        Interface.AddWood addWood30 = null; // flaky: new Interface.AddWood(woodTable28, woodTotalValues29);
        java.util.ArrayList<javafx.scene.Node> nodeList31 = null; // flaky: addWood30.getAll();
        boolean boolean33 = false; // flaky: nodeList31.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node35 = null;
        javafx.scene.Node node36 = null; // flaky: nodeList31.set((int) (byte) 1, node35);
        boolean boolean37 = nodeList23.add(node36);
// flaky:         nodeList13.add(1, node36);
        javafx.scene.Node node39 = null; // flaky: nodeList9.set(0, node36);
        java.util.ListIterator<javafx.scene.Node> nodeItor40 = null; // flaky: nodeList9.listIterator();
        boolean boolean41 = false; // flaky: nodeList5.addAll((java.util.Collection<javafx.scene.Node>) nodeList9);
        javafx.scene.Node node42 = null;
        boolean boolean43 = false; // flaky: nodeList5.add(node42);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<javafx.scene.Node> nodeList46 = null; // flaky: nodeList5.subList((int) (short) 0, (int) '4');
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(nodeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
// flaky:         org.junit.Assert.assertNotNull(node39);
// flaky:         org.junit.Assert.assertNotNull(nodeItor40);
// flaky:         org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test708");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor8 = nodeList1.listIterator();
        int int9 = nodeList1.size();
        boolean boolean10 = nodeList1.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream11 = nodeList1.parallelStream();
        java.util.ListIterator<javafx.scene.Node> nodeItor12 = nodeList1.listIterator();
        java.lang.Object[] objArray13 = nodeList1.toArray();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(nodeItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(nodeStream11);
        org.junit.Assert.assertNotNull(nodeItor12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
    }

    @Test
    public void test709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test709");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood18.getAll();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        int int28 = nodeList22.lastIndexOf((java.lang.Object) 10);
        boolean boolean29 = false; // flaky: nodeList20.retainAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        boolean boolean30 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        Interface.WoodTable woodTable31 = null;
        Interface.WoodTotalValues woodTotalValues32 = null;
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable31, woodTotalValues32);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList36 = null; // flaky: addWood33.getAll();
        boolean boolean37 = false; // flaky: nodeList22.addAll((java.util.Collection<javafx.scene.Node>) nodeList36);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator38 = nodeList22.spliterator();
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        boolean boolean42 = nodeList40.isEmpty();
        boolean boolean43 = nodeList22.containsAll((java.util.Collection<javafx.scene.Node>) nodeList40);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator44 = nodeList22.spliterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor45 = nodeList22.listIterator();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertNotNull(nodeList36);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator38);
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertNotNull(nodeItor45);
    }

    @Test
    public void test710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test710");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
// flaky:         addWood16.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood16.getAll();
        boolean boolean22 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        java.lang.Object[] objArray23 = nodeList6.toArray();
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTotalValues woodTotalValues25 = null;
        Interface.AddWood addWood26 = null; // flaky: new Interface.AddWood(woodTable24, woodTotalValues25);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood26.getAll();
// flaky:         addWood26.redraw((double) 10.0f, (double) (-1L));
        java.util.ArrayList<javafx.scene.Node> nodeList31 = null; // flaky: addWood26.getAll();
        int int32 = nodeList6.lastIndexOf((java.lang.Object) addWood26);
// flaky:         addWood26.redraw((double) 100.0f, (double) 10);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objArray23);
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
// flaky:         org.junit.Assert.assertNotNull(nodeList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test711");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList1.equals((java.lang.Object) nodeList6);
        Interface.WoodTable woodTable12 = null;
        Interface.WoodTotalValues woodTotalValues13 = null;
        Interface.AddWood addWood14 = null; // flaky: new Interface.AddWood(woodTable12, woodTotalValues13);
        java.util.ArrayList<javafx.scene.Node> nodeList15 = null; // flaky: addWood14.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList16 = null; // flaky: addWood14.getAll();
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        int int24 = nodeList18.lastIndexOf((java.lang.Object) 10);
        boolean boolean25 = false; // flaky: nodeList16.retainAll((java.util.Collection<javafx.scene.Node>) nodeList18);
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = nodeList27.remove(obj29);
        boolean boolean31 = nodeList27.isEmpty();
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        Interface.WoodTable woodTable36 = null;
        Interface.WoodTotalValues woodTotalValues37 = null;
        Interface.AddWood addWood38 = null; // flaky: new Interface.AddWood(woodTable36, woodTotalValues37);
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood38.getAll();
        boolean boolean40 = false; // flaky: nodeList33.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList39);
        int int42 = nodeList33.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray44 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList45 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList45, nodeArray44);
        boolean boolean47 = nodeList45.isEmpty();
        int int49 = nodeList45.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null;
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable50, woodTotalValues51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood52.getAll();
        boolean boolean55 = false; // flaky: nodeList53.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node57 = null;
        javafx.scene.Node node58 = null; // flaky: nodeList53.set((int) (byte) 1, node57);
        boolean boolean59 = nodeList45.add(node58);
        javafx.scene.Node node60 = null; // flaky: nodeList33.set((int) (short) 0, node58);
        boolean boolean61 = nodeList27.add(node60);
        boolean boolean63 = nodeList27.remove((java.lang.Object) 100L);
        boolean boolean64 = nodeList18.remove((java.lang.Object) boolean63);
        boolean boolean65 = nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList18);
        java.lang.Object[] objArray66 = nodeList1.toArray();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator67 = nodeList1.spliterator();
        int int68 = nodeList1.size();
        Interface.WoodTable woodTable69 = null;
        Interface.WoodTotalValues woodTotalValues70 = null;
        Interface.AddWood addWood71 = null; // flaky: new Interface.AddWood(woodTable69, woodTotalValues70);
        java.util.ArrayList<javafx.scene.Node> nodeList72 = null; // flaky: addWood71.getAll();
        boolean boolean74 = false; // flaky: nodeList72.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node76 = null;
        javafx.scene.Node node77 = null; // flaky: nodeList72.set((int) (byte) 1, node76);
        java.util.ListIterator<javafx.scene.Node> nodeItor78 = null; // flaky: nodeList72.listIterator();
// flaky:         nodeList72.clear();
        java.util.Iterator<javafx.scene.Node> nodeItor80 = null; // flaky: nodeList72.iterator();
        boolean boolean81 = nodeList1.equals((java.lang.Object) nodeItor80);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList15);
// flaky:         org.junit.Assert.assertNotNull(nodeList16);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
// flaky:         org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(nodeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
// flaky:         org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNotNull(nodeSpliterator67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
// flaky:         org.junit.Assert.assertNotNull(nodeList72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
// flaky:         org.junit.Assert.assertNotNull(node77);
// flaky:         org.junit.Assert.assertNotNull(nodeItor78);
// flaky:         org.junit.Assert.assertNotNull(nodeItor80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test712");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        boolean boolean5 = false; // flaky: nodeList3.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node7 = null;
        javafx.scene.Node node8 = null; // flaky: nodeList3.set((int) (byte) 1, node7);
        java.util.ListIterator<javafx.scene.Node> nodeItor9 = null; // flaky: nodeList3.listIterator();
// flaky:         nodeList3.clear();
        java.util.Iterator<javafx.scene.Node> nodeItor11 = null; // flaky: nodeList3.iterator();
        java.util.Iterator<javafx.scene.Node> nodeItor12 = null; // flaky: nodeList3.iterator();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
// flaky:         org.junit.Assert.assertNotNull(node8);
// flaky:         org.junit.Assert.assertNotNull(nodeItor9);
// flaky:         org.junit.Assert.assertNotNull(nodeItor11);
// flaky:         org.junit.Assert.assertNotNull(nodeItor12);
    }

    @Test
    public void test713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test713");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean14 = nodeList1.isEmpty();
        int int15 = nodeList1.size();
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node17 = nodeList1.get((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test714");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        boolean boolean5 = nodeList1.isEmpty();
        java.util.Iterator<javafx.scene.Node> nodeItor6 = nodeList1.iterator();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(nodeItor6);
    }

    @Test
    public void test715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test715");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTable woodTable3 = null;
        Interface.WoodTotalValues woodTotalValues4 = null; // flaky: new Interface.WoodTotalValues(woodTable3);
        Interface.AddWood addWood5 = null; // flaky: new Interface.AddWood(woodTable2, woodTotalValues4);
// flaky:         woodTotalValues4.redraw(0.0d, (double) 0L);
        Interface.AddWood addWood9 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues4);
        Interface.AddWood addWood10 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues4);
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: addWood10.getAll();
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
    }

    @Test
    public void test716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test716");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        javafx.scene.Node[] nodeArray16 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList17 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList17, nodeArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = nodeList17.remove(obj19);
        boolean boolean21 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList17);
        boolean boolean22 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray23 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList24 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList24, nodeArray23);
        boolean boolean26 = nodeList24.isEmpty();
        int int28 = nodeList24.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable29 = null;
        Interface.WoodTotalValues woodTotalValues30 = null;
        Interface.AddWood addWood31 = null; // flaky: new Interface.AddWood(woodTable29, woodTotalValues30);
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood31.getAll();
        boolean boolean34 = false; // flaky: nodeList32.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node36 = null;
        javafx.scene.Node node37 = null; // flaky: nodeList32.set((int) (byte) 1, node36);
        boolean boolean38 = nodeList24.add(node37);
        java.util.stream.Stream<javafx.scene.Node> nodeStream39 = nodeList24.parallelStream();
        boolean boolean40 = nodeList24.isEmpty();
        Interface.WoodTable woodTable41 = null;
        Interface.WoodTotalValues woodTotalValues42 = null;
        Interface.AddWood addWood43 = null; // flaky: new Interface.AddWood(woodTable41, woodTotalValues42);
        java.util.ArrayList<javafx.scene.Node> nodeList44 = null; // flaky: addWood43.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList45 = null; // flaky: addWood43.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList46 = null; // flaky: addWood43.getAll();
        javafx.scene.Node[] nodeArray48 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList49 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList49, nodeArray48);
        boolean boolean51 = nodeList49.isEmpty();
        int int53 = nodeList49.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable54 = null;
        Interface.WoodTotalValues woodTotalValues55 = null;
        Interface.AddWood addWood56 = null; // flaky: new Interface.AddWood(woodTable54, woodTotalValues55);
        java.util.ArrayList<javafx.scene.Node> nodeList57 = null; // flaky: addWood56.getAll();
        boolean boolean59 = false; // flaky: nodeList57.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node61 = null;
        javafx.scene.Node node62 = null; // flaky: nodeList57.set((int) (byte) 1, node61);
        boolean boolean63 = nodeList49.add(node62);
        javafx.scene.Node node64 = null; // flaky: nodeList46.set((int) (short) 0, node62);
        boolean boolean65 = nodeList24.add(node64);
        Interface.WoodTable woodTable66 = null;
        Interface.WoodTable woodTable67 = null;
        Interface.WoodTotalValues woodTotalValues68 = null; // flaky: new Interface.WoodTotalValues(woodTable67);
        java.util.ArrayList<javafx.scene.Node> nodeList69 = null; // flaky: woodTotalValues68.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList70 = null; // flaky: woodTotalValues68.getAll();
        Interface.AddWood addWood71 = null; // flaky: new Interface.AddWood(woodTable66, woodTotalValues68);
        boolean boolean72 = nodeList24.contains((java.lang.Object) woodTotalValues68);
        boolean boolean73 = nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList24);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(nodeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(nodeStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList44);
// flaky:         org.junit.Assert.assertNotNull(nodeList45);
// flaky:         org.junit.Assert.assertNotNull(nodeList46);
        org.junit.Assert.assertNotNull(nodeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
// flaky:         org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
// flaky:         org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList69);
// flaky:         org.junit.Assert.assertNotNull(nodeList70);
// flaky:         org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test717");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator9 = nodeList1.spliterator();
        nodeList1.clear();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        boolean boolean14 = nodeList12.isEmpty();
        Interface.WoodTable woodTable15 = null;
        Interface.WoodTotalValues woodTotalValues16 = null;
        Interface.AddWood addWood17 = null; // flaky: new Interface.AddWood(woodTable15, woodTotalValues16);
        java.util.ArrayList<javafx.scene.Node> nodeList18 = null; // flaky: addWood17.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood17.getAll();
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        boolean boolean23 = nodeList21.isEmpty();
        int int25 = nodeList21.lastIndexOf((java.lang.Object) 100);
        int int27 = nodeList21.lastIndexOf((java.lang.Object) 10);
        boolean boolean28 = false; // flaky: nodeList19.retainAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        boolean boolean29 = false; // flaky: nodeList12.removeAll((java.util.Collection<javafx.scene.Node>) nodeList19);
        boolean boolean30 = false; // flaky: nodeList19.isEmpty();
        java.util.ListIterator<javafx.scene.Node> nodeItor31 = null; // flaky: nodeList19.listIterator();
        int int32 = nodeList1.indexOf((java.lang.Object) nodeItor31);
        Interface.AddWood[] addWoodArray33 = new Interface.AddWood[] {};
        Interface.AddWood[] addWoodArray34 = nodeList1.toArray(addWoodArray33);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTable woodTable36 = null;
        Interface.WoodTotalValues woodTotalValues37 = null; // flaky: new Interface.WoodTotalValues(woodTable36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: woodTotalValues37.getAll();
        Interface.AddWood addWood39 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues37);
        int int40 = nodeList1.lastIndexOf((java.lang.Object) woodTable35);
        boolean boolean41 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray42 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList43 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList43, nodeArray42);
        boolean boolean45 = nodeList43.isEmpty();
        int int47 = nodeList43.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable48 = null;
        Interface.WoodTotalValues woodTotalValues49 = null;
        Interface.AddWood addWood50 = null; // flaky: new Interface.AddWood(woodTable48, woodTotalValues49);
        java.util.ArrayList<javafx.scene.Node> nodeList51 = null; // flaky: addWood50.getAll();
        boolean boolean53 = false; // flaky: nodeList51.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node55 = null;
        javafx.scene.Node node56 = null; // flaky: nodeList51.set((int) (byte) 1, node55);
        boolean boolean57 = nodeList43.add(node56);
        javafx.scene.Node[] nodeArray58 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList59 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList59, nodeArray58);
        java.lang.Object obj61 = null;
        boolean boolean62 = nodeList59.remove(obj61);
        boolean boolean63 = nodeList43.retainAll((java.util.Collection<javafx.scene.Node>) nodeList59);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator64 = nodeList59.spliterator();
        boolean boolean65 = nodeList59.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream66 = nodeList59.stream();
        boolean boolean67 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList59);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList18);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(addWoodArray33);
        org.junit.Assert.assertNotNull(addWoodArray34);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(nodeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
// flaky:         org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(nodeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(nodeStream66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test718");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        javafx.scene.Node[] nodeArray16 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList17 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList17, nodeArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = nodeList17.remove(obj19);
        boolean boolean21 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList17);
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        boolean boolean30 = false; // flaky: nodeList23.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList29);
        java.util.stream.Stream<javafx.scene.Node> nodeStream31 = null; // flaky: nodeList29.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator32 = null; // flaky: nodeList29.spliterator();
        boolean boolean33 = false; // flaky: nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList29);
        java.util.Iterator<javafx.scene.Node> nodeItor34 = null; // flaky: nodeList29.iterator();
        javafx.scene.Node node36 = null; // flaky: nodeList29.remove(1);
        Interface.WoodTable woodTable37 = null;
        Interface.WoodTotalValues woodTotalValues38 = null;
        Interface.AddWood addWood39 = null; // flaky: new Interface.AddWood(woodTable37, woodTotalValues38);
        java.util.ArrayList<javafx.scene.Node> nodeList40 = null; // flaky: addWood39.getAll();
// flaky:         addWood39.redraw((double) 10.0f, (double) 0L);
// flaky:         addWood39.redraw((double) 100L, 0.0d);
        boolean boolean47 = false; // flaky: nodeList29.equals((java.lang.Object) 100L);
        java.lang.Object obj48 = null;
        int int49 = 0; // flaky: nodeList29.lastIndexOf(obj48);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream31);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator32);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor34);
// flaky:         org.junit.Assert.assertNotNull(node36);
// flaky:         org.junit.Assert.assertNotNull(nodeList40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test719");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood18.getAll();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        int int28 = nodeList22.lastIndexOf((java.lang.Object) 10);
        boolean boolean29 = false; // flaky: nodeList20.retainAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        boolean boolean30 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        javafx.scene.Node[] nodeArray31 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList32 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList32, nodeArray31);
        boolean boolean34 = nodeList32.isEmpty();
        boolean boolean35 = nodeList32.isEmpty();
        nodeList32.clear();
        java.util.ListIterator<javafx.scene.Node> nodeItor38 = nodeList32.listIterator(0);
        Interface.WoodTable woodTable39 = null;
        Interface.WoodTotalValues woodTotalValues40 = null;
        Interface.AddWood addWood41 = null; // flaky: new Interface.AddWood(woodTable39, woodTotalValues40);
        java.util.ArrayList<javafx.scene.Node> nodeList42 = null; // flaky: addWood41.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList43 = null; // flaky: addWood41.getAll();
        javafx.scene.Node[] nodeArray44 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList45 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList45, nodeArray44);
        boolean boolean47 = nodeList45.isEmpty();
        int int49 = nodeList45.lastIndexOf((java.lang.Object) 100);
        int int51 = nodeList45.lastIndexOf((java.lang.Object) 10);
        boolean boolean52 = false; // flaky: nodeList43.retainAll((java.util.Collection<javafx.scene.Node>) nodeList45);
        boolean boolean54 = false; // flaky: nodeList43.contains((java.lang.Object) false);
        Interface.WoodTable woodTable55 = null;
        Interface.WoodTotalValues woodTotalValues56 = null;
        Interface.AddWood addWood57 = null; // flaky: new Interface.AddWood(woodTable55, woodTotalValues56);
        java.util.ArrayList<javafx.scene.Node> nodeList58 = null; // flaky: addWood57.getAll();
        boolean boolean59 = false; // flaky: nodeList58.isEmpty();
        boolean boolean61 = false; // flaky: nodeList58.equals((java.lang.Object) 100);
        int int62 = 0; // flaky: nodeList43.lastIndexOf((java.lang.Object) nodeList58);
        java.lang.Object[] objArray63 = null; // flaky: nodeList43.toArray();
        int int64 = nodeList32.lastIndexOf((java.lang.Object) objArray63);
        java.util.stream.Stream<javafx.scene.Node> nodeStream65 = nodeList32.stream();
        int int66 = nodeList22.indexOf((java.lang.Object) nodeStream65);
        java.lang.Class<?> wildcardClass67 = nodeList22.getClass();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(nodeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(nodeItor38);
// flaky:         org.junit.Assert.assertNotNull(nodeList42);
// flaky:         org.junit.Assert.assertNotNull(nodeList43);
        org.junit.Assert.assertNotNull(nodeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
// flaky:         org.junit.Assert.assertNotNull(objArray63);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(nodeStream65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test720");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTotalValues woodTotalValues3 = null; // flaky: new Interface.WoodTotalValues(woodTable2);
        Interface.AddWood addWood4 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues3);
// flaky:         woodTotalValues3.redraw(0.0d, (double) 0L);
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues3);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: woodTotalValues3.getAll();
// flaky:         woodTotalValues3.redraw(1.0d, (double) (-1L));
// flaky:         woodTotalValues3.redraw((double) 0L, 100.0d);
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
    }

    @Test
    public void test721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test721");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: woodTotalValues2.getAll();
        Interface.AddWood addWood5 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
        java.util.ArrayList<javafx.scene.Node> nodeList6 = null; // flaky: woodTotalValues2.getAll();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
// flaky:         org.junit.Assert.assertNotNull(nodeList6);
    }

    @Test
    public void test722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test722");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood18.getAll();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        int int28 = nodeList22.lastIndexOf((java.lang.Object) 10);
        boolean boolean29 = false; // flaky: nodeList20.retainAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        boolean boolean30 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        Interface.WoodTable woodTable31 = null;
        Interface.WoodTotalValues woodTotalValues32 = null;
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable31, woodTotalValues32);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList36 = null; // flaky: addWood33.getAll();
        boolean boolean37 = false; // flaky: nodeList22.addAll((java.util.Collection<javafx.scene.Node>) nodeList36);
        java.util.function.UnaryOperator<javafx.scene.Node> nodeUnaryOperator38 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList36.replaceAll(nodeUnaryOperator38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertNotNull(nodeList36);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test723");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray7 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList8 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList8, nodeArray7);
        boolean boolean10 = nodeList8.isEmpty();
        int int12 = nodeList8.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable13 = null;
        Interface.WoodTotalValues woodTotalValues14 = null;
        Interface.AddWood addWood15 = null; // flaky: new Interface.AddWood(woodTable13, woodTotalValues14);
        java.util.ArrayList<javafx.scene.Node> nodeList16 = null; // flaky: addWood15.getAll();
        boolean boolean18 = false; // flaky: nodeList16.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node20 = null;
        javafx.scene.Node node21 = null; // flaky: nodeList16.set((int) (byte) 1, node20);
        boolean boolean22 = nodeList8.add(node21);
        javafx.scene.Node node23 = null; // flaky: nodeList5.set((int) (short) 0, node21);
        javafx.scene.Node[] nodeArray24 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList25 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList25, nodeArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = nodeList25.remove(obj27);
        javafx.scene.Node[] nodeArray29 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList30 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList30, nodeArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = nodeList30.remove(obj32);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        javafx.scene.Node[] nodeArray44 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList45 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList45, nodeArray44);
        boolean boolean47 = nodeList45.isEmpty();
        int int49 = nodeList45.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null;
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable50, woodTotalValues51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood52.getAll();
        boolean boolean55 = false; // flaky: nodeList53.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node57 = null;
        javafx.scene.Node node58 = null; // flaky: nodeList53.set((int) (byte) 1, node57);
        boolean boolean59 = nodeList45.add(node58);
// flaky:         nodeList35.add(1, node58);
        boolean boolean61 = nodeList30.retainAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        boolean boolean62 = nodeList25.retainAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        boolean boolean63 = false; // flaky: nodeList5.retainAll((java.util.Collection<javafx.scene.Node>) nodeList25);
        javafx.scene.Node node64 = null;
        boolean boolean65 = false; // flaky: nodeList5.add(node64);
        int int66 = 0; // flaky: nodeList5.size();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(nodeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
// flaky:         org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(nodeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(nodeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(nodeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
    }

    @Test
    public void test724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test724");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator9 = nodeList1.spliterator();
        java.util.stream.Stream<javafx.scene.Node> nodeStream10 = nodeList1.parallelStream();
        Interface.WoodTable woodTable11 = null;
        Interface.WoodTotalValues woodTotalValues12 = null; // flaky: new Interface.WoodTotalValues(woodTable11);
        java.util.ArrayList<javafx.scene.Node> nodeList13 = null; // flaky: woodTotalValues12.getAll();
        int int14 = nodeList1.indexOf((java.lang.Object) woodTotalValues12);
        java.util.ArrayList<javafx.scene.Node> nodeList15 = null; // flaky: woodTotalValues12.getAll();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNotNull(nodeStream10);
// flaky:         org.junit.Assert.assertNotNull(nodeList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList15);
    }

    @Test
    public void test725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test725");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        int int5 = nodeList1.size();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        Interface.WoodTable woodTable10 = null;
        Interface.WoodTotalValues woodTotalValues11 = null;
        Interface.AddWood addWood12 = null; // flaky: new Interface.AddWood(woodTable10, woodTotalValues11);
        java.util.ArrayList<javafx.scene.Node> nodeList13 = null; // flaky: addWood12.getAll();
        boolean boolean14 = false; // flaky: nodeList7.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList13);
        boolean boolean15 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream16 = nodeList1.parallelStream();
        java.lang.Class<?> wildcardClass17 = nodeList1.getClass();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList13);
// flaky:         org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(nodeStream16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test726");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        Interface.WoodTable woodTable17 = null;
        Interface.WoodTotalValues woodTotalValues18 = null;
        Interface.AddWood addWood19 = null; // flaky: new Interface.AddWood(woodTable17, woodTotalValues18);
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood19.getAll();
// flaky:         addWood19.redraw((double) 10.0f, (double) (-1L));
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood19.getAll();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator25 = null; // flaky: nodeList24.spliterator();
        int int26 = 0; // flaky: nodeList7.lastIndexOf((java.lang.Object) nodeSpliterator25);
        javafx.scene.Node node28 = null; // flaky: nodeList7.remove((int) (short) 0);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator25);
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
// flaky:         org.junit.Assert.assertNotNull(node28);
    }

    @Test
    public void test727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test727");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        javafx.scene.Node[] nodeArray8 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList9 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList9, nodeArray8);
        boolean boolean11 = nodeList9.isEmpty();
        int int13 = nodeList9.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        boolean boolean19 = false; // flaky: nodeList17.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node21 = null;
        javafx.scene.Node node22 = null; // flaky: nodeList17.set((int) (byte) 1, node21);
        boolean boolean23 = nodeList9.add(node22);
        java.util.stream.Stream<javafx.scene.Node> nodeStream24 = nodeList9.stream();
        javafx.scene.Node node25 = null;
        boolean boolean26 = nodeList9.add(node25);
        boolean boolean27 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList9);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator28 = nodeList9.spliterator();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(nodeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
// flaky:         org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(nodeStream24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(nodeSpliterator28);
    }

    @Test
    public void test728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test728");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTotalValues woodTotalValues3 = null; // flaky: new Interface.WoodTotalValues(woodTable2);
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: woodTotalValues3.getAll();
        Interface.AddWood addWood5 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues3);
// flaky:         woodTotalValues3.redraw(0.0d, (double) 'a');
// flaky:         woodTotalValues3.redraw(1.0d, (double) 2);
        Interface.AddWood addWood12 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues3);
// flaky:         woodTotalValues3.redraw((double) 6, (double) (short) 10);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
    }

    @Test
    public void test729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test729");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable8 = null;
        Interface.WoodTotalValues woodTotalValues9 = null;
        Interface.AddWood addWood10 = null; // flaky: new Interface.AddWood(woodTable8, woodTotalValues9);
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: addWood10.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: addWood10.getAll();
        javafx.scene.Node[] nodeArray13 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList14 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList14, nodeArray13);
        boolean boolean16 = nodeList14.isEmpty();
        int int18 = nodeList14.lastIndexOf((java.lang.Object) 100);
        int int20 = nodeList14.lastIndexOf((java.lang.Object) 10);
        boolean boolean21 = false; // flaky: nodeList12.retainAll((java.util.Collection<javafx.scene.Node>) nodeList14);
        boolean boolean22 = nodeList1.containsAll((java.util.Collection<javafx.scene.Node>) nodeList14);
        java.util.ListIterator<javafx.scene.Node> nodeItor24 = nodeList1.listIterator(0);
        java.util.stream.Stream<javafx.scene.Node> nodeStream25 = nodeList1.stream();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertNotNull(nodeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(nodeItor24);
        org.junit.Assert.assertNotNull(nodeStream25);
    }

    @Test
    public void test730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test730");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList1.equals((java.lang.Object) nodeList6);
        Interface.WoodTable woodTable12 = null;
        Interface.WoodTotalValues woodTotalValues13 = null;
        Interface.AddWood addWood14 = null; // flaky: new Interface.AddWood(woodTable12, woodTotalValues13);
        java.util.ArrayList<javafx.scene.Node> nodeList15 = null; // flaky: addWood14.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList16 = null; // flaky: addWood14.getAll();
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        int int24 = nodeList18.lastIndexOf((java.lang.Object) 10);
        boolean boolean25 = false; // flaky: nodeList16.retainAll((java.util.Collection<javafx.scene.Node>) nodeList18);
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = nodeList27.remove(obj29);
        boolean boolean31 = nodeList27.isEmpty();
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        Interface.WoodTable woodTable36 = null;
        Interface.WoodTotalValues woodTotalValues37 = null;
        Interface.AddWood addWood38 = null; // flaky: new Interface.AddWood(woodTable36, woodTotalValues37);
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood38.getAll();
        boolean boolean40 = false; // flaky: nodeList33.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList39);
        int int42 = nodeList33.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray44 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList45 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList45, nodeArray44);
        boolean boolean47 = nodeList45.isEmpty();
        int int49 = nodeList45.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null;
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable50, woodTotalValues51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood52.getAll();
        boolean boolean55 = false; // flaky: nodeList53.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node57 = null;
        javafx.scene.Node node58 = null; // flaky: nodeList53.set((int) (byte) 1, node57);
        boolean boolean59 = nodeList45.add(node58);
        javafx.scene.Node node60 = null; // flaky: nodeList33.set((int) (short) 0, node58);
        boolean boolean61 = nodeList27.add(node60);
        boolean boolean63 = nodeList27.remove((java.lang.Object) 100L);
        boolean boolean64 = nodeList18.remove((java.lang.Object) boolean63);
        boolean boolean65 = nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList18);
        java.lang.Object[] objArray66 = nodeList1.toArray();
        nodeList1.clear();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList15);
// flaky:         org.junit.Assert.assertNotNull(nodeList16);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
// flaky:         org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(nodeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
// flaky:         org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
    }

    @Test
    public void test731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test731");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        java.util.Iterator<javafx.scene.Node> nodeItor14 = nodeList6.iterator();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(nodeItor14);
    }

    @Test
    public void test732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test732");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues1.getAll();
        java.util.Iterator<javafx.scene.Node> nodeItor4 = null; // flaky: nodeList3.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor5 = null; // flaky: nodeList3.listIterator();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        boolean boolean9 = nodeList7.isEmpty();
        int int11 = nodeList7.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable12 = null;
        Interface.WoodTotalValues woodTotalValues13 = null;
        Interface.AddWood addWood14 = null; // flaky: new Interface.AddWood(woodTable12, woodTotalValues13);
        java.util.ArrayList<javafx.scene.Node> nodeList15 = null; // flaky: addWood14.getAll();
        boolean boolean17 = false; // flaky: nodeList15.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node19 = null;
        javafx.scene.Node node20 = null; // flaky: nodeList15.set((int) (byte) 1, node19);
        boolean boolean21 = nodeList7.add(node20);
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = nodeList23.remove(obj25);
        boolean boolean27 = nodeList7.retainAll((java.util.Collection<javafx.scene.Node>) nodeList23);
        javafx.scene.Node[] nodeArray28 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList29 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList29, nodeArray28);
        Interface.WoodTable woodTable32 = null;
        Interface.WoodTotalValues woodTotalValues33 = null;
        Interface.AddWood addWood34 = null; // flaky: new Interface.AddWood(woodTable32, woodTotalValues33);
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood34.getAll();
        boolean boolean36 = false; // flaky: nodeList29.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList35);
        java.util.stream.Stream<javafx.scene.Node> nodeStream37 = null; // flaky: nodeList35.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator38 = null; // flaky: nodeList35.spliterator();
        boolean boolean39 = false; // flaky: nodeList7.addAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        java.util.Iterator<javafx.scene.Node> nodeItor40 = null; // flaky: nodeList35.iterator();
        boolean boolean41 = false; // flaky: nodeList3.removeAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        javafx.scene.Node[] nodeArray42 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList43 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList43, nodeArray42);
        java.lang.Object obj45 = null;
        boolean boolean46 = nodeList43.remove(obj45);
        boolean boolean47 = nodeList43.isEmpty();
        boolean boolean48 = false; // flaky: nodeList3.addAll((java.util.Collection<javafx.scene.Node>) nodeList43);
        Interface.WoodTable woodTable49 = null;
        Interface.WoodTotalValues woodTotalValues50 = null;
        Interface.AddWood addWood51 = null; // flaky: new Interface.AddWood(woodTable49, woodTotalValues50);
        java.util.ArrayList<javafx.scene.Node> nodeList52 = null; // flaky: addWood51.getAll();
        boolean boolean53 = false; // flaky: nodeList52.isEmpty();
        boolean boolean55 = false; // flaky: nodeList52.equals((java.lang.Object) 100);
        java.util.Iterator<javafx.scene.Node> nodeItor56 = null; // flaky: nodeList52.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor57 = null; // flaky: nodeList52.listIterator();
        boolean boolean58 = nodeList43.equals((java.lang.Object) nodeItor57);
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeItor4);
// flaky:         org.junit.Assert.assertNotNull(nodeItor5);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(nodeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream37);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator38);
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(nodeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor56);
// flaky:         org.junit.Assert.assertNotNull(nodeItor57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test733");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
// flaky:         addWood2.redraw((double) (-1.0f), (double) ' ');
        java.util.ArrayList<javafx.scene.Node> nodeList6 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray7 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList8 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList8, nodeArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = nodeList8.remove(obj10);
        javafx.scene.Node[] nodeArray12 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList13 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList13, nodeArray12);
        boolean boolean15 = nodeList13.isEmpty();
        int int17 = nodeList13.lastIndexOf((java.lang.Object) 100);
        boolean boolean18 = nodeList13.isEmpty();
        nodeList13.clear();
        boolean boolean20 = nodeList8.removeAll((java.util.Collection<javafx.scene.Node>) nodeList13);
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        java.lang.Class<?> wildcardClass27 = nodeList22.getClass();
        javafx.scene.Node[] nodeArray28 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList29 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList29, nodeArray28);
        boolean boolean31 = nodeList29.isEmpty();
        int int33 = nodeList29.lastIndexOf((java.lang.Object) 100);
        java.lang.Class<?> wildcardClass34 = nodeList29.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray35 = new java.lang.reflect.AnnotatedElement[] { wildcardClass27, wildcardClass34 };
        java.lang.reflect.AnnotatedElement[] annotatedElementArray36 = nodeList13.toArray(annotatedElementArray35);
        javafx.scene.Node[] nodeArray37 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList38 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList38, nodeArray37);
        java.lang.Object obj40 = null;
        boolean boolean41 = nodeList38.remove(obj40);
        javafx.scene.Node[] nodeArray42 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList43 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList43, nodeArray42);
        Interface.WoodTable woodTable46 = null;
        Interface.WoodTotalValues woodTotalValues47 = null;
        Interface.AddWood addWood48 = null; // flaky: new Interface.AddWood(woodTable46, woodTotalValues47);
        java.util.ArrayList<javafx.scene.Node> nodeList49 = null; // flaky: addWood48.getAll();
        boolean boolean50 = false; // flaky: nodeList43.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList49);
        java.util.stream.Stream<javafx.scene.Node> nodeStream51 = null; // flaky: nodeList49.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator52 = null; // flaky: nodeList49.spliterator();
        javafx.scene.Node[] nodeArray53 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList54 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList54, nodeArray53);
        java.lang.Object obj56 = null;
        boolean boolean57 = nodeList54.remove(obj56);
        boolean boolean58 = false; // flaky: nodeList49.removeAll((java.util.Collection<javafx.scene.Node>) nodeList54);
        int int59 = nodeList38.lastIndexOf((java.lang.Object) nodeList54);
        javafx.scene.Node[] nodeArray60 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList61 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList61, nodeArray60);
        boolean boolean63 = nodeList61.isEmpty();
        int int65 = nodeList61.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable66 = null;
        Interface.WoodTotalValues woodTotalValues67 = null;
        Interface.AddWood addWood68 = null; // flaky: new Interface.AddWood(woodTable66, woodTotalValues67);
        java.util.ArrayList<javafx.scene.Node> nodeList69 = null; // flaky: addWood68.getAll();
        boolean boolean71 = false; // flaky: nodeList69.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node73 = null;
        javafx.scene.Node node74 = null; // flaky: nodeList69.set((int) (byte) 1, node73);
        boolean boolean75 = nodeList61.add(node74);
        javafx.scene.Node[] nodeArray76 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList77 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList77, nodeArray76);
        java.lang.Object obj79 = null;
        boolean boolean80 = nodeList77.remove(obj79);
        boolean boolean81 = nodeList61.retainAll((java.util.Collection<javafx.scene.Node>) nodeList77);
        javafx.scene.Node[] nodeArray82 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList83 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList83, nodeArray82);
        Interface.WoodTable woodTable86 = null;
        Interface.WoodTotalValues woodTotalValues87 = null;
        Interface.AddWood addWood88 = null; // flaky: new Interface.AddWood(woodTable86, woodTotalValues87);
        java.util.ArrayList<javafx.scene.Node> nodeList89 = null; // flaky: addWood88.getAll();
        boolean boolean90 = false; // flaky: nodeList83.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList89);
        java.util.stream.Stream<javafx.scene.Node> nodeStream91 = null; // flaky: nodeList89.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator92 = null; // flaky: nodeList89.spliterator();
        boolean boolean93 = false; // flaky: nodeList61.addAll((java.util.Collection<javafx.scene.Node>) nodeList89);
// flaky:         nodeList89.clear();
        boolean boolean95 = nodeList38.contains((java.lang.Object) nodeList89);
        boolean boolean96 = false; // flaky: nodeList13.containsAll((java.util.Collection<javafx.scene.Node>) nodeList89);
        boolean boolean97 = false; // flaky: nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList89);
// flaky:         org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(nodeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(nodeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(nodeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(annotatedElementArray35);
        org.junit.Assert.assertNotNull(annotatedElementArray36);
        org.junit.Assert.assertNotNull(nodeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(nodeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList49);
// flaky:         org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream51);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator52);
        org.junit.Assert.assertNotNull(nodeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(nodeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
// flaky:         org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(nodeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(nodeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList89);
// flaky:         org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream91);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator92);
// flaky:         org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test734");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        boolean boolean6 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray7 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList8 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList8, nodeArray7);
        boolean boolean10 = nodeList8.isEmpty();
        int int12 = nodeList8.lastIndexOf((java.lang.Object) 100);
        int int14 = nodeList8.lastIndexOf((java.lang.Object) 10);
        javafx.scene.Node[] nodeArray15 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList16 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList16, nodeArray15);
        boolean boolean18 = nodeList16.isEmpty();
        int int20 = nodeList16.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable21 = null;
        Interface.WoodTotalValues woodTotalValues22 = null;
        Interface.AddWood addWood23 = null; // flaky: new Interface.AddWood(woodTable21, woodTotalValues22);
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood23.getAll();
        boolean boolean26 = false; // flaky: nodeList24.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node28 = null;
        javafx.scene.Node node29 = null; // flaky: nodeList24.set((int) (byte) 1, node28);
        boolean boolean30 = nodeList16.add(node29);
        java.util.stream.Stream<javafx.scene.Node> nodeStream31 = nodeList16.stream();
        javafx.scene.Node node32 = null;
        boolean boolean33 = nodeList16.add(node32);
        boolean boolean34 = nodeList8.retainAll((java.util.Collection<javafx.scene.Node>) nodeList16);
        boolean boolean35 = nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList8);
        javafx.scene.Node[] nodeArray36 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList37 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList37, nodeArray36);
        java.lang.Object obj39 = null;
        boolean boolean40 = nodeList37.remove(obj39);
        javafx.scene.Node[] nodeArray41 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList42 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList42, nodeArray41);
        Interface.WoodTable woodTable45 = null;
        Interface.WoodTotalValues woodTotalValues46 = null;
        Interface.AddWood addWood47 = null; // flaky: new Interface.AddWood(woodTable45, woodTotalValues46);
        java.util.ArrayList<javafx.scene.Node> nodeList48 = null; // flaky: addWood47.getAll();
        boolean boolean49 = false; // flaky: nodeList42.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList48);
        java.util.stream.Stream<javafx.scene.Node> nodeStream50 = null; // flaky: nodeList48.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator51 = null; // flaky: nodeList48.spliterator();
        javafx.scene.Node[] nodeArray52 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList53 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList53, nodeArray52);
        java.lang.Object obj55 = null;
        boolean boolean56 = nodeList53.remove(obj55);
        boolean boolean57 = false; // flaky: nodeList48.removeAll((java.util.Collection<javafx.scene.Node>) nodeList53);
        int int58 = nodeList37.lastIndexOf((java.lang.Object) nodeList53);
        javafx.scene.Node[] nodeArray59 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList60 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList60, nodeArray59);
        boolean boolean62 = nodeList60.isEmpty();
        int int64 = nodeList60.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable65 = null;
        Interface.WoodTotalValues woodTotalValues66 = null;
        Interface.AddWood addWood67 = null; // flaky: new Interface.AddWood(woodTable65, woodTotalValues66);
        java.util.ArrayList<javafx.scene.Node> nodeList68 = null; // flaky: addWood67.getAll();
        boolean boolean70 = false; // flaky: nodeList68.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node72 = null;
        javafx.scene.Node node73 = null; // flaky: nodeList68.set((int) (byte) 1, node72);
        boolean boolean74 = nodeList60.add(node73);
        javafx.scene.Node[] nodeArray75 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList76 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList76, nodeArray75);
        java.lang.Object obj78 = null;
        boolean boolean79 = nodeList76.remove(obj78);
        boolean boolean80 = nodeList60.retainAll((java.util.Collection<javafx.scene.Node>) nodeList76);
        javafx.scene.Node[] nodeArray81 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList82 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList82, nodeArray81);
        Interface.WoodTable woodTable85 = null;
        Interface.WoodTotalValues woodTotalValues86 = null;
        Interface.AddWood addWood87 = null; // flaky: new Interface.AddWood(woodTable85, woodTotalValues86);
        java.util.ArrayList<javafx.scene.Node> nodeList88 = null; // flaky: addWood87.getAll();
        boolean boolean89 = false; // flaky: nodeList82.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList88);
        java.util.stream.Stream<javafx.scene.Node> nodeStream90 = null; // flaky: nodeList88.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator91 = null; // flaky: nodeList88.spliterator();
        boolean boolean92 = false; // flaky: nodeList60.addAll((java.util.Collection<javafx.scene.Node>) nodeList88);
// flaky:         nodeList88.clear();
        boolean boolean94 = nodeList37.contains((java.lang.Object) nodeList88);
        int int95 = nodeList1.indexOf((java.lang.Object) boolean94);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(nodeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(nodeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
// flaky:         org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(nodeStream31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(nodeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(nodeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList48);
// flaky:         org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream50);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator51);
        org.junit.Assert.assertNotNull(nodeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(nodeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
// flaky:         org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(nodeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(nodeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList88);
// flaky:         org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream90);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator91);
// flaky:         org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test735");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = nodeList10.remove(obj12);
        javafx.scene.Node node14 = null;
        boolean boolean15 = nodeList10.add(node14);
        java.util.ListIterator<javafx.scene.Node> nodeItor16 = nodeList10.listIterator();
        boolean boolean17 = false; // flaky: nodeList8.contains((java.lang.Object) nodeList10);
        Interface.WoodTable woodTable18 = null;
        Interface.WoodTotalValues woodTotalValues19 = null;
        Interface.AddWood addWood20 = null; // flaky: new Interface.AddWood(woodTable18, woodTotalValues19);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood20.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList22 = null; // flaky: addWood20.getAll();
        javafx.scene.Node[] nodeArray23 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList24 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList24, nodeArray23);
        boolean boolean26 = nodeList24.isEmpty();
        int int28 = nodeList24.lastIndexOf((java.lang.Object) 100);
        int int30 = nodeList24.lastIndexOf((java.lang.Object) 10);
        boolean boolean31 = false; // flaky: nodeList22.retainAll((java.util.Collection<javafx.scene.Node>) nodeList24);
        boolean boolean33 = false; // flaky: nodeList22.contains((java.lang.Object) false);
        Interface.WoodTable woodTable34 = null;
        Interface.WoodTotalValues woodTotalValues35 = null;
        Interface.AddWood addWood36 = null; // flaky: new Interface.AddWood(woodTable34, woodTotalValues35);
        java.util.ArrayList<javafx.scene.Node> nodeList37 = null; // flaky: addWood36.getAll();
        boolean boolean38 = false; // flaky: nodeList37.isEmpty();
        boolean boolean40 = false; // flaky: nodeList37.equals((java.lang.Object) 100);
        int int41 = 0; // flaky: nodeList22.lastIndexOf((java.lang.Object) nodeList37);
        java.lang.Object[] objArray42 = null; // flaky: nodeList22.toArray();
        int int44 = 0; // flaky: nodeList22.lastIndexOf((java.lang.Object) (short) 0);
        java.util.Iterator<javafx.scene.Node> nodeItor45 = null; // flaky: nodeList22.iterator();
        int int46 = 0; // flaky: nodeList8.lastIndexOf((java.lang.Object) nodeItor45);
        java.util.Iterator<javafx.scene.Node> nodeItor47 = null; // flaky: nodeList8.iterator();
        Interface.WoodTable woodTable48 = null;
        Interface.WoodTable woodTable49 = null;
        Interface.WoodTotalValues woodTotalValues50 = null; // flaky: new Interface.WoodTotalValues(woodTable49);
        java.util.ArrayList<javafx.scene.Node> nodeList51 = null; // flaky: woodTotalValues50.getAll();
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable48, woodTotalValues50);
// flaky:         woodTotalValues50.redraw((double) 0L, (double) '#');
        int int56 = 0; // flaky: nodeList8.lastIndexOf((java.lang.Object) 0L);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeItor16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertNotNull(nodeList22);
        org.junit.Assert.assertNotNull(nodeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
// flaky:         org.junit.Assert.assertNotNull(objArray42);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeItor45);
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeItor47);
// flaky:         org.junit.Assert.assertNotNull(nodeList51);
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test736");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood18.getAll();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        int int28 = nodeList22.lastIndexOf((java.lang.Object) 10);
        boolean boolean29 = false; // flaky: nodeList20.retainAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        boolean boolean30 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        Interface.WoodTable woodTable31 = null;
        Interface.WoodTotalValues woodTotalValues32 = null;
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable31, woodTotalValues32);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList36 = null; // flaky: addWood33.getAll();
        boolean boolean37 = false; // flaky: nodeList22.addAll((java.util.Collection<javafx.scene.Node>) nodeList36);
        java.util.ListIterator<javafx.scene.Node> nodeItor38 = null; // flaky: nodeList36.listIterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor39 = null; // flaky: nodeList36.listIterator();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertNotNull(nodeList36);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor38);
// flaky:         org.junit.Assert.assertNotNull(nodeItor39);
    }

    @Test
    public void test737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test737");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        javafx.scene.Node[] nodeArray14 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList15 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList15, nodeArray14);
        Interface.WoodTable woodTable18 = null;
        Interface.WoodTotalValues woodTotalValues19 = null;
        Interface.AddWood addWood20 = null; // flaky: new Interface.AddWood(woodTable18, woodTotalValues19);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood20.getAll();
        boolean boolean22 = false; // flaky: nodeList15.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList21);
        int int24 = nodeList15.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray25 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList26 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList26, nodeArray25);
        java.lang.Object obj28 = null;
        boolean boolean29 = nodeList26.remove(obj28);
        boolean boolean30 = nodeList26.isEmpty();
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.lang.String[] strArray34 = nodeList26.toArray(strArray33);
        boolean boolean35 = nodeList15.equals((java.lang.Object) strArray34);
        int int36 = 0; // flaky: nodeList4.lastIndexOf((java.lang.Object) boolean35);
        javafx.scene.Node[] nodeArray37 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList38 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList38, nodeArray37);
        Interface.WoodTable woodTable41 = null;
        Interface.WoodTotalValues woodTotalValues42 = null;
        Interface.AddWood addWood43 = null; // flaky: new Interface.AddWood(woodTable41, woodTotalValues42);
        java.util.ArrayList<javafx.scene.Node> nodeList44 = null; // flaky: addWood43.getAll();
        boolean boolean45 = false; // flaky: nodeList38.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList44);
        int int47 = nodeList38.indexOf((java.lang.Object) true);
        boolean boolean48 = false; // flaky: nodeList4.removeAll((java.util.Collection<javafx.scene.Node>) nodeList38);
        javafx.scene.Node[] nodeArray49 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList50 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList50, nodeArray49);
        java.lang.Object obj52 = null;
        boolean boolean53 = nodeList50.remove(obj52);
        javafx.scene.Node node54 = null;
        boolean boolean55 = nodeList50.add(node54);
        int int57 = nodeList50.indexOf((java.lang.Object) (short) 10);
        Interface.WoodTable woodTable58 = null;
        Interface.WoodTotalValues woodTotalValues59 = null;
        Interface.AddWood addWood60 = null; // flaky: new Interface.AddWood(woodTable58, woodTotalValues59);
        java.util.ArrayList<javafx.scene.Node> nodeList61 = null; // flaky: addWood60.getAll();
// flaky:         addWood60.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList65 = null; // flaky: addWood60.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList66 = null; // flaky: addWood60.getAll();
        javafx.scene.Node[] nodeArray67 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList68 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList68, nodeArray67);
        java.lang.Object obj70 = null;
        boolean boolean71 = nodeList68.remove(obj70);
        javafx.scene.Node node72 = null;
        boolean boolean73 = nodeList68.add(node72);
        java.util.ListIterator<javafx.scene.Node> nodeItor74 = nodeList68.listIterator();
        boolean boolean75 = false; // flaky: nodeList66.contains((java.lang.Object) nodeList68);
        java.util.ListIterator<javafx.scene.Node> nodeItor76 = nodeList68.listIterator();
        boolean boolean77 = nodeList50.remove((java.lang.Object) nodeList68);
        boolean boolean78 = false; // flaky: nodeList4.removeAll((java.util.Collection<javafx.scene.Node>) nodeList68);
        java.util.Iterator<javafx.scene.Node> nodeItor79 = nodeList68.iterator();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(nodeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(nodeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList44);
// flaky:         org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(nodeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList61);
// flaky:         org.junit.Assert.assertNotNull(nodeList65);
// flaky:         org.junit.Assert.assertNotNull(nodeList66);
        org.junit.Assert.assertNotNull(nodeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(nodeItor74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(nodeItor76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(nodeItor79);
    }

    @Test
    public void test738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test738");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node node5 = null;
        boolean boolean6 = nodeList1.add(node5);
        java.util.ListIterator<javafx.scene.Node> nodeItor7 = nodeList1.listIterator();
        int int9 = nodeList1.lastIndexOf((java.lang.Object) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node11 = nodeList1.get(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(nodeItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test739");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        boolean boolean33 = false; // flaky: nodeList7.add(node31);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood37.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList40 = null; // flaky: addWood37.getAll();
        javafx.scene.Node[] nodeArray42 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList43 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList43, nodeArray42);
        boolean boolean45 = nodeList43.isEmpty();
        int int47 = nodeList43.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable48 = null;
        Interface.WoodTotalValues woodTotalValues49 = null;
        Interface.AddWood addWood50 = null; // flaky: new Interface.AddWood(woodTable48, woodTotalValues49);
        java.util.ArrayList<javafx.scene.Node> nodeList51 = null; // flaky: addWood50.getAll();
        boolean boolean53 = false; // flaky: nodeList51.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node55 = null;
        javafx.scene.Node node56 = null; // flaky: nodeList51.set((int) (byte) 1, node55);
        boolean boolean57 = nodeList43.add(node56);
        javafx.scene.Node node58 = null; // flaky: nodeList40.set((int) (short) 0, node56);
// flaky:         nodeList7.add(5, node56);
        Interface.WoodTable woodTable60 = null;
        Interface.WoodTotalValues woodTotalValues61 = null;
        Interface.AddWood addWood62 = null; // flaky: new Interface.AddWood(woodTable60, woodTotalValues61);
        java.util.ArrayList<javafx.scene.Node> nodeList63 = null; // flaky: addWood62.getAll();
        boolean boolean65 = false; // flaky: nodeList63.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node67 = null;
        javafx.scene.Node node68 = null; // flaky: nodeList63.set((int) (byte) 1, node67);
        boolean boolean69 = false; // flaky: nodeList7.remove((java.lang.Object) node68);
        int int70 = 0; // flaky: nodeList7.size();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
// flaky:         org.junit.Assert.assertNotNull(nodeList40);
        org.junit.Assert.assertNotNull(nodeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
// flaky:         org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
// flaky:         org.junit.Assert.assertNotNull(node58);
// flaky:         org.junit.Assert.assertNotNull(nodeList63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
// flaky:         org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 7 + "'", int70 == 7);
    }

    @Test
    public void test740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test740");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        javafx.scene.Node[] nodeArray12 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList13 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList13, nodeArray12);
        boolean boolean15 = nodeList13.isEmpty();
        int int17 = nodeList13.lastIndexOf((java.lang.Object) 100);
        int int19 = nodeList13.lastIndexOf((java.lang.Object) 10);
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        boolean boolean23 = nodeList21.isEmpty();
        int int25 = nodeList21.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        boolean boolean31 = false; // flaky: nodeList29.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node33 = null;
        javafx.scene.Node node34 = null; // flaky: nodeList29.set((int) (byte) 1, node33);
        boolean boolean35 = nodeList21.add(node34);
        java.util.stream.Stream<javafx.scene.Node> nodeStream36 = nodeList21.stream();
        javafx.scene.Node node37 = null;
        boolean boolean38 = nodeList21.add(node37);
        boolean boolean39 = nodeList13.retainAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        boolean boolean40 = nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList13);
        boolean boolean41 = false; // flaky: nodeList4.containsAll((java.util.Collection<javafx.scene.Node>) nodeList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<javafx.scene.Node> nodeItor43 = nodeList13.listIterator((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(nodeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(nodeStream36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test741");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        javafx.scene.Node[] nodeArray16 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList17 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList17, nodeArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = nodeList17.remove(obj19);
        boolean boolean21 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList17);
        java.util.ListIterator<javafx.scene.Node> nodeItor22 = nodeList17.listIterator();
        javafx.scene.Node[] nodeArray24 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList25 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList25, nodeArray24);
        boolean boolean27 = nodeList25.isEmpty();
        int int29 = nodeList25.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable30 = null;
        Interface.WoodTotalValues woodTotalValues31 = null;
        Interface.AddWood addWood32 = null; // flaky: new Interface.AddWood(woodTable30, woodTotalValues31);
        java.util.ArrayList<javafx.scene.Node> nodeList33 = null; // flaky: addWood32.getAll();
        boolean boolean35 = false; // flaky: nodeList33.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node37 = null;
        javafx.scene.Node node38 = null; // flaky: nodeList33.set((int) (byte) 1, node37);
        boolean boolean39 = nodeList25.add(node38);
        javafx.scene.Node[] nodeArray40 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList41 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList41, nodeArray40);
        java.lang.Object obj43 = null;
        boolean boolean44 = nodeList41.remove(obj43);
        boolean boolean45 = nodeList25.retainAll((java.util.Collection<javafx.scene.Node>) nodeList41);
        javafx.scene.Node[] nodeArray46 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList47 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList47, nodeArray46);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null;
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable50, woodTotalValues51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood52.getAll();
        boolean boolean54 = false; // flaky: nodeList47.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList53);
        java.util.stream.Stream<javafx.scene.Node> nodeStream55 = null; // flaky: nodeList53.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator56 = null; // flaky: nodeList53.spliterator();
        boolean boolean57 = false; // flaky: nodeList25.addAll((java.util.Collection<javafx.scene.Node>) nodeList53);
        java.util.Iterator<javafx.scene.Node> nodeItor58 = null; // flaky: nodeList53.iterator();
        javafx.scene.Node node60 = null; // flaky: nodeList53.remove(1);
        // The following exception was thrown during execution in test generation
        try {
            nodeList17.add(6, node60);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(nodeItor22);
        org.junit.Assert.assertNotNull(nodeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
// flaky:         org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(nodeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(nodeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
// flaky:         org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream55);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator56);
// flaky:         org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor58);
// flaky:         org.junit.Assert.assertNotNull(node60);
    }

    @Test
    public void test742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test742");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) (byte) 10, 100.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood2.getAll();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<javafx.scene.Node> nodeList10 = null; // flaky: nodeList7.subList((int) (short) 0, (int) 'a');
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
    }

    @Test
    public void test743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test743");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = nodeList6.remove(obj8);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        boolean boolean18 = false; // flaky: nodeList11.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList17);
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        boolean boolean23 = nodeList21.isEmpty();
        int int25 = nodeList21.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        boolean boolean31 = false; // flaky: nodeList29.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node33 = null;
        javafx.scene.Node node34 = null; // flaky: nodeList29.set((int) (byte) 1, node33);
        boolean boolean35 = nodeList21.add(node34);
// flaky:         nodeList11.add(1, node34);
        boolean boolean37 = nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList11);
        boolean boolean38 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList11);
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        boolean boolean42 = nodeList40.isEmpty();
        int int44 = nodeList40.lastIndexOf((java.lang.Object) 100);
        boolean boolean45 = nodeList40.isEmpty();
        nodeList40.clear();
        boolean boolean47 = nodeList11.addAll((java.util.Collection<javafx.scene.Node>) nodeList40);
        java.lang.Object obj48 = null;
        boolean boolean49 = nodeList11.remove(obj48);
        javafx.scene.Node[] nodeArray51 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList52 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList52, nodeArray51);
        java.lang.Object obj54 = null;
        boolean boolean55 = nodeList52.remove(obj54);
        javafx.scene.Node[] nodeArray56 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList57 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList57, nodeArray56);
        boolean boolean59 = nodeList57.isEmpty();
        int int61 = nodeList57.lastIndexOf((java.lang.Object) 100);
        boolean boolean62 = nodeList57.isEmpty();
        nodeList57.clear();
        boolean boolean64 = nodeList52.removeAll((java.util.Collection<javafx.scene.Node>) nodeList57);
        Interface.WoodTable woodTable65 = null;
        Interface.WoodTotalValues woodTotalValues66 = null;
        Interface.AddWood addWood67 = null; // flaky: new Interface.AddWood(woodTable65, woodTotalValues66);
        java.util.ArrayList<javafx.scene.Node> nodeList68 = null; // flaky: addWood67.getAll();
// flaky:         addWood67.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList72 = null; // flaky: addWood67.getAll();
        boolean boolean73 = false; // flaky: nodeList57.addAll((java.util.Collection<javafx.scene.Node>) nodeList72);
        javafx.scene.Node[] nodeArray74 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList75 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList75, nodeArray74);
        boolean boolean77 = nodeList75.isEmpty();
        boolean boolean78 = nodeList75.isEmpty();
        nodeList75.clear();
        boolean boolean80 = nodeList57.retainAll((java.util.Collection<javafx.scene.Node>) nodeList75);
        java.util.List<javafx.scene.Node> nodeList83 = nodeList57.subList(0, 0);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = nodeList11.addAll((int) (short) -1, (java.util.Collection<javafx.scene.Node>) nodeList83);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(nodeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(nodeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList68);
// flaky:         org.junit.Assert.assertNotNull(nodeList72);
// flaky:         org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(nodeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(nodeList83);
    }

    @Test
    public void test744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test744");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        Interface.WoodTable woodTable17 = null;
        Interface.WoodTotalValues woodTotalValues18 = null;
        Interface.AddWood addWood19 = null; // flaky: new Interface.AddWood(woodTable17, woodTotalValues18);
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood19.getAll();
// flaky:         addWood19.redraw((double) 10.0f, (double) (-1L));
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood19.getAll();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator25 = null; // flaky: nodeList24.spliterator();
        int int26 = 0; // flaky: nodeList7.lastIndexOf((java.lang.Object) nodeSpliterator25);
        java.util.Iterator<javafx.scene.Node> nodeItor27 = null; // flaky: nodeList7.iterator();
        java.lang.Class<?> wildcardClass28 = null; // flaky: nodeItor27.getClass();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator25);
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeItor27);
// flaky:         org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test745");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator9 = nodeList1.spliterator();
        nodeList1.clear();
        Interface.WoodTable woodTable11 = null;
        Interface.WoodTotalValues woodTotalValues12 = null;
        Interface.AddWood addWood13 = null; // flaky: new Interface.AddWood(woodTable11, woodTotalValues12);
        java.util.ArrayList<javafx.scene.Node> nodeList14 = null; // flaky: addWood13.getAll();
        boolean boolean15 = false; // flaky: nodeList14.isEmpty();
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        Interface.WoodTable woodTable21 = null;
        Interface.WoodTotalValues woodTotalValues22 = null;
        Interface.AddWood addWood23 = null; // flaky: new Interface.AddWood(woodTable21, woodTotalValues22);
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood23.getAll();
        boolean boolean25 = false; // flaky: nodeList18.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList24);
        javafx.scene.Node[] nodeArray27 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList28 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList28, nodeArray27);
        boolean boolean30 = nodeList28.isEmpty();
        int int32 = nodeList28.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable33 = null;
        Interface.WoodTotalValues woodTotalValues34 = null;
        Interface.AddWood addWood35 = null; // flaky: new Interface.AddWood(woodTable33, woodTotalValues34);
        java.util.ArrayList<javafx.scene.Node> nodeList36 = null; // flaky: addWood35.getAll();
        boolean boolean38 = false; // flaky: nodeList36.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node40 = null;
        javafx.scene.Node node41 = null; // flaky: nodeList36.set((int) (byte) 1, node40);
        boolean boolean42 = nodeList28.add(node41);
// flaky:         nodeList18.add(1, node41);
        javafx.scene.Node node44 = null; // flaky: nodeList14.set(0, node41);
        boolean boolean45 = nodeList1.add(node44);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
// flaky:         org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
// flaky:         org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
// flaky:         org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test746");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood6.getAll();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        boolean boolean12 = nodeList10.isEmpty();
        int int14 = nodeList10.lastIndexOf((java.lang.Object) 100);
        int int16 = nodeList10.lastIndexOf((java.lang.Object) 10);
        boolean boolean17 = false; // flaky: nodeList8.retainAll((java.util.Collection<javafx.scene.Node>) nodeList10);
        boolean boolean18 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList8);
        boolean boolean19 = false; // flaky: nodeList8.isEmpty();
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        java.lang.Object obj23 = null;
        boolean boolean24 = nodeList21.remove(obj23);
        boolean boolean25 = nodeList21.isEmpty();
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        Interface.WoodTable woodTable30 = null;
        Interface.WoodTotalValues woodTotalValues31 = null;
        Interface.AddWood addWood32 = null; // flaky: new Interface.AddWood(woodTable30, woodTotalValues31);
        java.util.ArrayList<javafx.scene.Node> nodeList33 = null; // flaky: addWood32.getAll();
        boolean boolean34 = false; // flaky: nodeList27.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList33);
        int int36 = nodeList27.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray38 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList39 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList39, nodeArray38);
        boolean boolean41 = nodeList39.isEmpty();
        int int43 = nodeList39.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable44 = null;
        Interface.WoodTotalValues woodTotalValues45 = null;
        Interface.AddWood addWood46 = null; // flaky: new Interface.AddWood(woodTable44, woodTotalValues45);
        java.util.ArrayList<javafx.scene.Node> nodeList47 = null; // flaky: addWood46.getAll();
        boolean boolean49 = false; // flaky: nodeList47.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node51 = null;
        javafx.scene.Node node52 = null; // flaky: nodeList47.set((int) (byte) 1, node51);
        boolean boolean53 = nodeList39.add(node52);
        javafx.scene.Node node54 = null; // flaky: nodeList27.set((int) (short) 0, node52);
        boolean boolean55 = nodeList21.add(node54);
        boolean boolean57 = nodeList21.remove((java.lang.Object) 100L);
        int int58 = 0; // flaky: nodeList8.lastIndexOf((java.lang.Object) nodeList21);
        Interface.WoodTable woodTable59 = null;
        Interface.WoodTotalValues woodTotalValues60 = null; // flaky: new Interface.WoodTotalValues(woodTable59);
// flaky:         woodTotalValues60.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList64 = null; // flaky: woodTotalValues60.getAll();
        boolean boolean65 = false; // flaky: nodeList8.contains((java.lang.Object) woodTotalValues60);
// flaky:         woodTotalValues60.redraw((double) 100, (double) (short) -1);
// flaky:         woodTotalValues60.redraw((double) (short) 1, (double) (byte) 10);
        java.util.ArrayList<javafx.scene.Node> nodeList72 = null; // flaky: woodTotalValues60.getAll();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList33);
// flaky:         org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
// flaky:         org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList72);
    }

    @Test
    public void test747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test747");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
// flaky:         woodTotalValues1.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: woodTotalValues1.getAll();
// flaky:         woodTotalValues1.redraw(10.0d, 1.0d);
// flaky:         woodTotalValues1.redraw((double) 10, (double) 10);
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: woodTotalValues1.getAll();
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
    }

    @Test
    public void test748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test748");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
// flaky:         addWood16.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood16.getAll();
        boolean boolean22 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        javafx.scene.Node[] nodeArray23 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList24 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList24, nodeArray23);
        boolean boolean26 = nodeList24.isEmpty();
        boolean boolean27 = nodeList24.isEmpty();
        nodeList24.clear();
        boolean boolean29 = nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList24);
        nodeList24.clear();
        java.util.stream.Stream<javafx.scene.Node> nodeStream31 = nodeList24.stream();
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node33 = nodeList24.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(nodeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(nodeStream31);
    }

    @Test
    public void test749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test749");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable8 = null;
        Interface.WoodTotalValues woodTotalValues9 = null;
        Interface.AddWood addWood10 = null; // flaky: new Interface.AddWood(woodTable8, woodTotalValues9);
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: addWood10.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: addWood10.getAll();
        javafx.scene.Node[] nodeArray13 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList14 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList14, nodeArray13);
        boolean boolean16 = nodeList14.isEmpty();
        int int18 = nodeList14.lastIndexOf((java.lang.Object) 100);
        int int20 = nodeList14.lastIndexOf((java.lang.Object) 10);
        boolean boolean21 = false; // flaky: nodeList12.retainAll((java.util.Collection<javafx.scene.Node>) nodeList14);
        boolean boolean22 = nodeList1.containsAll((java.util.Collection<javafx.scene.Node>) nodeList14);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList26);
// flaky:         nodeList26.clear();
        java.util.stream.Stream<javafx.scene.Node> nodeStream34 = null; // flaky: nodeList26.stream();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertNotNull(nodeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeStream34);
    }

    @Test
    public void test750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test750");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        boolean boolean6 = nodeList1.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream7 = nodeList1.stream();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = nodeList10.remove(obj12);
        javafx.scene.Node[] nodeArray14 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList15 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList15, nodeArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = nodeList15.remove(obj17);
        javafx.scene.Node[] nodeArray19 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList20 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList20, nodeArray19);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean27 = false; // flaky: nodeList20.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList26);
        javafx.scene.Node[] nodeArray29 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList30 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList30, nodeArray29);
        boolean boolean32 = nodeList30.isEmpty();
        int int34 = nodeList30.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        boolean boolean40 = false; // flaky: nodeList38.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node42 = null;
        javafx.scene.Node node43 = null; // flaky: nodeList38.set((int) (byte) 1, node42);
        boolean boolean44 = nodeList30.add(node43);
// flaky:         nodeList20.add(1, node43);
        boolean boolean46 = nodeList15.retainAll((java.util.Collection<javafx.scene.Node>) nodeList20);
        boolean boolean47 = nodeList10.retainAll((java.util.Collection<javafx.scene.Node>) nodeList20);
        boolean boolean48 = nodeList1.addAll((int) (short) 0, (java.util.Collection<javafx.scene.Node>) nodeList20);
        nodeList20.clear();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(nodeStream7);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(nodeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(nodeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
// flaky:         org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(nodeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test751");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        boolean boolean5 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        Interface.WoodTable woodTable10 = null;
        Interface.WoodTotalValues woodTotalValues11 = null;
        Interface.AddWood addWood12 = null; // flaky: new Interface.AddWood(woodTable10, woodTotalValues11);
        java.util.ArrayList<javafx.scene.Node> nodeList13 = null; // flaky: addWood12.getAll();
        boolean boolean14 = false; // flaky: nodeList7.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList13);
        int int16 = nodeList7.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray18 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList19 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList19, nodeArray18);
        boolean boolean21 = nodeList19.isEmpty();
        int int23 = nodeList19.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTotalValues woodTotalValues25 = null;
        Interface.AddWood addWood26 = null; // flaky: new Interface.AddWood(woodTable24, woodTotalValues25);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood26.getAll();
        boolean boolean29 = false; // flaky: nodeList27.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node31 = null;
        javafx.scene.Node node32 = null; // flaky: nodeList27.set((int) (byte) 1, node31);
        boolean boolean33 = nodeList19.add(node32);
        javafx.scene.Node node34 = null; // flaky: nodeList7.set((int) (short) 0, node32);
        boolean boolean35 = nodeList1.add(node34);
        java.util.Iterator<javafx.scene.Node> nodeItor36 = nodeList1.iterator();
        boolean boolean37 = nodeList1.isEmpty();
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null; // flaky: new Interface.WoodTotalValues(woodTable38);
        java.util.ArrayList<javafx.scene.Node> nodeList40 = null; // flaky: woodTotalValues39.getAll();
        int int42 = 0; // flaky: nodeList40.indexOf((java.lang.Object) (byte) 0);
        java.util.ListIterator<javafx.scene.Node> nodeItor43 = null; // flaky: nodeList40.listIterator();
// flaky:         nodeList40.clear();
        Interface.WoodTable woodTable45 = null;
        Interface.WoodTotalValues woodTotalValues46 = null; // flaky: new Interface.WoodTotalValues(woodTable45);
        java.util.ArrayList<javafx.scene.Node> nodeList47 = null; // flaky: woodTotalValues46.getAll();
        int int49 = 0; // flaky: nodeList47.indexOf((java.lang.Object) (byte) 0);
        java.lang.Object[] objArray50 = null; // flaky: nodeList47.toArray();
        Interface.WoodTable woodTable51 = null;
        Interface.WoodTotalValues woodTotalValues52 = null;
        Interface.AddWood addWood53 = null; // flaky: new Interface.AddWood(woodTable51, woodTotalValues52);
        java.util.ArrayList<javafx.scene.Node> nodeList54 = null; // flaky: addWood53.getAll();
        boolean boolean56 = false; // flaky: nodeList54.equals((java.lang.Object) (byte) 1);
        boolean boolean57 = false; // flaky: nodeList47.addAll((java.util.Collection<javafx.scene.Node>) nodeList54);
        javafx.scene.Node[] nodeArray58 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList59 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList59, nodeArray58);
        java.lang.Object obj61 = null;
        boolean boolean62 = nodeList59.remove(obj61);
        javafx.scene.Node[] nodeArray63 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList64 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList64, nodeArray63);
        boolean boolean66 = nodeList64.isEmpty();
        int int68 = nodeList64.lastIndexOf((java.lang.Object) 100);
        boolean boolean69 = nodeList64.isEmpty();
        nodeList64.clear();
        boolean boolean71 = nodeList59.removeAll((java.util.Collection<javafx.scene.Node>) nodeList64);
        Interface.WoodTable woodTable72 = null;
        Interface.WoodTotalValues woodTotalValues73 = null;
        Interface.AddWood addWood74 = null; // flaky: new Interface.AddWood(woodTable72, woodTotalValues73);
        java.util.ArrayList<javafx.scene.Node> nodeList75 = null; // flaky: addWood74.getAll();
// flaky:         addWood74.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList79 = null; // flaky: addWood74.getAll();
        boolean boolean80 = false; // flaky: nodeList64.addAll((java.util.Collection<javafx.scene.Node>) nodeList79);
        javafx.scene.Node[] nodeArray81 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList82 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList82, nodeArray81);
        boolean boolean84 = nodeList82.isEmpty();
        boolean boolean85 = nodeList82.isEmpty();
        nodeList82.clear();
        boolean boolean87 = nodeList64.retainAll((java.util.Collection<javafx.scene.Node>) nodeList82);
        boolean boolean88 = false; // flaky: nodeList54.removeAll((java.util.Collection<javafx.scene.Node>) nodeList64);
        java.lang.Object[] objArray89 = nodeList64.toArray();
        boolean boolean90 = false; // flaky: nodeList40.retainAll((java.util.Collection<javafx.scene.Node>) nodeList64);
        boolean boolean91 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList64);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList13);
// flaky:         org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(nodeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(nodeItor36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList40);
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeItor43);
// flaky:         org.junit.Assert.assertNotNull(nodeList47);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertNotNull(objArray50);
// flaky:         org.junit.Assert.assertNotNull(nodeList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(nodeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(nodeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList75);
// flaky:         org.junit.Assert.assertNotNull(nodeList79);
// flaky:         org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(nodeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test752");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood6.getAll();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        boolean boolean12 = nodeList10.isEmpty();
        int int14 = nodeList10.lastIndexOf((java.lang.Object) 100);
        int int16 = nodeList10.lastIndexOf((java.lang.Object) 10);
        boolean boolean17 = false; // flaky: nodeList8.retainAll((java.util.Collection<javafx.scene.Node>) nodeList10);
        boolean boolean18 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList8);
        boolean boolean19 = false; // flaky: nodeList8.isEmpty();
        java.util.Iterator<javafx.scene.Node> nodeItor20 = null; // flaky: nodeList8.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor22 = null; // flaky: nodeList8.listIterator(0);
        javafx.scene.Node[] nodeArray23 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList24 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList24, nodeArray23);
        boolean boolean26 = nodeList24.isEmpty();
        Interface.WoodTable woodTable27 = null;
        Interface.WoodTotalValues woodTotalValues28 = null;
        Interface.AddWood addWood29 = null; // flaky: new Interface.AddWood(woodTable27, woodTotalValues28);
        java.util.ArrayList<javafx.scene.Node> nodeList30 = null; // flaky: addWood29.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList31 = null; // flaky: addWood29.getAll();
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        boolean boolean35 = nodeList33.isEmpty();
        int int37 = nodeList33.lastIndexOf((java.lang.Object) 100);
        int int39 = nodeList33.lastIndexOf((java.lang.Object) 10);
        boolean boolean40 = false; // flaky: nodeList31.retainAll((java.util.Collection<javafx.scene.Node>) nodeList33);
        boolean boolean41 = false; // flaky: nodeList24.removeAll((java.util.Collection<javafx.scene.Node>) nodeList31);
        java.util.List<javafx.scene.Node> nodeList44 = null; // flaky: nodeList31.subList(0, (int) (byte) 0);
        boolean boolean45 = false; // flaky: nodeList8.contains((java.lang.Object) nodeList44);
        java.lang.Class<?> wildcardClass46 = null; // flaky: nodeList44.getClass();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor20);
// flaky:         org.junit.Assert.assertNotNull(nodeItor22);
        org.junit.Assert.assertNotNull(nodeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList30);
// flaky:         org.junit.Assert.assertNotNull(nodeList31);
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test753");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList18 = null; // flaky: addWood16.getAll();
        boolean boolean19 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList18);
        java.util.stream.Stream<javafx.scene.Node> nodeStream20 = null; // flaky: nodeList18.parallelStream();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList18);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream20);
    }

    @Test
    public void test754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test754");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        Interface.WoodTable woodTable9 = null;
        Interface.WoodTotalValues woodTotalValues10 = null;
        Interface.AddWood addWood11 = null; // flaky: new Interface.AddWood(woodTable9, woodTotalValues10);
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: addWood11.getAll();
        boolean boolean13 = false; // flaky: nodeList6.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray15 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList16 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList16, nodeArray15);
        boolean boolean18 = nodeList16.isEmpty();
        int int20 = nodeList16.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable21 = null;
        Interface.WoodTotalValues woodTotalValues22 = null;
        Interface.AddWood addWood23 = null; // flaky: new Interface.AddWood(woodTable21, woodTotalValues22);
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood23.getAll();
        boolean boolean26 = false; // flaky: nodeList24.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node28 = null;
        javafx.scene.Node node29 = null; // flaky: nodeList24.set((int) (byte) 1, node28);
        boolean boolean30 = nodeList16.add(node29);
// flaky:         nodeList6.add(1, node29);
        boolean boolean32 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        java.util.stream.Stream<javafx.scene.Node> nodeStream33 = nodeList1.parallelStream();
        nodeList1.clear();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(nodeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
// flaky:         org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(nodeStream33);
    }

    @Test
    public void test755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test755");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean15 = false; // flaky: nodeList4.contains((java.lang.Object) false);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean20 = false; // flaky: nodeList19.isEmpty();
        boolean boolean22 = false; // flaky: nodeList19.equals((java.lang.Object) 100);
        int int23 = 0; // flaky: nodeList4.lastIndexOf((java.lang.Object) nodeList19);
        javafx.scene.Node[] nodeArray24 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList25 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList25, nodeArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = nodeList25.remove(obj27);
        javafx.scene.Node[] nodeArray29 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList30 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList30, nodeArray29);
        boolean boolean32 = nodeList30.isEmpty();
        int int34 = nodeList30.lastIndexOf((java.lang.Object) 100);
        boolean boolean35 = nodeList25.equals((java.lang.Object) nodeList30);
        Interface.WoodTable woodTable36 = null;
        Interface.WoodTotalValues woodTotalValues37 = null;
        Interface.AddWood addWood38 = null; // flaky: new Interface.AddWood(woodTable36, woodTotalValues37);
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood38.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList40 = null; // flaky: addWood38.getAll();
        javafx.scene.Node[] nodeArray41 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList42 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList42, nodeArray41);
        boolean boolean44 = nodeList42.isEmpty();
        int int46 = nodeList42.lastIndexOf((java.lang.Object) 100);
        int int48 = nodeList42.lastIndexOf((java.lang.Object) 10);
        boolean boolean49 = false; // flaky: nodeList40.retainAll((java.util.Collection<javafx.scene.Node>) nodeList42);
        javafx.scene.Node[] nodeArray50 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList51 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList51, nodeArray50);
        java.lang.Object obj53 = null;
        boolean boolean54 = nodeList51.remove(obj53);
        boolean boolean55 = nodeList51.isEmpty();
        javafx.scene.Node[] nodeArray56 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList57 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList57, nodeArray56);
        Interface.WoodTable woodTable60 = null;
        Interface.WoodTotalValues woodTotalValues61 = null;
        Interface.AddWood addWood62 = null; // flaky: new Interface.AddWood(woodTable60, woodTotalValues61);
        java.util.ArrayList<javafx.scene.Node> nodeList63 = null; // flaky: addWood62.getAll();
        boolean boolean64 = false; // flaky: nodeList57.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList63);
        int int66 = nodeList57.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray68 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList69 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList69, nodeArray68);
        boolean boolean71 = nodeList69.isEmpty();
        int int73 = nodeList69.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable74 = null;
        Interface.WoodTotalValues woodTotalValues75 = null;
        Interface.AddWood addWood76 = null; // flaky: new Interface.AddWood(woodTable74, woodTotalValues75);
        java.util.ArrayList<javafx.scene.Node> nodeList77 = null; // flaky: addWood76.getAll();
        boolean boolean79 = false; // flaky: nodeList77.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node81 = null;
        javafx.scene.Node node82 = null; // flaky: nodeList77.set((int) (byte) 1, node81);
        boolean boolean83 = nodeList69.add(node82);
        javafx.scene.Node node84 = null; // flaky: nodeList57.set((int) (short) 0, node82);
        boolean boolean85 = nodeList51.add(node84);
        boolean boolean87 = nodeList51.remove((java.lang.Object) 100L);
        boolean boolean88 = nodeList42.remove((java.lang.Object) boolean87);
        boolean boolean89 = nodeList25.addAll((java.util.Collection<javafx.scene.Node>) nodeList42);
        boolean boolean90 = false; // flaky: nodeList4.equals((java.lang.Object) nodeList42);
        java.lang.Class<?> wildcardClass91 = null; // flaky: nodeList4.getClass();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(nodeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(nodeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
// flaky:         org.junit.Assert.assertNotNull(nodeList40);
        org.junit.Assert.assertNotNull(nodeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(nodeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(nodeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList63);
// flaky:         org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(nodeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
// flaky:         org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
// flaky:         org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
// flaky:         org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test756");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
        int int4 = 0; // flaky: nodeList2.indexOf((java.lang.Object) (byte) 0);
        java.lang.Object[] objArray5 = null; // flaky: nodeList2.toArray();
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        boolean boolean12 = false; // flaky: nodeList2.addAll((java.util.Collection<javafx.scene.Node>) nodeList9);
        javafx.scene.Node[] nodeArray13 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList14 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList14, nodeArray13);
        java.lang.Object obj16 = null;
        boolean boolean17 = nodeList14.remove(obj16);
        javafx.scene.Node[] nodeArray18 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList19 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList19, nodeArray18);
        boolean boolean21 = nodeList19.isEmpty();
        int int23 = nodeList19.lastIndexOf((java.lang.Object) 100);
        boolean boolean24 = nodeList19.isEmpty();
        nodeList19.clear();
        boolean boolean26 = nodeList14.removeAll((java.util.Collection<javafx.scene.Node>) nodeList19);
        Interface.WoodTable woodTable27 = null;
        Interface.WoodTotalValues woodTotalValues28 = null;
        Interface.AddWood addWood29 = null; // flaky: new Interface.AddWood(woodTable27, woodTotalValues28);
        java.util.ArrayList<javafx.scene.Node> nodeList30 = null; // flaky: addWood29.getAll();
// flaky:         addWood29.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood29.getAll();
        boolean boolean35 = false; // flaky: nodeList19.addAll((java.util.Collection<javafx.scene.Node>) nodeList34);
        javafx.scene.Node[] nodeArray36 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList37 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList37, nodeArray36);
        boolean boolean39 = nodeList37.isEmpty();
        boolean boolean40 = nodeList37.isEmpty();
        nodeList37.clear();
        boolean boolean42 = nodeList19.retainAll((java.util.Collection<javafx.scene.Node>) nodeList37);
        boolean boolean43 = false; // flaky: nodeList9.removeAll((java.util.Collection<javafx.scene.Node>) nodeList19);
// flaky:         nodeList9.clear();
        java.util.List<javafx.scene.Node> nodeList47 = null; // flaky: nodeList9.subList(0, (int) (byte) 0);
        boolean boolean48 = false; // flaky: nodeList47.isEmpty();
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
// flaky:         org.junit.Assert.assertNotNull(objArray5);
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(nodeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(nodeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList30);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(nodeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList47);
// flaky:         org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test757");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = nodeList18.remove(obj20);
        int int22 = nodeList18.size();
        javafx.scene.Node[] nodeArray23 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList24 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList24, nodeArray23);
        Interface.WoodTable woodTable27 = null;
        Interface.WoodTotalValues woodTotalValues28 = null;
        Interface.AddWood addWood29 = null; // flaky: new Interface.AddWood(woodTable27, woodTotalValues28);
        java.util.ArrayList<javafx.scene.Node> nodeList30 = null; // flaky: addWood29.getAll();
        boolean boolean31 = false; // flaky: nodeList24.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList30);
        boolean boolean32 = nodeList18.retainAll((java.util.Collection<javafx.scene.Node>) nodeList24);
        boolean boolean33 = nodeList12.removeAll((java.util.Collection<javafx.scene.Node>) nodeList24);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<javafx.scene.Node> nodeItor35 = nodeList12.listIterator((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(nodeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList30);
// flaky:         org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test758");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor8 = nodeList1.listIterator();
        int int9 = nodeList1.size();
        java.lang.Object[] objArray10 = nodeList1.toArray();
        Interface.WoodTable woodTable11 = null;
        Interface.WoodTotalValues woodTotalValues12 = null; // flaky: new Interface.WoodTotalValues(woodTable11);
        java.util.ArrayList<javafx.scene.Node> nodeList13 = null; // flaky: woodTotalValues12.getAll();
        boolean boolean14 = nodeList1.remove((java.lang.Object) woodTotalValues12);
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node16 = nodeList1.remove(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(nodeItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
// flaky:         org.junit.Assert.assertNotNull(nodeList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test759");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        javafx.scene.Node[] nodeArray14 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList15 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList15, nodeArray14);
        Interface.WoodTable woodTable18 = null;
        Interface.WoodTotalValues woodTotalValues19 = null;
        Interface.AddWood addWood20 = null; // flaky: new Interface.AddWood(woodTable18, woodTotalValues19);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood20.getAll();
        boolean boolean22 = false; // flaky: nodeList15.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList21);
        int int24 = nodeList15.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray25 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList26 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList26, nodeArray25);
        java.lang.Object obj28 = null;
        boolean boolean29 = nodeList26.remove(obj28);
        boolean boolean30 = nodeList26.isEmpty();
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.lang.String[] strArray34 = nodeList26.toArray(strArray33);
        boolean boolean35 = nodeList15.equals((java.lang.Object) strArray34);
        int int36 = 0; // flaky: nodeList4.lastIndexOf((java.lang.Object) boolean35);
        javafx.scene.Node[] nodeArray37 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList38 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList38, nodeArray37);
        Interface.WoodTable woodTable41 = null;
        Interface.WoodTotalValues woodTotalValues42 = null;
        Interface.AddWood addWood43 = null; // flaky: new Interface.AddWood(woodTable41, woodTotalValues42);
        java.util.ArrayList<javafx.scene.Node> nodeList44 = null; // flaky: addWood43.getAll();
        boolean boolean45 = false; // flaky: nodeList38.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList44);
        int int47 = nodeList38.indexOf((java.lang.Object) true);
        boolean boolean48 = false; // flaky: nodeList4.removeAll((java.util.Collection<javafx.scene.Node>) nodeList38);
        javafx.scene.Node[] nodeArray49 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList50 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList50, nodeArray49);
        java.lang.Object obj52 = null;
        boolean boolean53 = nodeList50.remove(obj52);
        javafx.scene.Node node54 = null;
        boolean boolean55 = nodeList50.add(node54);
        int int57 = nodeList50.indexOf((java.lang.Object) (short) 10);
        Interface.WoodTable woodTable58 = null;
        Interface.WoodTotalValues woodTotalValues59 = null;
        Interface.AddWood addWood60 = null; // flaky: new Interface.AddWood(woodTable58, woodTotalValues59);
        java.util.ArrayList<javafx.scene.Node> nodeList61 = null; // flaky: addWood60.getAll();
// flaky:         addWood60.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList65 = null; // flaky: addWood60.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList66 = null; // flaky: addWood60.getAll();
        javafx.scene.Node[] nodeArray67 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList68 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList68, nodeArray67);
        java.lang.Object obj70 = null;
        boolean boolean71 = nodeList68.remove(obj70);
        javafx.scene.Node node72 = null;
        boolean boolean73 = nodeList68.add(node72);
        java.util.ListIterator<javafx.scene.Node> nodeItor74 = nodeList68.listIterator();
        boolean boolean75 = false; // flaky: nodeList66.contains((java.lang.Object) nodeList68);
        java.util.ListIterator<javafx.scene.Node> nodeItor76 = nodeList68.listIterator();
        boolean boolean77 = nodeList50.remove((java.lang.Object) nodeList68);
        boolean boolean78 = false; // flaky: nodeList4.removeAll((java.util.Collection<javafx.scene.Node>) nodeList68);
        int int79 = nodeList68.size();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(nodeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(nodeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList44);
// flaky:         org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(nodeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList61);
// flaky:         org.junit.Assert.assertNotNull(nodeList65);
// flaky:         org.junit.Assert.assertNotNull(nodeList66);
        org.junit.Assert.assertNotNull(nodeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(nodeItor74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(nodeItor76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
    }

    @Test
    public void test760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test760");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        int int17 = 0; // flaky: nodeList7.size();
        javafx.scene.Node[] nodeArray18 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList19 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList19, nodeArray18);
        java.lang.Object obj21 = null;
        boolean boolean22 = nodeList19.remove(obj21);
        javafx.scene.Node node23 = null;
        boolean boolean24 = nodeList19.add(node23);
        java.util.ListIterator<javafx.scene.Node> nodeItor25 = nodeList19.listIterator();
        int int27 = nodeList19.lastIndexOf((java.lang.Object) (byte) 100);
        boolean boolean28 = false; // flaky: nodeList7.retainAll((java.util.Collection<javafx.scene.Node>) nodeList19);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertNotNull(nodeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(nodeItor25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test761");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues1.getAll();
        java.util.Iterator<javafx.scene.Node> nodeItor4 = null; // flaky: nodeList3.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor5 = null; // flaky: nodeList3.listIterator();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        boolean boolean9 = nodeList7.isEmpty();
        int int11 = nodeList7.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable12 = null;
        Interface.WoodTotalValues woodTotalValues13 = null;
        Interface.AddWood addWood14 = null; // flaky: new Interface.AddWood(woodTable12, woodTotalValues13);
        java.util.ArrayList<javafx.scene.Node> nodeList15 = null; // flaky: addWood14.getAll();
        boolean boolean17 = false; // flaky: nodeList15.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node19 = null;
        javafx.scene.Node node20 = null; // flaky: nodeList15.set((int) (byte) 1, node19);
        boolean boolean21 = nodeList7.add(node20);
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = nodeList23.remove(obj25);
        boolean boolean27 = nodeList7.retainAll((java.util.Collection<javafx.scene.Node>) nodeList23);
        javafx.scene.Node[] nodeArray28 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList29 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList29, nodeArray28);
        Interface.WoodTable woodTable32 = null;
        Interface.WoodTotalValues woodTotalValues33 = null;
        Interface.AddWood addWood34 = null; // flaky: new Interface.AddWood(woodTable32, woodTotalValues33);
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood34.getAll();
        boolean boolean36 = false; // flaky: nodeList29.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList35);
        java.util.stream.Stream<javafx.scene.Node> nodeStream37 = null; // flaky: nodeList35.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator38 = null; // flaky: nodeList35.spliterator();
        boolean boolean39 = false; // flaky: nodeList7.addAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        java.util.Iterator<javafx.scene.Node> nodeItor40 = null; // flaky: nodeList35.iterator();
        boolean boolean41 = false; // flaky: nodeList3.removeAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        java.util.Iterator<javafx.scene.Node> nodeItor42 = null; // flaky: nodeList35.iterator();
        Interface.WoodTable woodTable43 = null;
        Interface.WoodTotalValues woodTotalValues44 = null;
        Interface.AddWood addWood45 = null; // flaky: new Interface.AddWood(woodTable43, woodTotalValues44);
        java.util.ArrayList<javafx.scene.Node> nodeList46 = null; // flaky: addWood45.getAll();
        boolean boolean47 = false; // flaky: nodeList46.isEmpty();
        boolean boolean49 = false; // flaky: nodeList46.equals((java.lang.Object) 100);
        java.util.Iterator<javafx.scene.Node> nodeItor50 = null; // flaky: nodeList46.iterator();
        javafx.scene.Node[] nodeArray51 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList52 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList52, nodeArray51);
        boolean boolean54 = nodeList52.isEmpty();
        boolean boolean55 = nodeList52.isEmpty();
        nodeList52.clear();
        java.util.ListIterator<javafx.scene.Node> nodeItor58 = nodeList52.listIterator(0);
        Interface.WoodTable woodTable59 = null;
        Interface.WoodTotalValues woodTotalValues60 = null;
        Interface.AddWood addWood61 = null; // flaky: new Interface.AddWood(woodTable59, woodTotalValues60);
        java.util.ArrayList<javafx.scene.Node> nodeList62 = null; // flaky: addWood61.getAll();
        boolean boolean64 = false; // flaky: nodeList62.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node66 = null;
        javafx.scene.Node node67 = null; // flaky: nodeList62.set((int) (byte) 1, node66);
        javafx.css.Styleable[] styleableArray68 = new javafx.css.Styleable[] { node67 };
        Interface.WoodTable woodTable69 = null;
        Interface.WoodTotalValues woodTotalValues70 = null;
        Interface.AddWood addWood71 = null; // flaky: new Interface.AddWood(woodTable69, woodTotalValues70);
        java.util.ArrayList<javafx.scene.Node> nodeList72 = null; // flaky: addWood71.getAll();
        boolean boolean74 = false; // flaky: nodeList72.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node76 = null;
        javafx.scene.Node node77 = null; // flaky: nodeList72.set((int) (byte) 1, node76);
        javafx.css.Styleable[] styleableArray78 = new javafx.css.Styleable[] { node77 };
        javafx.css.Styleable[][] styleableArray79 = new javafx.css.Styleable[][] { styleableArray68, styleableArray78 };
        javafx.css.Styleable[][] styleableArray80 = nodeList52.toArray(styleableArray79);
        boolean boolean81 = false; // flaky: nodeList46.addAll((java.util.Collection<javafx.scene.Node>) nodeList52);
        java.lang.Object obj82 = null;
        int int83 = 0; // flaky: nodeList46.indexOf(obj82);
        boolean boolean84 = false; // flaky: nodeList35.addAll((java.util.Collection<javafx.scene.Node>) nodeList46);
        java.util.ListIterator<javafx.scene.Node> nodeItor85 = null; // flaky: nodeList35.listIterator();
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeItor4);
// flaky:         org.junit.Assert.assertNotNull(nodeItor5);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(nodeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream37);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator38);
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor42);
// flaky:         org.junit.Assert.assertNotNull(nodeList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor50);
        org.junit.Assert.assertNotNull(nodeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(nodeItor58);
// flaky:         org.junit.Assert.assertNotNull(nodeList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(styleableArray68);
// flaky:         org.junit.Assert.assertNotNull(nodeList72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
// flaky:         org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(styleableArray78);
        org.junit.Assert.assertNotNull(styleableArray79);
        org.junit.Assert.assertNotNull(styleableArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor85);
    }

    @Test
    public void test762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test762");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) 10.0f, (double) 0L);
// flaky:         addWood2.redraw((double) 'a', (double) 1);
// flaky:         addWood2.redraw((double) (short) 0, (double) 100);
        java.util.ArrayList<javafx.scene.Node> nodeList13 = null; // flaky: addWood2.getAll();
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
// flaky:         addWood16.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood16.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList22 = null; // flaky: addWood16.getAll();
        javafx.scene.Node[] nodeArray23 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList24 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList24, nodeArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = nodeList24.remove(obj26);
        javafx.scene.Node node28 = null;
        boolean boolean29 = nodeList24.add(node28);
        java.util.ListIterator<javafx.scene.Node> nodeItor30 = nodeList24.listIterator();
        boolean boolean31 = false; // flaky: nodeList22.contains((java.lang.Object) nodeList24);
        Interface.WoodTable woodTable32 = null;
        Interface.WoodTotalValues woodTotalValues33 = null;
        Interface.AddWood addWood34 = null; // flaky: new Interface.AddWood(woodTable32, woodTotalValues33);
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood34.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList36 = null; // flaky: addWood34.getAll();
        javafx.scene.Node[] nodeArray37 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList38 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList38, nodeArray37);
        boolean boolean40 = nodeList38.isEmpty();
        int int42 = nodeList38.lastIndexOf((java.lang.Object) 100);
        int int44 = nodeList38.lastIndexOf((java.lang.Object) 10);
        boolean boolean45 = false; // flaky: nodeList36.retainAll((java.util.Collection<javafx.scene.Node>) nodeList38);
        boolean boolean47 = false; // flaky: nodeList36.contains((java.lang.Object) false);
        Interface.WoodTable woodTable48 = null;
        Interface.WoodTotalValues woodTotalValues49 = null;
        Interface.AddWood addWood50 = null; // flaky: new Interface.AddWood(woodTable48, woodTotalValues49);
        java.util.ArrayList<javafx.scene.Node> nodeList51 = null; // flaky: addWood50.getAll();
        boolean boolean52 = false; // flaky: nodeList51.isEmpty();
        boolean boolean54 = false; // flaky: nodeList51.equals((java.lang.Object) 100);
        int int55 = 0; // flaky: nodeList36.lastIndexOf((java.lang.Object) nodeList51);
        java.lang.Object[] objArray56 = null; // flaky: nodeList36.toArray();
        int int58 = 0; // flaky: nodeList36.lastIndexOf((java.lang.Object) (short) 0);
        java.util.Iterator<javafx.scene.Node> nodeItor59 = null; // flaky: nodeList36.iterator();
        int int60 = 0; // flaky: nodeList22.lastIndexOf((java.lang.Object) nodeItor59);
        java.util.stream.Stream<javafx.scene.Node> nodeStream61 = null; // flaky: nodeList22.parallelStream();
        java.lang.Object[] objArray62 = null; // flaky: nodeList22.toArray();
        boolean boolean63 = false; // flaky: nodeList13.containsAll((java.util.Collection<javafx.scene.Node>) nodeList22);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList13);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertNotNull(nodeList22);
        org.junit.Assert.assertNotNull(nodeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(nodeItor30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertNotNull(nodeList36);
        org.junit.Assert.assertNotNull(nodeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
// flaky:         org.junit.Assert.assertNotNull(objArray56);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeItor59);
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeStream61);
// flaky:         org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test763");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        java.util.stream.Stream<javafx.scene.Node> nodeStream16 = nodeList1.parallelStream();
        nodeList1.clear();
        Interface.WoodTable woodTable18 = null;
        Interface.WoodTable woodTable19 = null;
        Interface.WoodTotalValues woodTotalValues20 = null; // flaky: new Interface.WoodTotalValues(woodTable19);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: woodTotalValues20.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList22 = null; // flaky: woodTotalValues20.getAll();
// flaky:         woodTotalValues20.redraw((double) (short) 100, 10.0d);
        Interface.AddWood addWood26 = null; // flaky: new Interface.AddWood(woodTable18, woodTotalValues20);
// flaky:         woodTotalValues20.redraw(10.0d, (double) 1.0f);
        java.util.ArrayList<javafx.scene.Node> nodeList30 = null; // flaky: woodTotalValues20.getAll();
        int int31 = nodeList1.indexOf((java.lang.Object) woodTotalValues20);
// flaky:         woodTotalValues20.redraw((double) 100L, 100.0d);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeStream16);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertNotNull(nodeList22);
// flaky:         org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test764");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean15 = false; // flaky: nodeList4.contains((java.lang.Object) false);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean20 = false; // flaky: nodeList19.isEmpty();
        boolean boolean22 = false; // flaky: nodeList19.equals((java.lang.Object) 100);
        int int23 = 0; // flaky: nodeList4.lastIndexOf((java.lang.Object) nodeList19);
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTable woodTable25 = null;
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTable woodTable27 = null;
        Interface.WoodTable woodTable28 = null;
        Interface.WoodTotalValues woodTotalValues29 = null; // flaky: new Interface.WoodTotalValues(woodTable28);
        Interface.AddWood addWood30 = null; // flaky: new Interface.AddWood(woodTable27, woodTotalValues29);
// flaky:         woodTotalValues29.redraw(0.0d, (double) 0L);
        Interface.AddWood addWood34 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues29);
        Interface.AddWood addWood35 = null; // flaky: new Interface.AddWood(woodTable25, woodTotalValues29);
        Interface.AddWood addWood36 = null; // flaky: new Interface.AddWood(woodTable24, woodTotalValues29);
        boolean boolean37 = false; // flaky: nodeList4.remove((java.lang.Object) addWood36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood36.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood36.getAll();
        javafx.scene.Node[] nodeArray40 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList41 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList41, nodeArray40);
        java.lang.Object obj43 = null;
        boolean boolean44 = nodeList41.remove(obj43);
        boolean boolean45 = nodeList41.isEmpty();
        java.lang.String[] strArray48 = new java.lang.String[] { "", "hi!" };
        java.lang.String[] strArray49 = nodeList41.toArray(strArray48);
        boolean boolean50 = false; // flaky: nodeList39.removeAll((java.util.Collection<javafx.scene.Node>) nodeList41);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
        org.junit.Assert.assertNotNull(nodeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test765");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues1.getAll();
        java.util.Iterator<javafx.scene.Node> nodeItor4 = null; // flaky: nodeList3.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor5 = null; // flaky: nodeList3.listIterator();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        boolean boolean9 = nodeList7.isEmpty();
        int int11 = nodeList7.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable12 = null;
        Interface.WoodTotalValues woodTotalValues13 = null;
        Interface.AddWood addWood14 = null; // flaky: new Interface.AddWood(woodTable12, woodTotalValues13);
        java.util.ArrayList<javafx.scene.Node> nodeList15 = null; // flaky: addWood14.getAll();
        boolean boolean17 = false; // flaky: nodeList15.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node19 = null;
        javafx.scene.Node node20 = null; // flaky: nodeList15.set((int) (byte) 1, node19);
        boolean boolean21 = nodeList7.add(node20);
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = nodeList23.remove(obj25);
        boolean boolean27 = nodeList7.retainAll((java.util.Collection<javafx.scene.Node>) nodeList23);
        javafx.scene.Node[] nodeArray28 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList29 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList29, nodeArray28);
        Interface.WoodTable woodTable32 = null;
        Interface.WoodTotalValues woodTotalValues33 = null;
        Interface.AddWood addWood34 = null; // flaky: new Interface.AddWood(woodTable32, woodTotalValues33);
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood34.getAll();
        boolean boolean36 = false; // flaky: nodeList29.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList35);
        java.util.stream.Stream<javafx.scene.Node> nodeStream37 = null; // flaky: nodeList35.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator38 = null; // flaky: nodeList35.spliterator();
        boolean boolean39 = false; // flaky: nodeList7.addAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        java.util.Iterator<javafx.scene.Node> nodeItor40 = null; // flaky: nodeList35.iterator();
        boolean boolean41 = false; // flaky: nodeList3.removeAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        javafx.scene.Node[] nodeArray42 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList43 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList43, nodeArray42);
        boolean boolean45 = nodeList43.isEmpty();
        int int47 = nodeList43.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable48 = null;
        Interface.WoodTotalValues woodTotalValues49 = null;
        Interface.AddWood addWood50 = null; // flaky: new Interface.AddWood(woodTable48, woodTotalValues49);
        java.util.ArrayList<javafx.scene.Node> nodeList51 = null; // flaky: addWood50.getAll();
        boolean boolean53 = false; // flaky: nodeList51.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node55 = null;
        javafx.scene.Node node56 = null; // flaky: nodeList51.set((int) (byte) 1, node55);
        boolean boolean57 = nodeList43.add(node56);
        java.util.stream.Stream<javafx.scene.Node> nodeStream58 = nodeList43.stream();
        javafx.scene.Node node59 = null;
        boolean boolean60 = nodeList43.add(node59);
        boolean boolean61 = false; // flaky: nodeList35.addAll((java.util.Collection<javafx.scene.Node>) nodeList43);
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeItor4);
// flaky:         org.junit.Assert.assertNotNull(nodeItor5);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(nodeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream37);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator38);
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(nodeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
// flaky:         org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(nodeStream58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test766");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        boolean boolean33 = false; // flaky: nodeList7.add(node31);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        java.util.stream.Stream<javafx.scene.Node> nodeStream43 = null; // flaky: nodeList41.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator44 = null; // flaky: nodeList41.spliterator();
        javafx.scene.Node[] nodeArray45 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList46 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList46, nodeArray45);
        boolean boolean48 = nodeList46.isEmpty();
        int int50 = nodeList46.lastIndexOf((java.lang.Object) 100);
        boolean boolean51 = nodeList46.isEmpty();
        boolean boolean52 = false; // flaky: nodeList41.contains((java.lang.Object) boolean51);
        boolean boolean53 = false; // flaky: nodeList7.addAll((java.util.Collection<javafx.scene.Node>) nodeList41);
        int int54 = 0; // flaky: nodeList7.size();
        Interface.WoodTable woodTable55 = null;
        Interface.WoodTotalValues woodTotalValues56 = null;
        Interface.AddWood addWood57 = null; // flaky: new Interface.AddWood(woodTable55, woodTotalValues56);
        java.util.ArrayList<javafx.scene.Node> nodeList58 = null; // flaky: addWood57.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList59 = null; // flaky: addWood57.getAll();
        javafx.scene.Node[] nodeArray60 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList61 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList61, nodeArray60);
        boolean boolean63 = nodeList61.isEmpty();
        int int65 = nodeList61.lastIndexOf((java.lang.Object) 100);
        int int67 = nodeList61.lastIndexOf((java.lang.Object) 10);
        boolean boolean68 = false; // flaky: nodeList59.retainAll((java.util.Collection<javafx.scene.Node>) nodeList61);
        boolean boolean70 = false; // flaky: nodeList59.contains((java.lang.Object) false);
        Interface.WoodTable woodTable71 = null;
        Interface.WoodTotalValues woodTotalValues72 = null;
        Interface.AddWood addWood73 = null; // flaky: new Interface.AddWood(woodTable71, woodTotalValues72);
        java.util.ArrayList<javafx.scene.Node> nodeList74 = null; // flaky: addWood73.getAll();
        boolean boolean75 = false; // flaky: nodeList74.isEmpty();
        boolean boolean77 = false; // flaky: nodeList74.equals((java.lang.Object) 100);
        int int78 = 0; // flaky: nodeList59.lastIndexOf((java.lang.Object) nodeList74);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator79 = null; // flaky: nodeList74.spliterator();
        boolean boolean80 = false; // flaky: nodeList7.remove((java.lang.Object) nodeList74);
        java.util.ListIterator<javafx.scene.Node> nodeItor81 = null; // flaky: nodeList7.listIterator();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream43);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertNotNull(nodeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 11 + "'", int54 == 11);
// flaky:         org.junit.Assert.assertNotNull(nodeList58);
// flaky:         org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertNotNull(nodeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor81);
    }

    @Test
    public void test767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test767");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) 10.0f, (double) 0L);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood2.getAll();
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList8.parallelStream();
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        boolean boolean13 = nodeList11.isEmpty();
        int int15 = nodeList11.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean21 = false; // flaky: nodeList19.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node23 = null;
        javafx.scene.Node node24 = null; // flaky: nodeList19.set((int) (byte) 1, node23);
        boolean boolean25 = nodeList11.add(node24);
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = nodeList27.remove(obj29);
        boolean boolean31 = nodeList11.retainAll((java.util.Collection<javafx.scene.Node>) nodeList27);
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        java.lang.Object obj35 = null;
        boolean boolean36 = nodeList33.remove(obj35);
        javafx.scene.Node node37 = null;
        boolean boolean38 = nodeList33.add(node37);
        boolean boolean39 = nodeList27.equals((java.lang.Object) boolean38);
        boolean boolean40 = false; // flaky: nodeList8.removeAll((java.util.Collection<javafx.scene.Node>) nodeList27);
        javafx.scene.Node[] nodeArray41 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList42 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList42, nodeArray41);
        java.lang.Object obj44 = null;
        boolean boolean45 = nodeList42.remove(obj44);
        int int46 = nodeList42.size();
        boolean boolean47 = nodeList27.contains((java.lang.Object) nodeList42);
        Interface.WoodTable woodTable48 = null;
        Interface.WoodTotalValues woodTotalValues49 = null;
        Interface.AddWood addWood50 = null; // flaky: new Interface.AddWood(woodTable48, woodTotalValues49);
        java.util.ArrayList<javafx.scene.Node> nodeList51 = null; // flaky: addWood50.getAll();
// flaky:         addWood50.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList55 = null; // flaky: addWood50.getAll();
        int int56 = nodeList27.indexOf((java.lang.Object) addWood50);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(nodeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList51);
// flaky:         org.junit.Assert.assertNotNull(nodeList55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test768");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        javafx.scene.Node[] nodeArray12 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList13 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList13, nodeArray12);
        boolean boolean15 = nodeList13.isEmpty();
        int int17 = nodeList13.lastIndexOf((java.lang.Object) 100);
        int int19 = nodeList13.lastIndexOf((java.lang.Object) 10);
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        boolean boolean23 = nodeList21.isEmpty();
        int int25 = nodeList21.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        boolean boolean31 = false; // flaky: nodeList29.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node33 = null;
        javafx.scene.Node node34 = null; // flaky: nodeList29.set((int) (byte) 1, node33);
        boolean boolean35 = nodeList21.add(node34);
        java.util.stream.Stream<javafx.scene.Node> nodeStream36 = nodeList21.stream();
        javafx.scene.Node node37 = null;
        boolean boolean38 = nodeList21.add(node37);
        boolean boolean39 = nodeList13.retainAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        boolean boolean40 = nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList13);
        boolean boolean41 = false; // flaky: nodeList4.containsAll((java.util.Collection<javafx.scene.Node>) nodeList13);
        javafx.scene.Node[] nodeArray43 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList44 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList44, nodeArray43);
        Interface.WoodTable woodTable47 = null;
        Interface.WoodTotalValues woodTotalValues48 = null;
        Interface.AddWood addWood49 = null; // flaky: new Interface.AddWood(woodTable47, woodTotalValues48);
        java.util.ArrayList<javafx.scene.Node> nodeList50 = null; // flaky: addWood49.getAll();
        boolean boolean51 = false; // flaky: nodeList44.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList50);
        javafx.scene.Node[] nodeArray53 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList54 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList54, nodeArray53);
        boolean boolean56 = nodeList54.isEmpty();
        int int58 = nodeList54.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable59 = null;
        Interface.WoodTotalValues woodTotalValues60 = null;
        Interface.AddWood addWood61 = null; // flaky: new Interface.AddWood(woodTable59, woodTotalValues60);
        java.util.ArrayList<javafx.scene.Node> nodeList62 = null; // flaky: addWood61.getAll();
        boolean boolean64 = false; // flaky: nodeList62.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node66 = null;
        javafx.scene.Node node67 = null; // flaky: nodeList62.set((int) (byte) 1, node66);
        boolean boolean68 = nodeList54.add(node67);
// flaky:         nodeList44.add(1, node67);
        // The following exception was thrown during execution in test generation
        try {
            nodeList13.add(100, node67);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(nodeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(nodeStream36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(nodeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList50);
// flaky:         org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(nodeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test769");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = nodeList6.remove(obj8);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        boolean boolean18 = false; // flaky: nodeList11.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList17);
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        boolean boolean23 = nodeList21.isEmpty();
        int int25 = nodeList21.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        boolean boolean31 = false; // flaky: nodeList29.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node33 = null;
        javafx.scene.Node node34 = null; // flaky: nodeList29.set((int) (byte) 1, node33);
        boolean boolean35 = nodeList21.add(node34);
// flaky:         nodeList11.add(1, node34);
        boolean boolean37 = nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList11);
        boolean boolean38 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList11);
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        boolean boolean42 = nodeList40.isEmpty();
        int int44 = nodeList40.lastIndexOf((java.lang.Object) 100);
        boolean boolean45 = nodeList40.isEmpty();
        nodeList40.clear();
        boolean boolean47 = nodeList11.addAll((java.util.Collection<javafx.scene.Node>) nodeList40);
        java.lang.Object obj48 = null;
        boolean boolean49 = nodeList11.remove(obj48);
        javafx.scene.Node[] nodeArray50 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList51 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList51, nodeArray50);
        boolean boolean53 = nodeList51.isEmpty();
        int int55 = nodeList51.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable56 = null;
        Interface.WoodTotalValues woodTotalValues57 = null;
        Interface.AddWood addWood58 = null; // flaky: new Interface.AddWood(woodTable56, woodTotalValues57);
        java.util.ArrayList<javafx.scene.Node> nodeList59 = null; // flaky: addWood58.getAll();
        boolean boolean61 = false; // flaky: nodeList59.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node63 = null;
        javafx.scene.Node node64 = null; // flaky: nodeList59.set((int) (byte) 1, node63);
        boolean boolean65 = nodeList51.add(node64);
        javafx.scene.Node[] nodeArray66 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList67 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList67, nodeArray66);
        java.lang.Object obj69 = null;
        boolean boolean70 = nodeList67.remove(obj69);
        boolean boolean71 = nodeList51.retainAll((java.util.Collection<javafx.scene.Node>) nodeList67);
        javafx.scene.Node[] nodeArray72 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList73 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList73, nodeArray72);
        Interface.WoodTable woodTable76 = null;
        Interface.WoodTotalValues woodTotalValues77 = null;
        Interface.AddWood addWood78 = null; // flaky: new Interface.AddWood(woodTable76, woodTotalValues77);
        java.util.ArrayList<javafx.scene.Node> nodeList79 = null; // flaky: addWood78.getAll();
        boolean boolean80 = false; // flaky: nodeList73.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList79);
        java.util.stream.Stream<javafx.scene.Node> nodeStream81 = null; // flaky: nodeList79.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator82 = null; // flaky: nodeList79.spliterator();
        boolean boolean83 = false; // flaky: nodeList51.addAll((java.util.Collection<javafx.scene.Node>) nodeList79);
        boolean boolean84 = nodeList11.removeAll((java.util.Collection<javafx.scene.Node>) nodeList51);
        nodeList51.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<javafx.scene.Node> nodeList88 = nodeList51.subList(10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(nodeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
// flaky:         org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(nodeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(nodeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList79);
// flaky:         org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream81);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator82);
// flaky:         org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test770");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean15 = false; // flaky: nodeList4.contains((java.lang.Object) false);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean20 = false; // flaky: nodeList19.isEmpty();
        boolean boolean22 = false; // flaky: nodeList19.equals((java.lang.Object) 100);
        int int23 = 0; // flaky: nodeList4.lastIndexOf((java.lang.Object) nodeList19);
        javafx.scene.Node[] nodeArray24 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList25 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList25, nodeArray24);
        boolean boolean27 = nodeList25.isEmpty();
        Interface.WoodTable woodTable28 = null;
        Interface.WoodTotalValues woodTotalValues29 = null;
        Interface.AddWood addWood30 = null; // flaky: new Interface.AddWood(woodTable28, woodTotalValues29);
        java.util.ArrayList<javafx.scene.Node> nodeList31 = null; // flaky: addWood30.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood30.getAll();
        javafx.scene.Node[] nodeArray33 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList34 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList34, nodeArray33);
        boolean boolean36 = nodeList34.isEmpty();
        int int38 = nodeList34.lastIndexOf((java.lang.Object) 100);
        int int40 = nodeList34.lastIndexOf((java.lang.Object) 10);
        boolean boolean41 = false; // flaky: nodeList32.retainAll((java.util.Collection<javafx.scene.Node>) nodeList34);
        boolean boolean42 = false; // flaky: nodeList25.removeAll((java.util.Collection<javafx.scene.Node>) nodeList32);
        javafx.scene.Node[] nodeArray43 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList44 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList44, nodeArray43);
        Interface.WoodTable woodTable47 = null;
        Interface.WoodTotalValues woodTotalValues48 = null;
        Interface.AddWood addWood49 = null; // flaky: new Interface.AddWood(woodTable47, woodTotalValues48);
        java.util.ArrayList<javafx.scene.Node> nodeList50 = null; // flaky: addWood49.getAll();
        boolean boolean51 = false; // flaky: nodeList44.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList50);
        java.util.stream.Stream<javafx.scene.Node> nodeStream52 = null; // flaky: nodeList50.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator53 = null; // flaky: nodeList50.spliterator();
        int int54 = 0; // flaky: nodeList32.indexOf((java.lang.Object) nodeList50);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator55 = null; // flaky: nodeList32.spliterator();
        boolean boolean56 = false; // flaky: nodeList4.removeAll((java.util.Collection<javafx.scene.Node>) nodeList32);
        Interface.WoodTable woodTable57 = null;
        Interface.WoodTotalValues woodTotalValues58 = null;
        Interface.AddWood addWood59 = null; // flaky: new Interface.AddWood(woodTable57, woodTotalValues58);
        java.util.ArrayList<javafx.scene.Node> nodeList60 = null; // flaky: addWood59.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList61 = null; // flaky: addWood59.getAll();
        javafx.scene.Node[] nodeArray62 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList63 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList63, nodeArray62);
        java.lang.Object obj65 = null;
        boolean boolean66 = nodeList63.remove(obj65);
        javafx.scene.Node[] nodeArray67 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList68 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList68, nodeArray67);
        boolean boolean70 = nodeList68.isEmpty();
        int int72 = nodeList68.lastIndexOf((java.lang.Object) 100);
        boolean boolean73 = nodeList68.isEmpty();
        nodeList68.clear();
        boolean boolean75 = nodeList63.removeAll((java.util.Collection<javafx.scene.Node>) nodeList68);
        boolean boolean76 = nodeList63.isEmpty();
        java.util.Iterator<javafx.scene.Node> nodeItor77 = nodeList63.iterator();
        java.lang.Object[] objArray78 = nodeList63.toArray();
        int int79 = 0; // flaky: nodeList61.lastIndexOf((java.lang.Object) nodeList63);
        java.util.ListIterator<javafx.scene.Node> nodeItor80 = null; // flaky: nodeList61.listIterator();
        boolean boolean81 = false; // flaky: nodeList4.remove((java.lang.Object) nodeList61);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(nodeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList31);
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertNotNull(nodeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(nodeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList50);
// flaky:         org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream52);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator53);
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList60);
// flaky:         org.junit.Assert.assertNotNull(nodeList61);
        org.junit.Assert.assertNotNull(nodeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(nodeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(nodeItor77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
// flaky:         org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeItor80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test771");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        boolean boolean33 = false; // flaky: nodeList7.add(node31);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        boolean boolean37 = nodeList35.isEmpty();
        int int39 = nodeList35.lastIndexOf((java.lang.Object) 100);
        int int41 = nodeList35.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor42 = nodeList35.listIterator();
        int int43 = nodeList35.size();
        boolean boolean44 = nodeList35.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream45 = nodeList35.parallelStream();
        javafx.scene.Node[] nodeArray46 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList47 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList47, nodeArray46);
        boolean boolean49 = nodeList47.isEmpty();
        int int51 = nodeList47.lastIndexOf((java.lang.Object) 100);
        int int53 = nodeList47.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable54 = null;
        Interface.WoodTotalValues woodTotalValues55 = null;
        Interface.AddWood addWood56 = null; // flaky: new Interface.AddWood(woodTable54, woodTotalValues55);
        java.util.ArrayList<javafx.scene.Node> nodeList57 = null; // flaky: addWood56.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList58 = null; // flaky: addWood56.getAll();
        javafx.scene.Node[] nodeArray59 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList60 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList60, nodeArray59);
        boolean boolean62 = nodeList60.isEmpty();
        int int64 = nodeList60.lastIndexOf((java.lang.Object) 100);
        int int66 = nodeList60.lastIndexOf((java.lang.Object) 10);
        boolean boolean67 = false; // flaky: nodeList58.retainAll((java.util.Collection<javafx.scene.Node>) nodeList60);
        boolean boolean68 = nodeList47.containsAll((java.util.Collection<javafx.scene.Node>) nodeList60);
        Interface.WoodTable woodTable69 = null;
        Interface.WoodTotalValues woodTotalValues70 = null;
        Interface.AddWood addWood71 = null; // flaky: new Interface.AddWood(woodTable69, woodTotalValues70);
        java.util.ArrayList<javafx.scene.Node> nodeList72 = null; // flaky: addWood71.getAll();
        boolean boolean74 = false; // flaky: nodeList72.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node76 = null;
        javafx.scene.Node node77 = null; // flaky: nodeList72.set((int) (byte) 1, node76);
        boolean boolean78 = false; // flaky: nodeList47.removeAll((java.util.Collection<javafx.scene.Node>) nodeList72);
        int int79 = nodeList35.lastIndexOf((java.lang.Object) nodeList47);
        Interface.WoodTable woodTable80 = null;
        Interface.WoodTotalValues woodTotalValues81 = null; // flaky: new Interface.WoodTotalValues(woodTable80);
        java.util.ArrayList<javafx.scene.Node> nodeList82 = null; // flaky: woodTotalValues81.getAll();
        int int83 = nodeList47.lastIndexOf((java.lang.Object) woodTotalValues81);
        java.util.ArrayList<javafx.scene.Node> nodeList84 = null; // flaky: woodTotalValues81.getAll();
// flaky:         woodTotalValues81.redraw((double) 1L, (double) (short) 10);
        java.lang.Class<?> wildcardClass88 = null; // flaky: woodTotalValues81.getClass();
        boolean boolean89 = false; // flaky: nodeList7.equals((java.lang.Object) wildcardClass88);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(nodeItor42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(nodeStream45);
        org.junit.Assert.assertNotNull(nodeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList57);
// flaky:         org.junit.Assert.assertNotNull(nodeList58);
        org.junit.Assert.assertNotNull(nodeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
// flaky:         org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList84);
// flaky:         org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test772");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues2.getAll();
        Interface.AddWood addWood4 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: addWood4.getAll();
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean10 = false; // flaky: nodeList9.isEmpty();
        javafx.scene.Node[] nodeArray12 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList13 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList13, nodeArray12);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean20 = false; // flaky: nodeList13.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList19);
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        boolean boolean25 = nodeList23.isEmpty();
        int int27 = nodeList23.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable28 = null;
        Interface.WoodTotalValues woodTotalValues29 = null;
        Interface.AddWood addWood30 = null; // flaky: new Interface.AddWood(woodTable28, woodTotalValues29);
        java.util.ArrayList<javafx.scene.Node> nodeList31 = null; // flaky: addWood30.getAll();
        boolean boolean33 = false; // flaky: nodeList31.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node35 = null;
        javafx.scene.Node node36 = null; // flaky: nodeList31.set((int) (byte) 1, node35);
        boolean boolean37 = nodeList23.add(node36);
// flaky:         nodeList13.add(1, node36);
        javafx.scene.Node node39 = null; // flaky: nodeList9.set(0, node36);
        java.util.ListIterator<javafx.scene.Node> nodeItor40 = null; // flaky: nodeList9.listIterator();
        boolean boolean41 = false; // flaky: nodeList5.addAll((java.util.Collection<javafx.scene.Node>) nodeList9);
        Interface.WoodTable woodTable42 = null;
        Interface.WoodTotalValues woodTotalValues43 = null;
        Interface.AddWood addWood44 = null; // flaky: new Interface.AddWood(woodTable42, woodTotalValues43);
        java.util.ArrayList<javafx.scene.Node> nodeList45 = null; // flaky: addWood44.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList46 = null; // flaky: addWood44.getAll();
        javafx.scene.Node[] nodeArray47 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList48 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList48, nodeArray47);
        boolean boolean50 = nodeList48.isEmpty();
        int int52 = nodeList48.lastIndexOf((java.lang.Object) 100);
        int int54 = nodeList48.lastIndexOf((java.lang.Object) 10);
        boolean boolean55 = false; // flaky: nodeList46.retainAll((java.util.Collection<javafx.scene.Node>) nodeList48);
        boolean boolean57 = false; // flaky: nodeList46.contains((java.lang.Object) false);
        Interface.WoodTable woodTable58 = null;
        Interface.WoodTotalValues woodTotalValues59 = null;
        Interface.AddWood addWood60 = null; // flaky: new Interface.AddWood(woodTable58, woodTotalValues59);
        java.util.ArrayList<javafx.scene.Node> nodeList61 = null; // flaky: addWood60.getAll();
        boolean boolean62 = false; // flaky: nodeList61.isEmpty();
        boolean boolean64 = false; // flaky: nodeList61.equals((java.lang.Object) 100);
        int int65 = 0; // flaky: nodeList46.lastIndexOf((java.lang.Object) nodeList61);
        java.lang.Object[] objArray66 = null; // flaky: nodeList46.toArray();
        int int68 = 0; // flaky: nodeList46.lastIndexOf((java.lang.Object) (short) 0);
        java.util.Iterator<javafx.scene.Node> nodeItor69 = null; // flaky: nodeList46.iterator();
        boolean boolean70 = false; // flaky: nodeList9.removeAll((java.util.Collection<javafx.scene.Node>) nodeList46);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(nodeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
// flaky:         org.junit.Assert.assertNotNull(node39);
// flaky:         org.junit.Assert.assertNotNull(nodeItor40);
// flaky:         org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList45);
// flaky:         org.junit.Assert.assertNotNull(nodeList46);
        org.junit.Assert.assertNotNull(nodeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
// flaky:         org.junit.Assert.assertNotNull(objArray66);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test773");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
// flaky:         addWood16.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood16.getAll();
        boolean boolean22 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        java.lang.Object[] objArray23 = nodeList6.toArray();
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTotalValues woodTotalValues25 = null;
        Interface.AddWood addWood26 = null; // flaky: new Interface.AddWood(woodTable24, woodTotalValues25);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood26.getAll();
// flaky:         addWood26.redraw((double) 10.0f, (double) (-1L));
        java.util.ArrayList<javafx.scene.Node> nodeList31 = null; // flaky: addWood26.getAll();
        int int32 = nodeList6.lastIndexOf((java.lang.Object) addWood26);
        java.util.Iterator<javafx.scene.Node> nodeItor33 = nodeList6.iterator();
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        Interface.WoodTable woodTable43 = null;
        Interface.WoodTotalValues woodTotalValues44 = null;
        Interface.AddWood addWood45 = null; // flaky: new Interface.AddWood(woodTable43, woodTotalValues44);
        java.util.ArrayList<javafx.scene.Node> nodeList46 = null; // flaky: addWood45.getAll();
        boolean boolean47 = false; // flaky: nodeList46.isEmpty();
        boolean boolean48 = false; // flaky: nodeList35.removeAll((java.util.Collection<javafx.scene.Node>) nodeList46);
        java.util.ListIterator<javafx.scene.Node> nodeItor50 = null; // flaky: nodeList35.listIterator(2);
        boolean boolean51 = nodeList6.remove((java.lang.Object) nodeList35);
        java.util.stream.Stream<javafx.scene.Node> nodeStream52 = nodeList6.stream();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objArray23);
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
// flaky:         org.junit.Assert.assertNotNull(nodeList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(nodeItor33);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(nodeStream52);
    }

    @Test
    public void test774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test774");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator9 = nodeList1.spliterator();
        boolean boolean10 = nodeList1.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<javafx.scene.Node> nodeItor12 = nodeList1.listIterator((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
// flaky:         org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test775");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: woodTotalValues2.getAll();
// flaky:         woodTotalValues2.redraw((double) '#', (double) (-1L));
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
    }

    @Test
    public void test776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test776");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood2.getAll();
        boolean boolean9 = false; // flaky: nodeList8.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream10 = null; // flaky: nodeList8.parallelStream();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeStream10);
    }

    @Test
    public void test777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test777");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        javafx.scene.Node[] nodeArray16 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList17 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList17, nodeArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = nodeList17.remove(obj19);
        boolean boolean21 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList17);
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        boolean boolean30 = false; // flaky: nodeList23.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList29);
        java.util.stream.Stream<javafx.scene.Node> nodeStream31 = null; // flaky: nodeList29.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator32 = null; // flaky: nodeList29.spliterator();
        boolean boolean33 = false; // flaky: nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList29);
// flaky:         nodeList29.clear();
        java.lang.Object[] objArray35 = null; // flaky: nodeList29.toArray();
        javafx.scene.Node[] nodeArray36 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList37 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList37, nodeArray36);
        Interface.WoodTable woodTable40 = null;
        Interface.WoodTotalValues woodTotalValues41 = null;
        Interface.AddWood addWood42 = null; // flaky: new Interface.AddWood(woodTable40, woodTotalValues41);
        java.util.ArrayList<javafx.scene.Node> nodeList43 = null; // flaky: addWood42.getAll();
        boolean boolean44 = false; // flaky: nodeList37.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList43);
        javafx.scene.Node[] nodeArray46 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList47 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList47, nodeArray46);
        boolean boolean49 = nodeList47.isEmpty();
        int int51 = nodeList47.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable52 = null;
        Interface.WoodTotalValues woodTotalValues53 = null;
        Interface.AddWood addWood54 = null; // flaky: new Interface.AddWood(woodTable52, woodTotalValues53);
        java.util.ArrayList<javafx.scene.Node> nodeList55 = null; // flaky: addWood54.getAll();
        boolean boolean57 = false; // flaky: nodeList55.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node59 = null;
        javafx.scene.Node node60 = null; // flaky: nodeList55.set((int) (byte) 1, node59);
        boolean boolean61 = nodeList47.add(node60);
// flaky:         nodeList37.add(1, node60);
        java.lang.Object[] objArray63 = nodeList37.toArray();
        Interface.WoodTable woodTable64 = null;
        Interface.WoodTable woodTable65 = null;
        Interface.WoodTotalValues woodTotalValues66 = null; // flaky: new Interface.WoodTotalValues(woodTable65);
        java.util.ArrayList<javafx.scene.Node> nodeList67 = null; // flaky: woodTotalValues66.getAll();
        Interface.AddWood addWood68 = null; // flaky: new Interface.AddWood(woodTable64, woodTotalValues66);
        java.util.ArrayList<javafx.scene.Node> nodeList69 = null; // flaky: addWood68.getAll();
        boolean boolean70 = false; // flaky: nodeList37.addAll((java.util.Collection<javafx.scene.Node>) nodeList69);
        boolean boolean71 = false; // flaky: nodeList29.containsAll((java.util.Collection<javafx.scene.Node>) nodeList69);
        java.util.stream.Stream<javafx.scene.Node> nodeStream72 = null; // flaky: nodeList69.stream();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
// flaky:         org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream31);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator32);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertNotNull(objArray35);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(nodeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList43);
// flaky:         org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(nodeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objArray63);
// flaky:         org.junit.Assert.assertNotNull(nodeList67);
// flaky:         org.junit.Assert.assertNotNull(nodeList69);
// flaky:         org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeStream72);
    }

    @Test
    public void test778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test778");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        boolean boolean33 = false; // flaky: nodeList7.add(node31);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        java.util.stream.Stream<javafx.scene.Node> nodeStream43 = null; // flaky: nodeList41.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator44 = null; // flaky: nodeList41.spliterator();
        javafx.scene.Node[] nodeArray45 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList46 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList46, nodeArray45);
        boolean boolean48 = nodeList46.isEmpty();
        int int50 = nodeList46.lastIndexOf((java.lang.Object) 100);
        boolean boolean51 = nodeList46.isEmpty();
        boolean boolean52 = false; // flaky: nodeList41.contains((java.lang.Object) boolean51);
        boolean boolean53 = false; // flaky: nodeList7.addAll((java.util.Collection<javafx.scene.Node>) nodeList41);
        boolean boolean54 = false; // flaky: nodeList7.isEmpty();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream43);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertNotNull(nodeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test779");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
        Interface.AddWood addWood3 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
// flaky:         woodTotalValues2.redraw(0.0d, (double) 0L);
// flaky:         woodTotalValues2.redraw((double) (byte) -1, 100.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList10 = null; // flaky: woodTotalValues2.getAll();
        // The following exception was thrown during execution in test generation
        try {
            woodTotalValues2.renew();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList10);
    }

    @Test
    public void test780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test780");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        Interface.WoodTable woodTable9 = null;
        Interface.WoodTotalValues woodTotalValues10 = null;
        Interface.AddWood addWood11 = null; // flaky: new Interface.AddWood(woodTable9, woodTotalValues10);
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: addWood11.getAll();
        boolean boolean13 = false; // flaky: nodeList12.isEmpty();
        boolean boolean14 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        java.util.ListIterator<javafx.scene.Node> nodeItor16 = null; // flaky: nodeList1.listIterator(2);
        java.util.stream.Stream<javafx.scene.Node> nodeStream17 = nodeList1.parallelStream();
        javafx.scene.Node[] nodeArray18 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList19 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList19, nodeArray18);
        boolean boolean21 = nodeList19.isEmpty();
        int int23 = nodeList19.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable24 = null;
        Interface.WoodTotalValues woodTotalValues25 = null;
        Interface.AddWood addWood26 = null; // flaky: new Interface.AddWood(woodTable24, woodTotalValues25);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood26.getAll();
        boolean boolean29 = false; // flaky: nodeList27.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node31 = null;
        javafx.scene.Node node32 = null; // flaky: nodeList27.set((int) (byte) 1, node31);
        boolean boolean33 = nodeList19.add(node32);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = nodeList35.remove(obj37);
        boolean boolean39 = nodeList19.retainAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        javafx.scene.Node[] nodeArray40 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList41 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList41, nodeArray40);
        boolean boolean43 = nodeList41.isEmpty();
        int int45 = nodeList41.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable46 = null;
        Interface.WoodTotalValues woodTotalValues47 = null;
        Interface.AddWood addWood48 = null; // flaky: new Interface.AddWood(woodTable46, woodTotalValues47);
        java.util.ArrayList<javafx.scene.Node> nodeList49 = null; // flaky: addWood48.getAll();
        boolean boolean51 = false; // flaky: nodeList49.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node53 = null;
        javafx.scene.Node node54 = null; // flaky: nodeList49.set((int) (byte) 1, node53);
        boolean boolean55 = nodeList41.add(node54);
        java.util.stream.Stream<javafx.scene.Node> nodeStream56 = nodeList41.stream();
        boolean boolean57 = nodeList19.equals((java.lang.Object) nodeList41);
        Interface.WoodTable woodTable58 = null;
        Interface.WoodTotalValues woodTotalValues59 = null; // flaky: new Interface.WoodTotalValues(woodTable58);
        java.util.ArrayList<javafx.scene.Node> nodeList60 = null; // flaky: woodTotalValues59.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList61 = null; // flaky: woodTotalValues59.getAll();
        boolean boolean62 = nodeList19.contains((java.lang.Object) nodeList61);
        java.util.Iterator<javafx.scene.Node> nodeItor63 = nodeList19.iterator();
        boolean boolean64 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList19);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor16);
        org.junit.Assert.assertNotNull(nodeStream17);
        org.junit.Assert.assertNotNull(nodeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(nodeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
// flaky:         org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(nodeStream56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList60);
// flaky:         org.junit.Assert.assertNotNull(nodeList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(nodeItor63);
// flaky:         org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test781");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        java.util.stream.Stream<javafx.scene.Node> nodeStream16 = nodeList1.parallelStream();
        nodeList1.clear();
        Interface.WoodTable woodTable18 = null;
        Interface.WoodTable woodTable19 = null;
        Interface.WoodTable woodTable20 = null;
        Interface.WoodTotalValues woodTotalValues21 = null; // flaky: new Interface.WoodTotalValues(woodTable20);
        java.util.ArrayList<javafx.scene.Node> nodeList22 = null; // flaky: woodTotalValues21.getAll();
        Interface.AddWood addWood23 = null; // flaky: new Interface.AddWood(woodTable19, woodTotalValues21);
        Interface.AddWood addWood24 = null; // flaky: new Interface.AddWood(woodTable18, woodTotalValues21);
        java.util.ArrayList<javafx.scene.Node> nodeList25 = null; // flaky: addWood24.getAll();
        boolean boolean26 = nodeList1.contains((java.lang.Object) nodeList25);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(nodeStream16);
// flaky:         org.junit.Assert.assertNotNull(nodeList22);
// flaky:         org.junit.Assert.assertNotNull(nodeList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test782");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList1.equals((java.lang.Object) nodeList6);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator12 = nodeList1.spliterator();
        java.lang.Class<?> wildcardClass13 = nodeList1.getClass();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test783");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        boolean boolean4 = false; // flaky: nodeList3.isEmpty();
        boolean boolean6 = false; // flaky: nodeList3.equals((java.lang.Object) 100);
        java.util.Iterator<javafx.scene.Node> nodeItor7 = null; // flaky: nodeList3.iterator();
        javafx.scene.Node[] nodeArray8 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList9 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList9, nodeArray8);
        Interface.WoodTable woodTable12 = null;
        Interface.WoodTotalValues woodTotalValues13 = null;
        Interface.AddWood addWood14 = null; // flaky: new Interface.AddWood(woodTable12, woodTotalValues13);
        java.util.ArrayList<javafx.scene.Node> nodeList15 = null; // flaky: addWood14.getAll();
        boolean boolean16 = false; // flaky: nodeList9.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList15);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator17 = nodeList9.spliterator();
        boolean boolean18 = nodeList9.isEmpty();
        boolean boolean19 = false; // flaky: nodeList3.contains((java.lang.Object) nodeList9);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor7);
        org.junit.Assert.assertNotNull(nodeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList15);
// flaky:         org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator17);
// flaky:         org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test784");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean15 = false; // flaky: nodeList4.contains((java.lang.Object) false);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean20 = false; // flaky: nodeList19.isEmpty();
        boolean boolean22 = false; // flaky: nodeList19.equals((java.lang.Object) 100);
        int int23 = 0; // flaky: nodeList4.lastIndexOf((java.lang.Object) nodeList19);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator24 = null; // flaky: nodeList19.spliterator();
        int int25 = 0; // flaky: nodeList19.size();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator24);
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
    }

    @Test
    public void test785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test785");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        boolean boolean33 = false; // flaky: nodeList7.add(node31);
        Interface.WoodTable woodTable34 = null;
        Interface.WoodTotalValues woodTotalValues35 = null;
        Interface.AddWood addWood36 = null; // flaky: new Interface.AddWood(woodTable34, woodTotalValues35);
        java.util.ArrayList<javafx.scene.Node> nodeList37 = null; // flaky: addWood36.getAll();
        boolean boolean38 = false; // flaky: nodeList37.isEmpty();
        boolean boolean39 = false; // flaky: nodeList7.addAll((java.util.Collection<javafx.scene.Node>) nodeList37);
        java.lang.Object[] objArray40 = null; // flaky: nodeList37.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<javafx.scene.Node> nodeList43 = null; // flaky: nodeList37.subList((int) 'a', 0);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(97) > toIndex(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
// flaky:         org.junit.Assert.assertNotNull(objArray40);
    }

    @Test
    public void test786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test786");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        boolean boolean4 = false; // flaky: nodeList3.isEmpty();
        boolean boolean6 = false; // flaky: nodeList3.equals((java.lang.Object) 100);
        java.util.Iterator<javafx.scene.Node> nodeItor7 = null; // flaky: nodeList3.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor8 = null; // flaky: nodeList3.listIterator();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        Interface.WoodTable woodTable13 = null;
        Interface.WoodTotalValues woodTotalValues14 = null;
        Interface.AddWood addWood15 = null; // flaky: new Interface.AddWood(woodTable13, woodTotalValues14);
        java.util.ArrayList<javafx.scene.Node> nodeList16 = null; // flaky: addWood15.getAll();
        boolean boolean17 = false; // flaky: nodeList10.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList16);
        java.util.stream.Stream<javafx.scene.Node> nodeStream18 = null; // flaky: nodeList16.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator19 = null; // flaky: nodeList16.spliterator();
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        java.lang.Object obj23 = null;
        boolean boolean24 = nodeList21.remove(obj23);
        boolean boolean25 = false; // flaky: nodeList16.removeAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        boolean boolean29 = nodeList27.isEmpty();
        int int31 = nodeList27.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable32 = null;
        Interface.WoodTotalValues woodTotalValues33 = null;
        Interface.AddWood addWood34 = null; // flaky: new Interface.AddWood(woodTable32, woodTotalValues33);
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood34.getAll();
        boolean boolean37 = false; // flaky: nodeList35.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node39 = null;
        javafx.scene.Node node40 = null; // flaky: nodeList35.set((int) (byte) 1, node39);
        boolean boolean41 = nodeList27.add(node40);
        boolean boolean42 = false; // flaky: nodeList16.add(node40);
        Interface.WoodTable woodTable43 = null;
        Interface.WoodTotalValues woodTotalValues44 = null;
        Interface.AddWood addWood45 = null; // flaky: new Interface.AddWood(woodTable43, woodTotalValues44);
        java.util.ArrayList<javafx.scene.Node> nodeList46 = null; // flaky: addWood45.getAll();
        boolean boolean47 = false; // flaky: nodeList46.isEmpty();
        boolean boolean48 = false; // flaky: nodeList16.addAll((java.util.Collection<javafx.scene.Node>) nodeList46);
        int int49 = 0; // flaky: nodeList46.size();
        boolean boolean50 = false; // flaky: nodeList3.retainAll((java.util.Collection<javafx.scene.Node>) nodeList46);
        Interface.WoodTable woodTable51 = null;
        Interface.WoodTotalValues woodTotalValues52 = null; // flaky: new Interface.WoodTotalValues(woodTable51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: woodTotalValues52.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList54 = null; // flaky: woodTotalValues52.getAll();
        java.util.Iterator<javafx.scene.Node> nodeItor55 = null; // flaky: nodeList54.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor56 = null; // flaky: nodeList54.listIterator();
        java.util.stream.Stream<javafx.scene.Node> nodeStream57 = null; // flaky: nodeList54.parallelStream();
        javafx.scene.Node[] nodeArray58 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList59 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList59, nodeArray58);
        java.lang.Object obj61 = null;
        boolean boolean62 = nodeList59.remove(obj61);
        int int63 = nodeList59.size();
        javafx.scene.Node[] nodeArray64 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList65 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList65, nodeArray64);
        Interface.WoodTable woodTable68 = null;
        Interface.WoodTotalValues woodTotalValues69 = null;
        Interface.AddWood addWood70 = null; // flaky: new Interface.AddWood(woodTable68, woodTotalValues69);
        java.util.ArrayList<javafx.scene.Node> nodeList71 = null; // flaky: addWood70.getAll();
        boolean boolean72 = false; // flaky: nodeList65.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList71);
        boolean boolean73 = nodeList59.retainAll((java.util.Collection<javafx.scene.Node>) nodeList65);
        java.util.stream.Stream<javafx.scene.Node> nodeStream74 = nodeList59.parallelStream();
        boolean boolean75 = false; // flaky: nodeList54.retainAll((java.util.Collection<javafx.scene.Node>) nodeList59);
        boolean boolean76 = false; // flaky: nodeList3.contains((java.lang.Object) nodeList54);
// flaky:         nodeList54.clear();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor7);
// flaky:         org.junit.Assert.assertNotNull(nodeItor8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList16);
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream18);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5);
// flaky:         org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
// flaky:         org.junit.Assert.assertNotNull(nodeList54);
// flaky:         org.junit.Assert.assertNotNull(nodeItor55);
// flaky:         org.junit.Assert.assertNotNull(nodeItor56);
// flaky:         org.junit.Assert.assertNotNull(nodeStream57);
        org.junit.Assert.assertNotNull(nodeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(nodeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList71);
// flaky:         org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(nodeStream74);
// flaky:         org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test787");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
// flaky:         woodTotalValues1.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: woodTotalValues1.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList6 = null; // flaky: woodTotalValues1.getAll();
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node8 = null; // flaky: nodeList6.remove(5);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Size: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
// flaky:         org.junit.Assert.assertNotNull(nodeList6);
    }

    @Test
    public void test788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test788");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues1.getAll();
        java.util.Iterator<javafx.scene.Node> nodeItor4 = null; // flaky: nodeList3.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<javafx.scene.Node> nodeList7 = null; // flaky: nodeList3.subList((int) (byte) 1, (-1));
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(1) > toIndex(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeItor4);
    }

    @Test
    public void test789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test789");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList18 = null; // flaky: addWood16.getAll();
        javafx.scene.Node[] nodeArray19 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList20 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList20, nodeArray19);
        boolean boolean22 = nodeList20.isEmpty();
        int int24 = nodeList20.lastIndexOf((java.lang.Object) 100);
        int int26 = nodeList20.lastIndexOf((java.lang.Object) 10);
        boolean boolean27 = false; // flaky: nodeList18.retainAll((java.util.Collection<javafx.scene.Node>) nodeList20);
        javafx.scene.Node[] nodeArray28 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList29 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList29, nodeArray28);
        boolean boolean31 = nodeList29.isEmpty();
        int int33 = nodeList29.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable34 = null;
        Interface.WoodTotalValues woodTotalValues35 = null;
        Interface.AddWood addWood36 = null; // flaky: new Interface.AddWood(woodTable34, woodTotalValues35);
        java.util.ArrayList<javafx.scene.Node> nodeList37 = null; // flaky: addWood36.getAll();
        boolean boolean39 = false; // flaky: nodeList37.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node41 = null;
        javafx.scene.Node node42 = null; // flaky: nodeList37.set((int) (byte) 1, node41);
        boolean boolean43 = nodeList29.add(node42);
        java.util.stream.Stream<javafx.scene.Node> nodeStream44 = nodeList29.stream();
        boolean boolean45 = nodeList20.equals((java.lang.Object) nodeStream44);
        boolean boolean46 = nodeList20.isEmpty();
        boolean boolean47 = nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList20);
        java.util.ListIterator<javafx.scene.Node> nodeItor48 = nodeList1.listIterator();
        java.util.stream.Stream<javafx.scene.Node> nodeStream49 = nodeList1.parallelStream();
        javafx.scene.Node node51 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList1.add((int) ' ', node51);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList18);
        org.junit.Assert.assertNotNull(nodeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(nodeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(nodeStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(nodeItor48);
        org.junit.Assert.assertNotNull(nodeStream49);
    }

    @Test
    public void test790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test790");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList1.equals((java.lang.Object) nodeList6);
        java.lang.Object obj12 = null;
        int int13 = nodeList1.lastIndexOf(obj12);
        javafx.scene.Node[] nodeArray15 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList16 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList16, nodeArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = nodeList16.remove(obj18);
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        boolean boolean23 = nodeList21.isEmpty();
        int int25 = nodeList21.lastIndexOf((java.lang.Object) 100);
        boolean boolean26 = nodeList21.isEmpty();
        nodeList21.clear();
        boolean boolean28 = nodeList16.removeAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        Interface.WoodTable woodTable29 = null;
        Interface.WoodTotalValues woodTotalValues30 = null;
        Interface.AddWood addWood31 = null; // flaky: new Interface.AddWood(woodTable29, woodTotalValues30);
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood31.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList33 = null; // flaky: addWood31.getAll();
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        boolean boolean37 = nodeList35.isEmpty();
        int int39 = nodeList35.lastIndexOf((java.lang.Object) 100);
        int int41 = nodeList35.lastIndexOf((java.lang.Object) 10);
        boolean boolean42 = false; // flaky: nodeList33.retainAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        javafx.scene.Node[] nodeArray43 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList44 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList44, nodeArray43);
        boolean boolean46 = nodeList44.isEmpty();
        int int48 = nodeList44.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable49 = null;
        Interface.WoodTotalValues woodTotalValues50 = null;
        Interface.AddWood addWood51 = null; // flaky: new Interface.AddWood(woodTable49, woodTotalValues50);
        java.util.ArrayList<javafx.scene.Node> nodeList52 = null; // flaky: addWood51.getAll();
        boolean boolean54 = false; // flaky: nodeList52.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node56 = null;
        javafx.scene.Node node57 = null; // flaky: nodeList52.set((int) (byte) 1, node56);
        boolean boolean58 = nodeList44.add(node57);
        java.util.stream.Stream<javafx.scene.Node> nodeStream59 = nodeList44.stream();
        boolean boolean60 = nodeList35.equals((java.lang.Object) nodeStream59);
        boolean boolean61 = nodeList35.isEmpty();
        boolean boolean62 = nodeList16.addAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        java.util.ListIterator<javafx.scene.Node> nodeItor63 = nodeList16.listIterator();
        java.util.stream.Stream<javafx.scene.Node> nodeStream64 = nodeList16.parallelStream();
        boolean boolean65 = nodeList1.addAll((int) (short) 0, (java.util.Collection<javafx.scene.Node>) nodeList16);
        Interface.WoodTable woodTable66 = null;
        Interface.WoodTotalValues woodTotalValues67 = null; // flaky: new Interface.WoodTotalValues(woodTable66);
        java.util.ArrayList<javafx.scene.Node> nodeList68 = null; // flaky: woodTotalValues67.getAll();
        int int70 = 0; // flaky: nodeList68.indexOf((java.lang.Object) (byte) 0);
        java.util.ListIterator<javafx.scene.Node> nodeItor71 = null; // flaky: nodeList68.listIterator();
        Interface.WoodTable woodTable72 = null;
        Interface.WoodTotalValues woodTotalValues73 = null; // flaky: new Interface.WoodTotalValues(woodTable72);
// flaky:         woodTotalValues73.redraw((double) (short) 100, 0.0d);
        boolean boolean77 = false; // flaky: nodeList68.equals((java.lang.Object) 0.0d);
        boolean boolean78 = false; // flaky: nodeList16.addAll((java.util.Collection<javafx.scene.Node>) nodeList68);
        nodeList16.clear();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(nodeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
// flaky:         org.junit.Assert.assertNotNull(nodeList33);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(nodeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(nodeStream59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(nodeItor63);
        org.junit.Assert.assertNotNull(nodeStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList68);
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeItor71);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test791");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
        Interface.AddWood addWood3 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood3.getAll();
// flaky:         addWood3.redraw((double) 0L, (double) (byte) 0);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
    }

    @Test
    public void test792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test792");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) 10.0f, (double) 0L);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood2.getAll();
        int int9 = 0; // flaky: nodeList8.size();
        Interface.WoodTable woodTable11 = null;
        Interface.WoodTotalValues woodTotalValues12 = null;
        Interface.AddWood addWood13 = null; // flaky: new Interface.AddWood(woodTable11, woodTotalValues12);
        java.util.ArrayList<javafx.scene.Node> nodeList14 = null; // flaky: addWood13.getAll();
        boolean boolean15 = false; // flaky: nodeList14.isEmpty();
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        javafx.scene.Node[] nodeArray34 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList35 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList35, nodeArray34);
        Interface.WoodTable woodTable38 = null;
        Interface.WoodTotalValues woodTotalValues39 = null;
        Interface.AddWood addWood40 = null; // flaky: new Interface.AddWood(woodTable38, woodTotalValues39);
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood40.getAll();
        boolean boolean42 = false; // flaky: nodeList35.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList41);
        int int44 = nodeList35.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray46 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList47 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList47, nodeArray46);
        boolean boolean49 = nodeList47.isEmpty();
        int int51 = nodeList47.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable52 = null;
        Interface.WoodTotalValues woodTotalValues53 = null;
        Interface.AddWood addWood54 = null; // flaky: new Interface.AddWood(woodTable52, woodTotalValues53);
        java.util.ArrayList<javafx.scene.Node> nodeList55 = null; // flaky: addWood54.getAll();
        boolean boolean57 = false; // flaky: nodeList55.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node59 = null;
        javafx.scene.Node node60 = null; // flaky: nodeList55.set((int) (byte) 1, node59);
        boolean boolean61 = nodeList47.add(node60);
        javafx.scene.Node node62 = null; // flaky: nodeList35.set((int) (short) 0, node60);
        javafx.scene.Node node63 = nodeList18.set((int) (byte) 0, node60);
// flaky:         nodeList14.add((int) (short) 0, node63);
        boolean boolean65 = false; // flaky: nodeList8.addAll((int) (byte) 0, (java.util.Collection<javafx.scene.Node>) nodeList14);
        javafx.scene.Node node67 = null; // flaky: nodeList8.remove((int) (short) 0);
        boolean boolean69 = false; // flaky: nodeList8.remove((java.lang.Object) 100.0d);
        java.lang.Object[] objArray70 = null; // flaky: nodeList8.toArray();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
// flaky:         org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(nodeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
// flaky:         org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(nodeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
// flaky:         org.junit.Assert.assertNotNull(node62);
// flaky:         org.junit.Assert.assertNotNull(node63);
// flaky:         org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
// flaky:         org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
// flaky:         org.junit.Assert.assertNotNull(objArray70);
    }

    @Test
    public void test793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test793");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues1.getAll();
// flaky:         woodTotalValues1.redraw((double) 2, (double) 5);
// flaky:         woodTotalValues1.redraw((double) (byte) 1, (double) 1);
        java.util.ArrayList<javafx.scene.Node> nodeList10 = null; // flaky: woodTotalValues1.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList11 = null; // flaky: woodTotalValues1.getAll();
        Interface.WoodTable woodTable12 = null;
        Interface.WoodTotalValues woodTotalValues13 = null; // flaky: new Interface.WoodTotalValues(woodTable12);
        java.util.ArrayList<javafx.scene.Node> nodeList14 = null; // flaky: woodTotalValues13.getAll();
        Interface.WoodTable woodTable15 = null;
        Interface.WoodTotalValues woodTotalValues16 = null;
        Interface.AddWood addWood17 = null; // flaky: new Interface.AddWood(woodTable15, woodTotalValues16);
        java.util.ArrayList<javafx.scene.Node> nodeList18 = null; // flaky: addWood17.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood17.getAll();
        int int20 = 0; // flaky: nodeList14.indexOf((java.lang.Object) addWood17);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood17.getAll();
        boolean boolean22 = false; // flaky: nodeList11.removeAll((java.util.Collection<javafx.scene.Node>) nodeList21);
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList10);
// flaky:         org.junit.Assert.assertNotNull(nodeList11);
// flaky:         org.junit.Assert.assertNotNull(nodeList14);
// flaky:         org.junit.Assert.assertNotNull(nodeList18);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test794");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null; // flaky: new Interface.WoodTotalValues(woodTable1);
// flaky:         woodTotalValues2.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList6 = null; // flaky: woodTotalValues2.getAll();
// flaky:         woodTotalValues2.redraw(10.0d, 1.0d);
// flaky:         woodTotalValues2.redraw((double) 10, (double) 10);
        Interface.AddWood addWood13 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues2);
        java.util.ArrayList<javafx.scene.Node> nodeList14 = null; // flaky: addWood13.getAll();
// flaky:         org.junit.Assert.assertNotNull(nodeList6);
// flaky:         org.junit.Assert.assertNotNull(nodeList14);
    }

    @Test
    public void test795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test795");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood6.getAll();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        boolean boolean12 = nodeList10.isEmpty();
        int int14 = nodeList10.lastIndexOf((java.lang.Object) 100);
        int int16 = nodeList10.lastIndexOf((java.lang.Object) 10);
        boolean boolean17 = false; // flaky: nodeList8.retainAll((java.util.Collection<javafx.scene.Node>) nodeList10);
        boolean boolean18 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList8);
        boolean boolean19 = false; // flaky: nodeList8.isEmpty();
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        java.lang.Object obj23 = null;
        boolean boolean24 = nodeList21.remove(obj23);
        boolean boolean25 = nodeList21.isEmpty();
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        Interface.WoodTable woodTable30 = null;
        Interface.WoodTotalValues woodTotalValues31 = null;
        Interface.AddWood addWood32 = null; // flaky: new Interface.AddWood(woodTable30, woodTotalValues31);
        java.util.ArrayList<javafx.scene.Node> nodeList33 = null; // flaky: addWood32.getAll();
        boolean boolean34 = false; // flaky: nodeList27.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList33);
        int int36 = nodeList27.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray38 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList39 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList39, nodeArray38);
        boolean boolean41 = nodeList39.isEmpty();
        int int43 = nodeList39.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable44 = null;
        Interface.WoodTotalValues woodTotalValues45 = null;
        Interface.AddWood addWood46 = null; // flaky: new Interface.AddWood(woodTable44, woodTotalValues45);
        java.util.ArrayList<javafx.scene.Node> nodeList47 = null; // flaky: addWood46.getAll();
        boolean boolean49 = false; // flaky: nodeList47.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node51 = null;
        javafx.scene.Node node52 = null; // flaky: nodeList47.set((int) (byte) 1, node51);
        boolean boolean53 = nodeList39.add(node52);
        javafx.scene.Node node54 = null; // flaky: nodeList27.set((int) (short) 0, node52);
        boolean boolean55 = nodeList21.add(node54);
        boolean boolean57 = nodeList21.remove((java.lang.Object) 100L);
        int int58 = 0; // flaky: nodeList8.lastIndexOf((java.lang.Object) nodeList21);
        Interface.WoodTable woodTable59 = null;
        Interface.WoodTotalValues woodTotalValues60 = null; // flaky: new Interface.WoodTotalValues(woodTable59);
// flaky:         woodTotalValues60.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList64 = null; // flaky: woodTotalValues60.getAll();
        boolean boolean65 = false; // flaky: nodeList8.contains((java.lang.Object) woodTotalValues60);
// flaky:         woodTotalValues60.redraw((double) (byte) 10, (double) (-1L));
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList33);
// flaky:         org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
// flaky:         org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test796");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
// flaky:         woodTotalValues1.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: woodTotalValues1.getAll();
// flaky:         woodTotalValues1.redraw(10.0d, 1.0d);
// flaky:         woodTotalValues1.redraw((double) 10, (double) 10);
        // The following exception was thrown during execution in test generation
        try {
            woodTotalValues1.renew();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
    }

    @Test
    public void test797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test797");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        boolean boolean8 = false; // flaky: nodeList1.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList7);
        java.util.stream.Stream<javafx.scene.Node> nodeStream9 = null; // flaky: nodeList7.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator10 = null; // flaky: nodeList7.spliterator();
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = nodeList12.remove(obj14);
        boolean boolean16 = false; // flaky: nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        javafx.scene.Node[] nodeArray17 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList18 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList18, nodeArray17);
        boolean boolean20 = nodeList18.isEmpty();
        int int22 = nodeList18.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean28 = false; // flaky: nodeList26.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node30 = null;
        javafx.scene.Node node31 = null; // flaky: nodeList26.set((int) (byte) 1, node30);
        boolean boolean32 = nodeList18.add(node31);
        boolean boolean33 = false; // flaky: nodeList7.add(node31);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood37.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList40 = null; // flaky: addWood37.getAll();
        javafx.scene.Node[] nodeArray42 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList43 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList43, nodeArray42);
        boolean boolean45 = nodeList43.isEmpty();
        int int47 = nodeList43.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable48 = null;
        Interface.WoodTotalValues woodTotalValues49 = null;
        Interface.AddWood addWood50 = null; // flaky: new Interface.AddWood(woodTable48, woodTotalValues49);
        java.util.ArrayList<javafx.scene.Node> nodeList51 = null; // flaky: addWood50.getAll();
        boolean boolean53 = false; // flaky: nodeList51.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node55 = null;
        javafx.scene.Node node56 = null; // flaky: nodeList51.set((int) (byte) 1, node55);
        boolean boolean57 = nodeList43.add(node56);
        javafx.scene.Node node58 = null; // flaky: nodeList40.set((int) (short) 0, node56);
// flaky:         nodeList7.add(5, node56);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator60 = null; // flaky: nodeList7.spliterator();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream9);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(nodeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
// flaky:         org.junit.Assert.assertNotNull(nodeList40);
        org.junit.Assert.assertNotNull(nodeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
// flaky:         org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
// flaky:         org.junit.Assert.assertNotNull(node58);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator60);
    }

    @Test
    public void test798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test798");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean15 = false; // flaky: nodeList4.contains((java.lang.Object) false);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean20 = false; // flaky: nodeList19.isEmpty();
        boolean boolean22 = false; // flaky: nodeList19.equals((java.lang.Object) 100);
        int int23 = 0; // flaky: nodeList4.lastIndexOf((java.lang.Object) nodeList19);
        javafx.scene.Node[] nodeArray24 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList25 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList25, nodeArray24);
        boolean boolean27 = nodeList25.isEmpty();
        Interface.WoodTable woodTable28 = null;
        Interface.WoodTotalValues woodTotalValues29 = null;
        Interface.AddWood addWood30 = null; // flaky: new Interface.AddWood(woodTable28, woodTotalValues29);
        java.util.ArrayList<javafx.scene.Node> nodeList31 = null; // flaky: addWood30.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood30.getAll();
        javafx.scene.Node[] nodeArray33 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList34 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList34, nodeArray33);
        boolean boolean36 = nodeList34.isEmpty();
        int int38 = nodeList34.lastIndexOf((java.lang.Object) 100);
        int int40 = nodeList34.lastIndexOf((java.lang.Object) 10);
        boolean boolean41 = false; // flaky: nodeList32.retainAll((java.util.Collection<javafx.scene.Node>) nodeList34);
        boolean boolean42 = false; // flaky: nodeList25.removeAll((java.util.Collection<javafx.scene.Node>) nodeList32);
        javafx.scene.Node[] nodeArray43 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList44 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList44, nodeArray43);
        Interface.WoodTable woodTable47 = null;
        Interface.WoodTotalValues woodTotalValues48 = null;
        Interface.AddWood addWood49 = null; // flaky: new Interface.AddWood(woodTable47, woodTotalValues48);
        java.util.ArrayList<javafx.scene.Node> nodeList50 = null; // flaky: addWood49.getAll();
        boolean boolean51 = false; // flaky: nodeList44.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList50);
        java.util.stream.Stream<javafx.scene.Node> nodeStream52 = null; // flaky: nodeList50.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator53 = null; // flaky: nodeList50.spliterator();
        int int54 = 0; // flaky: nodeList32.indexOf((java.lang.Object) nodeList50);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator55 = null; // flaky: nodeList32.spliterator();
        boolean boolean56 = false; // flaky: nodeList4.removeAll((java.util.Collection<javafx.scene.Node>) nodeList32);
        javafx.scene.Node[] nodeArray57 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList58 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList58, nodeArray57);
        boolean boolean60 = nodeList58.isEmpty();
        int int62 = nodeList58.lastIndexOf((java.lang.Object) 100);
        int int64 = nodeList58.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable65 = null;
        Interface.WoodTotalValues woodTotalValues66 = null;
        Interface.AddWood addWood67 = null; // flaky: new Interface.AddWood(woodTable65, woodTotalValues66);
        java.util.ArrayList<javafx.scene.Node> nodeList68 = null; // flaky: addWood67.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList69 = null; // flaky: addWood67.getAll();
        javafx.scene.Node[] nodeArray70 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList71 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList71, nodeArray70);
        boolean boolean73 = nodeList71.isEmpty();
        int int75 = nodeList71.lastIndexOf((java.lang.Object) 100);
        int int77 = nodeList71.lastIndexOf((java.lang.Object) 10);
        boolean boolean78 = false; // flaky: nodeList69.retainAll((java.util.Collection<javafx.scene.Node>) nodeList71);
        boolean boolean79 = nodeList58.containsAll((java.util.Collection<javafx.scene.Node>) nodeList71);
        java.util.ListIterator<javafx.scene.Node> nodeItor81 = nodeList58.listIterator(0);
        java.util.Iterator<javafx.scene.Node> nodeItor82 = nodeList58.iterator();
        boolean boolean83 = false; // flaky: nodeList32.equals((java.lang.Object) nodeItor82);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(nodeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList31);
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertNotNull(nodeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(nodeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList50);
// flaky:         org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream52);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator53);
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(nodeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList68);
// flaky:         org.junit.Assert.assertNotNull(nodeList69);
        org.junit.Assert.assertNotNull(nodeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(nodeItor81);
        org.junit.Assert.assertNotNull(nodeItor82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test799");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTotalValues woodTotalValues3 = null; // flaky: new Interface.WoodTotalValues(woodTable2);
        Interface.AddWood addWood4 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues3);
// flaky:         woodTotalValues3.redraw(0.0d, (double) 0L);
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues3);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: woodTotalValues3.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList10 = null; // flaky: woodTotalValues3.getAll();
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
// flaky:         org.junit.Assert.assertNotNull(nodeList10);
    }

    @Test
    public void test800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test800");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        Interface.WoodTable woodTable4 = null;
        Interface.WoodTotalValues woodTotalValues5 = null;
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable4, woodTotalValues5);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood6.getAll();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        boolean boolean12 = nodeList10.isEmpty();
        int int14 = nodeList10.lastIndexOf((java.lang.Object) 100);
        int int16 = nodeList10.lastIndexOf((java.lang.Object) 10);
        boolean boolean17 = false; // flaky: nodeList8.retainAll((java.util.Collection<javafx.scene.Node>) nodeList10);
        boolean boolean18 = false; // flaky: nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList8);
        boolean boolean19 = false; // flaky: nodeList8.isEmpty();
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        java.lang.Object obj23 = null;
        boolean boolean24 = nodeList21.remove(obj23);
        boolean boolean25 = nodeList21.isEmpty();
        javafx.scene.Node[] nodeArray26 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList27 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList27, nodeArray26);
        Interface.WoodTable woodTable30 = null;
        Interface.WoodTotalValues woodTotalValues31 = null;
        Interface.AddWood addWood32 = null; // flaky: new Interface.AddWood(woodTable30, woodTotalValues31);
        java.util.ArrayList<javafx.scene.Node> nodeList33 = null; // flaky: addWood32.getAll();
        boolean boolean34 = false; // flaky: nodeList27.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList33);
        int int36 = nodeList27.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray38 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList39 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList39, nodeArray38);
        boolean boolean41 = nodeList39.isEmpty();
        int int43 = nodeList39.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable44 = null;
        Interface.WoodTotalValues woodTotalValues45 = null;
        Interface.AddWood addWood46 = null; // flaky: new Interface.AddWood(woodTable44, woodTotalValues45);
        java.util.ArrayList<javafx.scene.Node> nodeList47 = null; // flaky: addWood46.getAll();
        boolean boolean49 = false; // flaky: nodeList47.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node51 = null;
        javafx.scene.Node node52 = null; // flaky: nodeList47.set((int) (byte) 1, node51);
        boolean boolean53 = nodeList39.add(node52);
        javafx.scene.Node node54 = null; // flaky: nodeList27.set((int) (short) 0, node52);
        boolean boolean55 = nodeList21.add(node54);
        boolean boolean57 = nodeList21.remove((java.lang.Object) 100L);
        int int58 = 0; // flaky: nodeList8.lastIndexOf((java.lang.Object) nodeList21);
        Interface.WoodTable woodTable59 = null;
        Interface.WoodTotalValues woodTotalValues60 = null; // flaky: new Interface.WoodTotalValues(woodTable59);
// flaky:         woodTotalValues60.redraw((double) (short) 100, 0.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList64 = null; // flaky: woodTotalValues60.getAll();
        boolean boolean65 = false; // flaky: nodeList8.contains((java.lang.Object) woodTotalValues60);
// flaky:         woodTotalValues60.redraw((double) 100, (double) (short) -1);
// flaky:         woodTotalValues60.redraw((double) (short) 1, (double) (byte) 10);
// flaky:         woodTotalValues60.redraw((double) 1L, (double) (short) 10);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList33);
// flaky:         org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
// flaky:         org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
// flaky:         org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test801");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList1.equals((java.lang.Object) nodeList6);
        java.util.stream.Stream<javafx.scene.Node> nodeStream12 = nodeList1.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<javafx.scene.Node> nodeList15 = nodeList1.subList((int) (byte) 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(10) > toIndex(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(nodeStream12);
    }

    @Test
    public void test802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test802");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
        Interface.WoodTable woodTable3 = null;
        Interface.WoodTotalValues woodTotalValues4 = null;
        Interface.AddWood addWood5 = null; // flaky: new Interface.AddWood(woodTable3, woodTotalValues4);
        java.util.ArrayList<javafx.scene.Node> nodeList6 = null; // flaky: addWood5.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood5.getAll();
        int int8 = 0; // flaky: nodeList2.indexOf((java.lang.Object) addWood5);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood5.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList10 = null; // flaky: addWood5.getAll();
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
// flaky:         org.junit.Assert.assertNotNull(nodeList6);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
// flaky:         org.junit.Assert.assertNotNull(nodeList10);
    }

    @Test
    public void test803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test803");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        int int7 = nodeList1.lastIndexOf((java.lang.Object) 10);
        java.util.ListIterator<javafx.scene.Node> nodeItor8 = nodeList1.listIterator();
        int int9 = nodeList1.size();
        boolean boolean10 = nodeList1.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream11 = nodeList1.parallelStream();
        javafx.scene.Node[] nodeArray12 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList13 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList13, nodeArray12);
        boolean boolean15 = nodeList13.isEmpty();
        int int17 = nodeList13.lastIndexOf((java.lang.Object) 100);
        int int19 = nodeList13.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable20 = null;
        Interface.WoodTotalValues woodTotalValues21 = null;
        Interface.AddWood addWood22 = null; // flaky: new Interface.AddWood(woodTable20, woodTotalValues21);
        java.util.ArrayList<javafx.scene.Node> nodeList23 = null; // flaky: addWood22.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood22.getAll();
        javafx.scene.Node[] nodeArray25 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList26 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList26, nodeArray25);
        boolean boolean28 = nodeList26.isEmpty();
        int int30 = nodeList26.lastIndexOf((java.lang.Object) 100);
        int int32 = nodeList26.lastIndexOf((java.lang.Object) 10);
        boolean boolean33 = false; // flaky: nodeList24.retainAll((java.util.Collection<javafx.scene.Node>) nodeList26);
        boolean boolean34 = nodeList13.containsAll((java.util.Collection<javafx.scene.Node>) nodeList26);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        boolean boolean40 = false; // flaky: nodeList38.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node42 = null;
        javafx.scene.Node node43 = null; // flaky: nodeList38.set((int) (byte) 1, node42);
        boolean boolean44 = false; // flaky: nodeList13.removeAll((java.util.Collection<javafx.scene.Node>) nodeList38);
        int int45 = nodeList1.lastIndexOf((java.lang.Object) nodeList13);
        Interface.WoodTable woodTable46 = null;
        Interface.WoodTotalValues woodTotalValues47 = null; // flaky: new Interface.WoodTotalValues(woodTable46);
        java.util.ArrayList<javafx.scene.Node> nodeList48 = null; // flaky: woodTotalValues47.getAll();
        int int49 = nodeList13.lastIndexOf((java.lang.Object) woodTotalValues47);
        java.util.ArrayList<javafx.scene.Node> nodeList50 = null; // flaky: woodTotalValues47.getAll();
// flaky:         woodTotalValues47.redraw((double) 1L, (double) (short) 10);
        java.util.ArrayList<javafx.scene.Node> nodeList54 = null; // flaky: woodTotalValues47.getAll();
        java.util.function.UnaryOperator<javafx.scene.Node> nodeUnaryOperator55 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList54.replaceAll(nodeUnaryOperator55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(nodeItor8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(nodeStream11);
        org.junit.Assert.assertNotNull(nodeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList23);
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertNotNull(nodeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList50);
// flaky:         org.junit.Assert.assertNotNull(nodeList54);
    }

    @Test
    public void test804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test804");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues1.getAll();
        java.util.Iterator<javafx.scene.Node> nodeItor4 = null; // flaky: nodeList3.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor5 = null; // flaky: nodeList3.listIterator();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        boolean boolean9 = nodeList7.isEmpty();
        int int11 = nodeList7.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable12 = null;
        Interface.WoodTotalValues woodTotalValues13 = null;
        Interface.AddWood addWood14 = null; // flaky: new Interface.AddWood(woodTable12, woodTotalValues13);
        java.util.ArrayList<javafx.scene.Node> nodeList15 = null; // flaky: addWood14.getAll();
        boolean boolean17 = false; // flaky: nodeList15.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node19 = null;
        javafx.scene.Node node20 = null; // flaky: nodeList15.set((int) (byte) 1, node19);
        boolean boolean21 = nodeList7.add(node20);
        javafx.scene.Node[] nodeArray22 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList23 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList23, nodeArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = nodeList23.remove(obj25);
        boolean boolean27 = nodeList7.retainAll((java.util.Collection<javafx.scene.Node>) nodeList23);
        javafx.scene.Node[] nodeArray28 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList29 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList29, nodeArray28);
        Interface.WoodTable woodTable32 = null;
        Interface.WoodTotalValues woodTotalValues33 = null;
        Interface.AddWood addWood34 = null; // flaky: new Interface.AddWood(woodTable32, woodTotalValues33);
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood34.getAll();
        boolean boolean36 = false; // flaky: nodeList29.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList35);
        java.util.stream.Stream<javafx.scene.Node> nodeStream37 = null; // flaky: nodeList35.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator38 = null; // flaky: nodeList35.spliterator();
        boolean boolean39 = false; // flaky: nodeList7.addAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        java.util.Iterator<javafx.scene.Node> nodeItor40 = null; // flaky: nodeList35.iterator();
        boolean boolean41 = false; // flaky: nodeList3.removeAll((java.util.Collection<javafx.scene.Node>) nodeList35);
        javafx.scene.Node[] nodeArray42 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList43 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList43, nodeArray42);
        java.lang.Object obj45 = null;
        boolean boolean46 = nodeList43.remove(obj45);
        boolean boolean47 = nodeList43.isEmpty();
        boolean boolean48 = false; // flaky: nodeList3.addAll((java.util.Collection<javafx.scene.Node>) nodeList43);
        java.util.stream.Stream<javafx.scene.Node> nodeStream49 = nodeList43.parallelStream();
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeItor4);
// flaky:         org.junit.Assert.assertNotNull(nodeItor5);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(nodeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(nodeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream37);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator38);
// flaky:         org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(nodeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(nodeStream49);
    }

    @Test
    public void test805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test805");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        javafx.scene.Node[] nodeArray14 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList15 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList15, nodeArray14);
        Interface.WoodTable woodTable18 = null;
        Interface.WoodTotalValues woodTotalValues19 = null;
        Interface.AddWood addWood20 = null; // flaky: new Interface.AddWood(woodTable18, woodTotalValues19);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood20.getAll();
        boolean boolean22 = false; // flaky: nodeList15.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList21);
        int int24 = nodeList15.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray25 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList26 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList26, nodeArray25);
        java.lang.Object obj28 = null;
        boolean boolean29 = nodeList26.remove(obj28);
        boolean boolean30 = nodeList26.isEmpty();
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.lang.String[] strArray34 = nodeList26.toArray(strArray33);
        boolean boolean35 = nodeList15.equals((java.lang.Object) strArray34);
        int int36 = 0; // flaky: nodeList4.lastIndexOf((java.lang.Object) boolean35);
        javafx.scene.Node[] nodeArray37 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList38 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList38, nodeArray37);
        boolean boolean40 = nodeList38.isEmpty();
        boolean boolean41 = nodeList38.isEmpty();
        nodeList38.clear();
        java.util.ListIterator<javafx.scene.Node> nodeItor44 = nodeList38.listIterator(0);
        Interface.WoodTable woodTable45 = null;
        Interface.WoodTotalValues woodTotalValues46 = null;
        Interface.AddWood addWood47 = null; // flaky: new Interface.AddWood(woodTable45, woodTotalValues46);
        java.util.ArrayList<javafx.scene.Node> nodeList48 = null; // flaky: addWood47.getAll();
        boolean boolean50 = false; // flaky: nodeList48.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node52 = null;
        javafx.scene.Node node53 = null; // flaky: nodeList48.set((int) (byte) 1, node52);
        javafx.css.Styleable[] styleableArray54 = new javafx.css.Styleable[] { node53 };
        Interface.WoodTable woodTable55 = null;
        Interface.WoodTotalValues woodTotalValues56 = null;
        Interface.AddWood addWood57 = null; // flaky: new Interface.AddWood(woodTable55, woodTotalValues56);
        java.util.ArrayList<javafx.scene.Node> nodeList58 = null; // flaky: addWood57.getAll();
        boolean boolean60 = false; // flaky: nodeList58.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node62 = null;
        javafx.scene.Node node63 = null; // flaky: nodeList58.set((int) (byte) 1, node62);
        javafx.css.Styleable[] styleableArray64 = new javafx.css.Styleable[] { node63 };
        javafx.css.Styleable[][] styleableArray65 = new javafx.css.Styleable[][] { styleableArray54, styleableArray64 };
        javafx.css.Styleable[][] styleableArray66 = nodeList38.toArray(styleableArray65);
        boolean boolean67 = false; // flaky: nodeList4.equals((java.lang.Object) nodeList38);
        javafx.scene.Node[] nodeArray69 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList70 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList70, nodeArray69);
        java.lang.Object obj72 = null;
        boolean boolean73 = nodeList70.remove(obj72);
        javafx.scene.Node[] nodeArray74 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList75 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList75, nodeArray74);
        boolean boolean77 = nodeList75.isEmpty();
        int int79 = nodeList75.lastIndexOf((java.lang.Object) 100);
        boolean boolean80 = nodeList75.isEmpty();
        nodeList75.clear();
        boolean boolean82 = nodeList70.removeAll((java.util.Collection<javafx.scene.Node>) nodeList75);
        Interface.WoodTable woodTable83 = null;
        Interface.WoodTotalValues woodTotalValues84 = null;
        Interface.AddWood addWood85 = null; // flaky: new Interface.AddWood(woodTable83, woodTotalValues84);
        java.util.ArrayList<javafx.scene.Node> nodeList86 = null; // flaky: addWood85.getAll();
// flaky:         addWood85.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList90 = null; // flaky: addWood85.getAll();
        boolean boolean91 = false; // flaky: nodeList75.addAll((java.util.Collection<javafx.scene.Node>) nodeList90);
        javafx.scene.Node node93 = null; // flaky: nodeList75.remove((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            javafx.scene.Node node94 = nodeList38.set((int) '#', node93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(nodeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(nodeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(nodeItor44);
// flaky:         org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
// flaky:         org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(styleableArray54);
// flaky:         org.junit.Assert.assertNotNull(nodeList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
// flaky:         org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(styleableArray64);
        org.junit.Assert.assertNotNull(styleableArray65);
        org.junit.Assert.assertNotNull(styleableArray66);
// flaky:         org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(nodeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(nodeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList86);
// flaky:         org.junit.Assert.assertNotNull(nodeList90);
// flaky:         org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
// flaky:         org.junit.Assert.assertNotNull(node93);
    }

    @Test
    public void test806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test806");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        boolean boolean4 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        Interface.WoodTable woodTable9 = null;
        Interface.WoodTotalValues woodTotalValues10 = null;
        Interface.AddWood addWood11 = null; // flaky: new Interface.AddWood(woodTable9, woodTotalValues10);
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: addWood11.getAll();
        boolean boolean13 = false; // flaky: nodeList6.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList12);
        java.util.stream.Stream<javafx.scene.Node> nodeStream14 = null; // flaky: nodeList12.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator15 = null; // flaky: nodeList12.spliterator();
        javafx.scene.Node[] nodeArray16 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList17 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList17, nodeArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = nodeList17.remove(obj19);
        boolean boolean21 = false; // flaky: nodeList12.removeAll((java.util.Collection<javafx.scene.Node>) nodeList17);
        Interface.WoodTable woodTable22 = null;
        Interface.WoodTotalValues woodTotalValues23 = null;
        Interface.AddWood addWood24 = null; // flaky: new Interface.AddWood(woodTable22, woodTotalValues23);
        java.util.ArrayList<javafx.scene.Node> nodeList25 = null; // flaky: addWood24.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood24.getAll();
        int int27 = 0; // flaky: nodeList26.size();
        boolean boolean28 = false; // flaky: nodeList12.containsAll((java.util.Collection<javafx.scene.Node>) nodeList26);
        javafx.scene.Node[] nodeArray29 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList30 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList30, nodeArray29);
        boolean boolean32 = nodeList30.isEmpty();
        int int34 = nodeList30.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        boolean boolean40 = false; // flaky: nodeList38.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node42 = null;
        javafx.scene.Node node43 = null; // flaky: nodeList38.set((int) (byte) 1, node42);
        boolean boolean44 = nodeList30.add(node43);
        javafx.scene.Node[] nodeArray45 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList46 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList46, nodeArray45);
        java.lang.Object obj48 = null;
        boolean boolean49 = nodeList46.remove(obj48);
        boolean boolean50 = nodeList30.retainAll((java.util.Collection<javafx.scene.Node>) nodeList46);
        nodeList46.clear();
        java.util.ListIterator<javafx.scene.Node> nodeItor52 = nodeList46.listIterator();
        boolean boolean53 = false; // flaky: nodeList26.containsAll((java.util.Collection<javafx.scene.Node>) nodeList46);
        boolean boolean54 = false; // flaky: nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList26);
        java.util.stream.Stream<javafx.scene.Node> nodeStream55 = nodeList1.parallelStream();
        nodeList1.clear();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream14);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNotNull(nodeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList25);
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(nodeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(nodeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(nodeItor52);
// flaky:         org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(nodeStream55);
    }

    @Test
    public void test807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test807");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        java.util.ListIterator<javafx.scene.Node> nodeItor5 = nodeList1.listIterator();
        java.lang.Object[] objArray6 = nodeList1.toArray();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeItor5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
    }

    @Test
    public void test808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test808");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTable woodTable3 = null;
        Interface.WoodTotalValues woodTotalValues4 = null; // flaky: new Interface.WoodTotalValues(woodTable3);
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: woodTotalValues4.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList6 = null; // flaky: woodTotalValues4.getAll();
// flaky:         woodTotalValues4.redraw((double) 11, (double) 'a');
// flaky:         woodTotalValues4.redraw(0.0d, (double) '#');
        Interface.AddWood addWood13 = null; // flaky: new Interface.AddWood(woodTable2, woodTotalValues4);
        Interface.AddWood addWood14 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues4);
        Interface.AddWood addWood15 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues4);
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
// flaky:         org.junit.Assert.assertNotNull(nodeList6);
    }

    @Test
    public void test809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test809");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTotalValues woodTotalValues3 = null; // flaky: new Interface.WoodTotalValues(woodTable2);
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: woodTotalValues3.getAll();
        Interface.AddWood addWood5 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues3);
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues3);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList8 = null; // flaky: addWood6.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood6.getAll();
        java.util.Iterator<javafx.scene.Node> nodeItor10 = null; // flaky: nodeList9.iterator();
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
// flaky:         org.junit.Assert.assertNotNull(nodeList8);
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
// flaky:         org.junit.Assert.assertNotNull(nodeItor10);
    }

    @Test
    public void test810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test810");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = nodeList6.remove(obj8);
        javafx.scene.Node[] nodeArray10 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList11 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList11, nodeArray10);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
        boolean boolean18 = false; // flaky: nodeList11.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList17);
        javafx.scene.Node[] nodeArray20 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList21 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList21, nodeArray20);
        boolean boolean23 = nodeList21.isEmpty();
        int int25 = nodeList21.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable26 = null;
        Interface.WoodTotalValues woodTotalValues27 = null;
        Interface.AddWood addWood28 = null; // flaky: new Interface.AddWood(woodTable26, woodTotalValues27);
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood28.getAll();
        boolean boolean31 = false; // flaky: nodeList29.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node33 = null;
        javafx.scene.Node node34 = null; // flaky: nodeList29.set((int) (byte) 1, node33);
        boolean boolean35 = nodeList21.add(node34);
// flaky:         nodeList11.add(1, node34);
        boolean boolean37 = nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList11);
        boolean boolean38 = nodeList1.retainAll((java.util.Collection<javafx.scene.Node>) nodeList11);
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        boolean boolean42 = nodeList40.isEmpty();
        int int44 = nodeList40.lastIndexOf((java.lang.Object) 100);
        boolean boolean45 = nodeList40.isEmpty();
        nodeList40.clear();
        boolean boolean47 = nodeList11.addAll((java.util.Collection<javafx.scene.Node>) nodeList40);
        Interface.WoodTable woodTable48 = null;
        Interface.WoodTotalValues woodTotalValues49 = null; // flaky: new Interface.WoodTotalValues(woodTable48);
        java.util.ArrayList<javafx.scene.Node> nodeList50 = null; // flaky: woodTotalValues49.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList51 = null; // flaky: woodTotalValues49.getAll();
        java.util.Iterator<javafx.scene.Node> nodeItor52 = null; // flaky: nodeList51.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor53 = null; // flaky: nodeList51.listIterator();
        java.util.stream.Stream<javafx.scene.Node> nodeStream54 = null; // flaky: nodeList51.parallelStream();
        javafx.scene.Node[] nodeArray55 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList56 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList56, nodeArray55);
        java.lang.Object obj58 = null;
        boolean boolean59 = nodeList56.remove(obj58);
        int int60 = nodeList56.size();
        javafx.scene.Node[] nodeArray61 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList62 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList62, nodeArray61);
        Interface.WoodTable woodTable65 = null;
        Interface.WoodTotalValues woodTotalValues66 = null;
        Interface.AddWood addWood67 = null; // flaky: new Interface.AddWood(woodTable65, woodTotalValues66);
        java.util.ArrayList<javafx.scene.Node> nodeList68 = null; // flaky: addWood67.getAll();
        boolean boolean69 = false; // flaky: nodeList62.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList68);
        boolean boolean70 = nodeList56.retainAll((java.util.Collection<javafx.scene.Node>) nodeList62);
        java.util.stream.Stream<javafx.scene.Node> nodeStream71 = nodeList56.parallelStream();
        boolean boolean72 = false; // flaky: nodeList51.retainAll((java.util.Collection<javafx.scene.Node>) nodeList56);
        int int73 = nodeList40.indexOf((java.lang.Object) boolean72);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(nodeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
// flaky:         org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList50);
// flaky:         org.junit.Assert.assertNotNull(nodeList51);
// flaky:         org.junit.Assert.assertNotNull(nodeItor52);
// flaky:         org.junit.Assert.assertNotNull(nodeItor53);
// flaky:         org.junit.Assert.assertNotNull(nodeStream54);
        org.junit.Assert.assertNotNull(nodeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(nodeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList68);
// flaky:         org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(nodeStream71);
// flaky:         org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test811");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null; // flaky: new Interface.WoodTotalValues(woodTable0);
        java.util.ArrayList<javafx.scene.Node> nodeList2 = null; // flaky: woodTotalValues1.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: woodTotalValues1.getAll();
        java.util.Iterator<javafx.scene.Node> nodeItor4 = null; // flaky: nodeList3.iterator();
        java.util.ListIterator<javafx.scene.Node> nodeItor5 = null; // flaky: nodeList3.listIterator();
        javafx.scene.Node[] nodeArray6 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList7 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList7, nodeArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = nodeList7.remove(obj9);
        javafx.scene.Node[] nodeArray11 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList12 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList12, nodeArray11);
        boolean boolean14 = nodeList12.isEmpty();
        int int16 = nodeList12.lastIndexOf((java.lang.Object) 100);
        boolean boolean17 = nodeList12.isEmpty();
        nodeList12.clear();
        boolean boolean19 = nodeList7.removeAll((java.util.Collection<javafx.scene.Node>) nodeList12);
        Interface.WoodTable woodTable20 = null;
        Interface.WoodTotalValues woodTotalValues21 = null;
        Interface.AddWood addWood22 = null; // flaky: new Interface.AddWood(woodTable20, woodTotalValues21);
        java.util.ArrayList<javafx.scene.Node> nodeList23 = null; // flaky: addWood22.getAll();
// flaky:         addWood22.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList27 = null; // flaky: addWood22.getAll();
        boolean boolean28 = false; // flaky: nodeList12.addAll((java.util.Collection<javafx.scene.Node>) nodeList27);
        javafx.scene.Node[] nodeArray29 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList30 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList30, nodeArray29);
        boolean boolean32 = nodeList30.isEmpty();
        int int34 = nodeList30.lastIndexOf((java.lang.Object) 100);
        int int36 = nodeList30.lastIndexOf((java.lang.Object) 10);
        Interface.WoodTable woodTable37 = null;
        Interface.WoodTotalValues woodTotalValues38 = null;
        Interface.AddWood addWood39 = null; // flaky: new Interface.AddWood(woodTable37, woodTotalValues38);
        java.util.ArrayList<javafx.scene.Node> nodeList40 = null; // flaky: addWood39.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList41 = null; // flaky: addWood39.getAll();
        javafx.scene.Node[] nodeArray42 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList43 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList43, nodeArray42);
        boolean boolean45 = nodeList43.isEmpty();
        int int47 = nodeList43.lastIndexOf((java.lang.Object) 100);
        int int49 = nodeList43.lastIndexOf((java.lang.Object) 10);
        boolean boolean50 = false; // flaky: nodeList41.retainAll((java.util.Collection<javafx.scene.Node>) nodeList43);
        boolean boolean51 = nodeList30.containsAll((java.util.Collection<javafx.scene.Node>) nodeList43);
        java.util.ListIterator<javafx.scene.Node> nodeItor53 = nodeList30.listIterator(0);
        java.util.Iterator<javafx.scene.Node> nodeItor54 = nodeList30.iterator();
        int int55 = 0; // flaky: nodeList27.lastIndexOf((java.lang.Object) nodeItor54);
// flaky:         nodeList27.clear();
        Interface.WoodTable woodTable57 = null;
        Interface.WoodTotalValues woodTotalValues58 = null;
        Interface.AddWood addWood59 = null; // flaky: new Interface.AddWood(woodTable57, woodTotalValues58);
        java.util.ArrayList<javafx.scene.Node> nodeList60 = null; // flaky: addWood59.getAll();
        boolean boolean62 = false; // flaky: nodeList60.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node64 = null;
        javafx.scene.Node node65 = null; // flaky: nodeList60.set((int) (byte) 1, node64);
        java.util.ListIterator<javafx.scene.Node> nodeItor66 = null; // flaky: nodeList60.listIterator();
// flaky:         nodeList60.clear();
        java.util.Iterator<javafx.scene.Node> nodeItor68 = null; // flaky: nodeList60.iterator();
        boolean boolean69 = false; // flaky: nodeList27.containsAll((java.util.Collection<javafx.scene.Node>) nodeList60);
        boolean boolean70 = false; // flaky: nodeList3.contains((java.lang.Object) nodeList27);
        Interface.WoodTable woodTable71 = null;
        Interface.WoodTable woodTable72 = null;
        Interface.WoodTotalValues woodTotalValues73 = null; // flaky: new Interface.WoodTotalValues(woodTable72);
        java.util.ArrayList<javafx.scene.Node> nodeList74 = null; // flaky: woodTotalValues73.getAll();
        Interface.AddWood addWood75 = null; // flaky: new Interface.AddWood(woodTable71, woodTotalValues73);
        java.util.ArrayList<javafx.scene.Node> nodeList76 = null; // flaky: woodTotalValues73.getAll();
        boolean boolean77 = false; // flaky: nodeList76.isEmpty();
        java.util.Iterator<javafx.scene.Node> nodeItor78 = null; // flaky: nodeList76.iterator();
        boolean boolean79 = false; // flaky: nodeList3.containsAll((java.util.Collection<javafx.scene.Node>) nodeList76);
// flaky:         org.junit.Assert.assertNotNull(nodeList2);
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeItor4);
// flaky:         org.junit.Assert.assertNotNull(nodeItor5);
        org.junit.Assert.assertNotNull(nodeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(nodeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList23);
// flaky:         org.junit.Assert.assertNotNull(nodeList27);
// flaky:         org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(nodeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList40);
// flaky:         org.junit.Assert.assertNotNull(nodeList41);
        org.junit.Assert.assertNotNull(nodeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(nodeItor53);
        org.junit.Assert.assertNotNull(nodeItor54);
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
// flaky:         org.junit.Assert.assertNotNull(node65);
// flaky:         org.junit.Assert.assertNotNull(nodeItor66);
// flaky:         org.junit.Assert.assertNotNull(nodeItor68);
// flaky:         org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList74);
// flaky:         org.junit.Assert.assertNotNull(nodeList76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test812");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTotalValues woodTotalValues3 = null; // flaky: new Interface.WoodTotalValues(woodTable2);
        Interface.AddWood addWood4 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues3);
// flaky:         woodTotalValues3.redraw(0.0d, (double) 0L);
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues3);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: woodTotalValues3.getAll();
        Interface.WoodTable woodTable10 = null;
        Interface.WoodTotalValues woodTotalValues11 = null; // flaky: new Interface.WoodTotalValues(woodTable10);
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: woodTotalValues11.getAll();
        int int14 = 0; // flaky: nodeList12.indexOf((java.lang.Object) (byte) 0);
        java.lang.Object[] objArray15 = null; // flaky: nodeList12.toArray();
        boolean boolean16 = false; // flaky: nodeList9.equals((java.lang.Object) nodeList12);
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
// flaky:         org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test813");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList6 = null; // flaky: addWood2.getAll();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
// flaky:         org.junit.Assert.assertNotNull(nodeList6);
    }

    @Test
    public void test814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test814");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
// flaky:         addWood16.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood16.getAll();
        boolean boolean22 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        javafx.scene.Node node24 = null; // flaky: nodeList6.remove((int) (short) 1);
        Interface.WoodTable woodTable25 = null;
        Interface.WoodTotalValues woodTotalValues26 = null;
        Interface.AddWood addWood27 = null; // flaky: new Interface.AddWood(woodTable25, woodTotalValues26);
        java.util.ArrayList<javafx.scene.Node> nodeList28 = null; // flaky: addWood27.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList29 = null; // flaky: addWood27.getAll();
        javafx.scene.Node[] nodeArray30 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList31 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList31, nodeArray30);
        boolean boolean33 = nodeList31.isEmpty();
        int int35 = nodeList31.lastIndexOf((java.lang.Object) 100);
        int int37 = nodeList31.lastIndexOf((java.lang.Object) 10);
        boolean boolean38 = false; // flaky: nodeList29.retainAll((java.util.Collection<javafx.scene.Node>) nodeList31);
        boolean boolean40 = false; // flaky: nodeList29.contains((java.lang.Object) false);
        java.util.stream.Stream<javafx.scene.Node> nodeStream41 = null; // flaky: nodeList29.parallelStream();
        Interface.WoodTable woodTable42 = null;
        Interface.WoodTable woodTable43 = null;
        Interface.WoodTable woodTable44 = null;
        Interface.WoodTotalValues woodTotalValues45 = null; // flaky: new Interface.WoodTotalValues(woodTable44);
        java.util.ArrayList<javafx.scene.Node> nodeList46 = null; // flaky: woodTotalValues45.getAll();
        Interface.AddWood addWood47 = null; // flaky: new Interface.AddWood(woodTable43, woodTotalValues45);
        Interface.AddWood addWood48 = null; // flaky: new Interface.AddWood(woodTable42, woodTotalValues45);
        int int49 = 0; // flaky: nodeList29.lastIndexOf((java.lang.Object) addWood48);
        boolean boolean50 = nodeList6.equals((java.lang.Object) nodeList29);
        java.util.Collection<javafx.scene.Node> nodeCollection51 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = nodeList29.containsAll(nodeCollection51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
// flaky:         org.junit.Assert.assertNotNull(node24);
// flaky:         org.junit.Assert.assertNotNull(nodeList28);
// flaky:         org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertNotNull(nodeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeStream41);
// flaky:         org.junit.Assert.assertNotNull(nodeList46);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test815");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
// flaky:         addWood16.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood16.getAll();
        boolean boolean22 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        javafx.scene.Node[] nodeArray23 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList24 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList24, nodeArray23);
        boolean boolean26 = nodeList24.isEmpty();
        int int28 = nodeList24.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable29 = null;
        Interface.WoodTotalValues woodTotalValues30 = null;
        Interface.AddWood addWood31 = null; // flaky: new Interface.AddWood(woodTable29, woodTotalValues30);
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood31.getAll();
        boolean boolean34 = false; // flaky: nodeList32.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node36 = null;
        javafx.scene.Node node37 = null; // flaky: nodeList32.set((int) (byte) 1, node36);
        boolean boolean38 = nodeList24.add(node37);
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        java.lang.Object obj42 = null;
        boolean boolean43 = nodeList40.remove(obj42);
        boolean boolean44 = nodeList24.retainAll((java.util.Collection<javafx.scene.Node>) nodeList40);
        boolean boolean45 = nodeList24.isEmpty();
        boolean boolean46 = nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList24);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator47 = nodeList6.spliterator();
        java.util.Iterator<javafx.scene.Node> nodeItor48 = nodeList6.iterator();
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(nodeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertNotNull(nodeItor48);
    }

    @Test
    public void test816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test816");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean14 = nodeList1.isEmpty();
        java.util.Iterator<javafx.scene.Node> nodeItor15 = nodeList1.iterator();
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean21 = false; // flaky: nodeList19.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node23 = null;
        javafx.scene.Node node24 = null; // flaky: nodeList19.set((int) (byte) 1, node23);
        java.util.ListIterator<javafx.scene.Node> nodeItor25 = null; // flaky: nodeList19.listIterator();
// flaky:         nodeList19.clear();
        java.util.ListIterator<javafx.scene.Node> nodeItor27 = null; // flaky: nodeList19.listIterator();
        boolean boolean28 = nodeList1.remove((java.lang.Object) nodeItor27);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(nodeItor15);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(node24);
// flaky:         org.junit.Assert.assertNotNull(nodeItor25);
// flaky:         org.junit.Assert.assertNotNull(nodeItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test817");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTotalValues woodTotalValues3 = null; // flaky: new Interface.WoodTotalValues(woodTable2);
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: woodTotalValues3.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList5 = null; // flaky: woodTotalValues3.getAll();
// flaky:         woodTotalValues3.redraw((double) 2, (double) 5);
// flaky:         woodTotalValues3.redraw((double) (byte) 1, (double) 1);
        java.util.ArrayList<javafx.scene.Node> nodeList12 = null; // flaky: woodTotalValues3.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList13 = null; // flaky: woodTotalValues3.getAll();
// flaky:         woodTotalValues3.redraw((double) (short) 1, 1.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: woodTotalValues3.getAll();
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues3);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: woodTotalValues3.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: woodTotalValues3.getAll();
// flaky:         woodTotalValues3.redraw(0.0d, (double) 'a');
        Interface.AddWood addWood24 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
// flaky:         org.junit.Assert.assertNotNull(nodeList5);
// flaky:         org.junit.Assert.assertNotNull(nodeList12);
// flaky:         org.junit.Assert.assertNotNull(nodeList13);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
    }

    @Test
    public void test818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test818");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTable woodTable2 = null;
        Interface.WoodTotalValues woodTotalValues3 = null; // flaky: new Interface.WoodTotalValues(woodTable2);
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: woodTotalValues3.getAll();
        Interface.AddWood addWood5 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues3);
        Interface.AddWood addWood6 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues3);
        java.util.ArrayList<javafx.scene.Node> nodeList7 = null; // flaky: addWood6.getAll();
// flaky:         addWood6.redraw((double) '#', (double) '#');
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
// flaky:         org.junit.Assert.assertNotNull(nodeList7);
    }

    @Test
    public void test819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test819");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        Interface.WoodTable woodTable14 = null;
        Interface.WoodTotalValues woodTotalValues15 = null;
        Interface.AddWood addWood16 = null; // flaky: new Interface.AddWood(woodTable14, woodTotalValues15);
        java.util.ArrayList<javafx.scene.Node> nodeList17 = null; // flaky: addWood16.getAll();
// flaky:         addWood16.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList21 = null; // flaky: addWood16.getAll();
        boolean boolean22 = false; // flaky: nodeList6.addAll((java.util.Collection<javafx.scene.Node>) nodeList21);
        javafx.scene.Node[] nodeArray23 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList24 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList24, nodeArray23);
        boolean boolean26 = nodeList24.isEmpty();
        int int28 = nodeList24.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable29 = null;
        Interface.WoodTotalValues woodTotalValues30 = null;
        Interface.AddWood addWood31 = null; // flaky: new Interface.AddWood(woodTable29, woodTotalValues30);
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood31.getAll();
        boolean boolean34 = false; // flaky: nodeList32.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node36 = null;
        javafx.scene.Node node37 = null; // flaky: nodeList32.set((int) (byte) 1, node36);
        boolean boolean38 = nodeList24.add(node37);
        javafx.scene.Node[] nodeArray39 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList40 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList40, nodeArray39);
        java.lang.Object obj42 = null;
        boolean boolean43 = nodeList40.remove(obj42);
        boolean boolean44 = nodeList24.retainAll((java.util.Collection<javafx.scene.Node>) nodeList40);
        boolean boolean45 = nodeList24.isEmpty();
        boolean boolean46 = nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList24);
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator47 = nodeList6.spliterator();
        Interface.WoodTable woodTable48 = null;
        Interface.WoodTotalValues woodTotalValues49 = null;
        Interface.AddWood addWood50 = null; // flaky: new Interface.AddWood(woodTable48, woodTotalValues49);
        java.util.ArrayList<javafx.scene.Node> nodeList51 = null; // flaky: addWood50.getAll();
        boolean boolean53 = false; // flaky: nodeList51.equals((java.lang.Object) (byte) 1);
        boolean boolean54 = nodeList6.contains((java.lang.Object) (byte) 1);
        javafx.scene.Node[] nodeArray55 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList56 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList56, nodeArray55);
        Interface.WoodTable woodTable59 = null;
        Interface.WoodTotalValues woodTotalValues60 = null;
        Interface.AddWood addWood61 = null; // flaky: new Interface.AddWood(woodTable59, woodTotalValues60);
        java.util.ArrayList<javafx.scene.Node> nodeList62 = null; // flaky: addWood61.getAll();
        boolean boolean63 = false; // flaky: nodeList56.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList62);
        Interface.WoodTable woodTable64 = null;
        Interface.WoodTotalValues woodTotalValues65 = null;
        Interface.AddWood addWood66 = null; // flaky: new Interface.AddWood(woodTable64, woodTotalValues65);
        java.util.ArrayList<javafx.scene.Node> nodeList67 = null; // flaky: addWood66.getAll();
        boolean boolean68 = false; // flaky: nodeList67.isEmpty();
        boolean boolean69 = false; // flaky: nodeList56.removeAll((java.util.Collection<javafx.scene.Node>) nodeList67);
        boolean boolean70 = nodeList6.retainAll((java.util.Collection<javafx.scene.Node>) nodeList56);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList17);
// flaky:         org.junit.Assert.assertNotNull(nodeList21);
// flaky:         org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(nodeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(nodeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator47);
// flaky:         org.junit.Assert.assertNotNull(nodeList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(nodeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList62);
// flaky:         org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test820");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean15 = false; // flaky: nodeList4.contains((java.lang.Object) false);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean20 = false; // flaky: nodeList19.isEmpty();
        boolean boolean22 = false; // flaky: nodeList19.equals((java.lang.Object) 100);
        int int23 = 0; // flaky: nodeList4.lastIndexOf((java.lang.Object) nodeList19);
        boolean boolean24 = false; // flaky: nodeList4.isEmpty();
        int int25 = 0; // flaky: nodeList4.size();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator26 = null; // flaky: nodeList4.spliterator();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator27 = null; // flaky: nodeList4.spliterator();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator26);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator27);
    }

    @Test
    public void test821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test821");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        java.lang.Object obj3 = null;
        boolean boolean4 = nodeList1.remove(obj3);
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        boolean boolean11 = nodeList6.isEmpty();
        nodeList6.clear();
        boolean boolean13 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean14 = nodeList1.isEmpty();
        javafx.scene.Node[] nodeArray15 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList16 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList16, nodeArray15);
        boolean boolean18 = nodeList16.isEmpty();
        int int20 = nodeList16.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable21 = null;
        Interface.WoodTotalValues woodTotalValues22 = null;
        Interface.AddWood addWood23 = null; // flaky: new Interface.AddWood(woodTable21, woodTotalValues22);
        java.util.ArrayList<javafx.scene.Node> nodeList24 = null; // flaky: addWood23.getAll();
        boolean boolean26 = false; // flaky: nodeList24.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node28 = null;
        javafx.scene.Node node29 = null; // flaky: nodeList24.set((int) (byte) 1, node28);
        boolean boolean30 = nodeList16.add(node29);
        javafx.scene.Node[] nodeArray32 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList33 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList33, nodeArray32);
        Interface.WoodTable woodTable36 = null;
        Interface.WoodTotalValues woodTotalValues37 = null;
        Interface.AddWood addWood38 = null; // flaky: new Interface.AddWood(woodTable36, woodTotalValues37);
        java.util.ArrayList<javafx.scene.Node> nodeList39 = null; // flaky: addWood38.getAll();
        boolean boolean40 = false; // flaky: nodeList33.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList39);
        int int42 = nodeList33.indexOf((java.lang.Object) true);
        javafx.scene.Node[] nodeArray44 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList45 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList45, nodeArray44);
        boolean boolean47 = nodeList45.isEmpty();
        int int49 = nodeList45.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable50 = null;
        Interface.WoodTotalValues woodTotalValues51 = null;
        Interface.AddWood addWood52 = null; // flaky: new Interface.AddWood(woodTable50, woodTotalValues51);
        java.util.ArrayList<javafx.scene.Node> nodeList53 = null; // flaky: addWood52.getAll();
        boolean boolean55 = false; // flaky: nodeList53.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node57 = null;
        javafx.scene.Node node58 = null; // flaky: nodeList53.set((int) (byte) 1, node57);
        boolean boolean59 = nodeList45.add(node58);
        javafx.scene.Node node60 = null; // flaky: nodeList33.set((int) (short) 0, node58);
        javafx.scene.Node node61 = nodeList16.set((int) (byte) 0, node58);
        boolean boolean62 = nodeList1.containsAll((java.util.Collection<javafx.scene.Node>) nodeList16);
        javafx.scene.Node[] nodeArray64 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList65 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList65, nodeArray64);
        Interface.WoodTable woodTable68 = null;
        Interface.WoodTotalValues woodTotalValues69 = null;
        Interface.AddWood addWood70 = null; // flaky: new Interface.AddWood(woodTable68, woodTotalValues69);
        java.util.ArrayList<javafx.scene.Node> nodeList71 = null; // flaky: addWood70.getAll();
        boolean boolean72 = false; // flaky: nodeList65.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList71);
        javafx.scene.Node[] nodeArray74 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList75 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList75, nodeArray74);
        boolean boolean77 = nodeList75.isEmpty();
        int int79 = nodeList75.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable80 = null;
        Interface.WoodTotalValues woodTotalValues81 = null;
        Interface.AddWood addWood82 = null; // flaky: new Interface.AddWood(woodTable80, woodTotalValues81);
        java.util.ArrayList<javafx.scene.Node> nodeList83 = null; // flaky: addWood82.getAll();
        boolean boolean85 = false; // flaky: nodeList83.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node87 = null;
        javafx.scene.Node node88 = null; // flaky: nodeList83.set((int) (byte) 1, node87);
        boolean boolean89 = nodeList75.add(node88);
// flaky:         nodeList65.add(1, node88);
        java.lang.Object[] objArray91 = nodeList65.toArray();
        nodeList65.clear();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = nodeList1.addAll(100, (java.util.Collection<javafx.scene.Node>) nodeList65);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(nodeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
// flaky:         org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(nodeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList39);
// flaky:         org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(nodeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
// flaky:         org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
// flaky:         org.junit.Assert.assertNotNull(node60);
// flaky:         org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(nodeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList71);
// flaky:         org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(nodeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
// flaky:         org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray91);
    }

    @Test
    public void test822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test822");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable6 = null;
        Interface.WoodTotalValues woodTotalValues7 = null;
        Interface.AddWood addWood8 = null; // flaky: new Interface.AddWood(woodTable6, woodTotalValues7);
        java.util.ArrayList<javafx.scene.Node> nodeList9 = null; // flaky: addWood8.getAll();
        boolean boolean11 = false; // flaky: nodeList9.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node13 = null;
        javafx.scene.Node node14 = null; // flaky: nodeList9.set((int) (byte) 1, node13);
        boolean boolean15 = nodeList1.add(node14);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood18.getAll();
        javafx.scene.Node[] nodeArray21 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList22 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList22, nodeArray21);
        boolean boolean24 = nodeList22.isEmpty();
        int int26 = nodeList22.lastIndexOf((java.lang.Object) 100);
        int int28 = nodeList22.lastIndexOf((java.lang.Object) 10);
        boolean boolean29 = false; // flaky: nodeList20.retainAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        boolean boolean30 = nodeList1.removeAll((java.util.Collection<javafx.scene.Node>) nodeList22);
        Interface.WoodTable woodTable31 = null;
        Interface.WoodTotalValues woodTotalValues32 = null;
        Interface.AddWood addWood33 = null; // flaky: new Interface.AddWood(woodTable31, woodTotalValues32);
        java.util.ArrayList<javafx.scene.Node> nodeList34 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList35 = null; // flaky: addWood33.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList36 = null; // flaky: addWood33.getAll();
        boolean boolean37 = false; // flaky: nodeList22.addAll((java.util.Collection<javafx.scene.Node>) nodeList36);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<javafx.scene.Node> nodeList40 = nodeList22.subList(7, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(nodeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList34);
// flaky:         org.junit.Assert.assertNotNull(nodeList35);
// flaky:         org.junit.Assert.assertNotNull(nodeList36);
// flaky:         org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test823");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTable woodTable1 = null;
        Interface.WoodTotalValues woodTotalValues2 = null;
        Interface.AddWood addWood3 = null; // flaky: new Interface.AddWood(woodTable1, woodTotalValues2);
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood3.getAll();
        boolean boolean5 = false; // flaky: nodeList4.isEmpty();
        boolean boolean7 = false; // flaky: nodeList4.equals((java.lang.Object) 100);
        java.util.Iterator<javafx.scene.Node> nodeItor8 = null; // flaky: nodeList4.iterator();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        boolean boolean12 = nodeList10.isEmpty();
        boolean boolean13 = nodeList10.isEmpty();
        nodeList10.clear();
        java.util.ListIterator<javafx.scene.Node> nodeItor16 = nodeList10.listIterator(0);
        Interface.WoodTable woodTable17 = null;
        Interface.WoodTotalValues woodTotalValues18 = null;
        Interface.AddWood addWood19 = null; // flaky: new Interface.AddWood(woodTable17, woodTotalValues18);
        java.util.ArrayList<javafx.scene.Node> nodeList20 = null; // flaky: addWood19.getAll();
        boolean boolean22 = false; // flaky: nodeList20.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node24 = null;
        javafx.scene.Node node25 = null; // flaky: nodeList20.set((int) (byte) 1, node24);
        javafx.css.Styleable[] styleableArray26 = new javafx.css.Styleable[] { node25 };
        Interface.WoodTable woodTable27 = null;
        Interface.WoodTotalValues woodTotalValues28 = null;
        Interface.AddWood addWood29 = null; // flaky: new Interface.AddWood(woodTable27, woodTotalValues28);
        java.util.ArrayList<javafx.scene.Node> nodeList30 = null; // flaky: addWood29.getAll();
        boolean boolean32 = false; // flaky: nodeList30.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node34 = null;
        javafx.scene.Node node35 = null; // flaky: nodeList30.set((int) (byte) 1, node34);
        javafx.css.Styleable[] styleableArray36 = new javafx.css.Styleable[] { node35 };
        javafx.css.Styleable[][] styleableArray37 = new javafx.css.Styleable[][] { styleableArray26, styleableArray36 };
        javafx.css.Styleable[][] styleableArray38 = nodeList10.toArray(styleableArray37);
        boolean boolean39 = false; // flaky: nodeList4.addAll((java.util.Collection<javafx.scene.Node>) nodeList10);
        Interface.WoodTable woodTable40 = null;
        Interface.WoodTable woodTable41 = null;
        Interface.WoodTotalValues woodTotalValues42 = null; // flaky: new Interface.WoodTotalValues(woodTable41);
        java.util.ArrayList<javafx.scene.Node> nodeList43 = null; // flaky: woodTotalValues42.getAll();
        Interface.AddWood addWood44 = null; // flaky: new Interface.AddWood(woodTable40, woodTotalValues42);
        boolean boolean45 = nodeList10.equals((java.lang.Object) woodTotalValues42);
        Interface.WoodTable woodTable46 = null;
        Interface.WoodTable woodTable47 = null;
        Interface.WoodTotalValues woodTotalValues48 = null; // flaky: new Interface.WoodTotalValues(woodTable47);
        Interface.AddWood addWood49 = null; // flaky: new Interface.AddWood(woodTable46, woodTotalValues48);
        java.util.ArrayList<javafx.scene.Node> nodeList50 = null; // flaky: woodTotalValues48.getAll();
        boolean boolean51 = false; // flaky: nodeList50.isEmpty();
        int int52 = nodeList10.lastIndexOf((java.lang.Object) boolean51);
        Interface.WoodTable woodTable53 = null;
        Interface.WoodTable woodTable54 = null;
        Interface.WoodTable woodTable55 = null;
        Interface.WoodTotalValues woodTotalValues56 = null; // flaky: new Interface.WoodTotalValues(woodTable55);
        java.util.ArrayList<javafx.scene.Node> nodeList57 = null; // flaky: woodTotalValues56.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList58 = null; // flaky: woodTotalValues56.getAll();
// flaky:         woodTotalValues56.redraw((double) 2, (double) 5);
// flaky:         woodTotalValues56.redraw((double) (byte) 1, (double) 1);
        java.util.ArrayList<javafx.scene.Node> nodeList65 = null; // flaky: woodTotalValues56.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList66 = null; // flaky: woodTotalValues56.getAll();
// flaky:         woodTotalValues56.redraw((double) (short) 1, 1.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList70 = null; // flaky: woodTotalValues56.getAll();
        Interface.AddWood addWood71 = null; // flaky: new Interface.AddWood(woodTable54, woodTotalValues56);
        java.util.ArrayList<javafx.scene.Node> nodeList72 = null; // flaky: woodTotalValues56.getAll();
        Interface.AddWood addWood73 = null; // flaky: new Interface.AddWood(woodTable53, woodTotalValues56);
        boolean boolean74 = nodeList10.contains((java.lang.Object) woodTotalValues56);
        Interface.AddWood addWood75 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues56);
        java.util.ArrayList<javafx.scene.Node> nodeList76 = null; // flaky: woodTotalValues56.getAll();
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeItor8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(nodeItor16);
// flaky:         org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(styleableArray26);
// flaky:         org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
// flaky:         org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(styleableArray36);
        org.junit.Assert.assertNotNull(styleableArray37);
        org.junit.Assert.assertNotNull(styleableArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList57);
// flaky:         org.junit.Assert.assertNotNull(nodeList58);
// flaky:         org.junit.Assert.assertNotNull(nodeList65);
// flaky:         org.junit.Assert.assertNotNull(nodeList66);
// flaky:         org.junit.Assert.assertNotNull(nodeList70);
// flaky:         org.junit.Assert.assertNotNull(nodeList72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList76);
    }

    @Test
    public void test824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test824");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        boolean boolean6 = nodeList1.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream7 = nodeList1.stream();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = nodeList10.remove(obj12);
        javafx.scene.Node[] nodeArray14 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList15 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList15, nodeArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = nodeList15.remove(obj17);
        javafx.scene.Node[] nodeArray19 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList20 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList20, nodeArray19);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
        boolean boolean27 = false; // flaky: nodeList20.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList26);
        javafx.scene.Node[] nodeArray29 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList30 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList30, nodeArray29);
        boolean boolean32 = nodeList30.isEmpty();
        int int34 = nodeList30.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null;
        Interface.AddWood addWood37 = null; // flaky: new Interface.AddWood(woodTable35, woodTotalValues36);
        java.util.ArrayList<javafx.scene.Node> nodeList38 = null; // flaky: addWood37.getAll();
        boolean boolean40 = false; // flaky: nodeList38.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node42 = null;
        javafx.scene.Node node43 = null; // flaky: nodeList38.set((int) (byte) 1, node42);
        boolean boolean44 = nodeList30.add(node43);
// flaky:         nodeList20.add(1, node43);
        boolean boolean46 = nodeList15.retainAll((java.util.Collection<javafx.scene.Node>) nodeList20);
        boolean boolean47 = nodeList10.retainAll((java.util.Collection<javafx.scene.Node>) nodeList20);
        boolean boolean48 = nodeList1.addAll((int) (short) 0, (java.util.Collection<javafx.scene.Node>) nodeList20);
        javafx.scene.Node[] nodeArray49 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList50 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList50, nodeArray49);
        boolean boolean52 = nodeList50.isEmpty();
        int int54 = nodeList50.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable55 = null;
        Interface.WoodTotalValues woodTotalValues56 = null;
        Interface.AddWood addWood57 = null; // flaky: new Interface.AddWood(woodTable55, woodTotalValues56);
        java.util.ArrayList<javafx.scene.Node> nodeList58 = null; // flaky: addWood57.getAll();
        boolean boolean60 = false; // flaky: nodeList58.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node62 = null;
        javafx.scene.Node node63 = null; // flaky: nodeList58.set((int) (byte) 1, node62);
        boolean boolean64 = nodeList50.add(node63);
        javafx.scene.Node[] nodeArray65 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList66 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList66, nodeArray65);
        java.lang.Object obj68 = null;
        boolean boolean69 = nodeList66.remove(obj68);
        boolean boolean70 = nodeList50.retainAll((java.util.Collection<javafx.scene.Node>) nodeList66);
        javafx.scene.Node[] nodeArray71 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList72 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList72, nodeArray71);
        Interface.WoodTable woodTable75 = null;
        Interface.WoodTotalValues woodTotalValues76 = null;
        Interface.AddWood addWood77 = null; // flaky: new Interface.AddWood(woodTable75, woodTotalValues76);
        java.util.ArrayList<javafx.scene.Node> nodeList78 = null; // flaky: addWood77.getAll();
        boolean boolean79 = false; // flaky: nodeList72.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList78);
        java.util.stream.Stream<javafx.scene.Node> nodeStream80 = null; // flaky: nodeList78.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator81 = null; // flaky: nodeList78.spliterator();
        boolean boolean82 = false; // flaky: nodeList50.addAll((java.util.Collection<javafx.scene.Node>) nodeList78);
        java.util.Iterator<javafx.scene.Node> nodeItor83 = null; // flaky: nodeList78.iterator();
        javafx.scene.Node node85 = null; // flaky: nodeList78.remove(1);
        boolean boolean86 = nodeList1.add(node85);
        java.util.function.UnaryOperator<javafx.scene.Node> nodeUnaryOperator87 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList1.replaceAll(nodeUnaryOperator87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(nodeStream7);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(nodeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(nodeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
// flaky:         org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(nodeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(nodeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
// flaky:         org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(nodeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(nodeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList78);
// flaky:         org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream80);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator81);
// flaky:         org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeItor83);
// flaky:         org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test825");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
        java.util.ArrayList<javafx.scene.Node> nodeList4 = null; // flaky: addWood2.getAll();
        javafx.scene.Node[] nodeArray5 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList6 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList6, nodeArray5);
        boolean boolean8 = nodeList6.isEmpty();
        int int10 = nodeList6.lastIndexOf((java.lang.Object) 100);
        int int12 = nodeList6.lastIndexOf((java.lang.Object) 10);
        boolean boolean13 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList6);
        boolean boolean15 = false; // flaky: nodeList4.contains((java.lang.Object) false);
        Interface.WoodTable woodTable16 = null;
        Interface.WoodTotalValues woodTotalValues17 = null;
        Interface.AddWood addWood18 = null; // flaky: new Interface.AddWood(woodTable16, woodTotalValues17);
        java.util.ArrayList<javafx.scene.Node> nodeList19 = null; // flaky: addWood18.getAll();
        boolean boolean20 = false; // flaky: nodeList19.isEmpty();
        boolean boolean22 = false; // flaky: nodeList19.equals((java.lang.Object) 100);
        int int23 = 0; // flaky: nodeList4.lastIndexOf((java.lang.Object) nodeList19);
        int int24 = 0; // flaky: nodeList4.size();
        javafx.scene.Node[] nodeArray25 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList26 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList26, nodeArray25);
        Interface.WoodTable woodTable29 = null;
        Interface.WoodTotalValues woodTotalValues30 = null;
        Interface.AddWood addWood31 = null; // flaky: new Interface.AddWood(woodTable29, woodTotalValues30);
        java.util.ArrayList<javafx.scene.Node> nodeList32 = null; // flaky: addWood31.getAll();
        boolean boolean33 = false; // flaky: nodeList26.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList32);
        java.util.stream.Stream<javafx.scene.Node> nodeStream34 = null; // flaky: nodeList32.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator35 = null; // flaky: nodeList32.spliterator();
        javafx.scene.Node[] nodeArray36 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList37 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList37, nodeArray36);
        java.lang.Object obj39 = null;
        boolean boolean40 = nodeList37.remove(obj39);
        boolean boolean41 = false; // flaky: nodeList32.removeAll((java.util.Collection<javafx.scene.Node>) nodeList37);
        javafx.scene.Node[] nodeArray42 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList43 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList43, nodeArray42);
        boolean boolean45 = nodeList43.isEmpty();
        int int47 = nodeList43.lastIndexOf((java.lang.Object) 100);
        Interface.WoodTable woodTable48 = null;
        Interface.WoodTotalValues woodTotalValues49 = null;
        Interface.AddWood addWood50 = null; // flaky: new Interface.AddWood(woodTable48, woodTotalValues49);
        java.util.ArrayList<javafx.scene.Node> nodeList51 = null; // flaky: addWood50.getAll();
        boolean boolean53 = false; // flaky: nodeList51.equals((java.lang.Object) (byte) 1);
        javafx.scene.Node node55 = null;
        javafx.scene.Node node56 = null; // flaky: nodeList51.set((int) (byte) 1, node55);
        boolean boolean57 = nodeList43.add(node56);
        boolean boolean58 = false; // flaky: nodeList32.add(node56);
        javafx.scene.Node[] nodeArray59 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList60 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList60, nodeArray59);
        Interface.WoodTable woodTable63 = null;
        Interface.WoodTotalValues woodTotalValues64 = null;
        Interface.AddWood addWood65 = null; // flaky: new Interface.AddWood(woodTable63, woodTotalValues64);
        java.util.ArrayList<javafx.scene.Node> nodeList66 = null; // flaky: addWood65.getAll();
        boolean boolean67 = false; // flaky: nodeList60.addAll(0, (java.util.Collection<javafx.scene.Node>) nodeList66);
        java.util.stream.Stream<javafx.scene.Node> nodeStream68 = null; // flaky: nodeList66.parallelStream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator69 = null; // flaky: nodeList66.spliterator();
        javafx.scene.Node[] nodeArray70 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList71 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList71, nodeArray70);
        boolean boolean73 = nodeList71.isEmpty();
        int int75 = nodeList71.lastIndexOf((java.lang.Object) 100);
        boolean boolean76 = nodeList71.isEmpty();
        boolean boolean77 = false; // flaky: nodeList66.contains((java.lang.Object) boolean76);
        boolean boolean78 = false; // flaky: nodeList32.addAll((java.util.Collection<javafx.scene.Node>) nodeList66);
        int int79 = 0; // flaky: nodeList32.size();
        boolean boolean80 = false; // flaky: nodeList4.retainAll((java.util.Collection<javafx.scene.Node>) nodeList32);
        java.util.function.UnaryOperator<javafx.scene.Node> nodeUnaryOperator81 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList4.replaceAll(nodeUnaryOperator81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList4);
        org.junit.Assert.assertNotNull(nodeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(nodeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList32);
// flaky:         org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream34);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator35);
        org.junit.Assert.assertNotNull(nodeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(nodeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
// flaky:         org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(nodeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList66);
// flaky:         org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
// flaky:         org.junit.Assert.assertNotNull(nodeStream68);
// flaky:         org.junit.Assert.assertNotNull(nodeSpliterator69);
        org.junit.Assert.assertNotNull(nodeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int79 + "' != '" + 11 + "'", int79 == 11);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test826");
        Interface.WoodTable woodTable0 = null;
        Interface.WoodTotalValues woodTotalValues1 = null;
        Interface.AddWood addWood2 = null; // flaky: new Interface.AddWood(woodTable0, woodTotalValues1);
        java.util.ArrayList<javafx.scene.Node> nodeList3 = null; // flaky: addWood2.getAll();
// flaky:         addWood2.redraw((double) 10.0f, (double) 0L);
// flaky:         addWood2.redraw(10.0d, 10.0d);
// flaky:         addWood2.redraw((double) (short) 10, (double) 0L);
        java.util.ArrayList<javafx.scene.Node> nodeList13 = null; // flaky: addWood2.getAll();
// flaky:         org.junit.Assert.assertNotNull(nodeList3);
// flaky:         org.junit.Assert.assertNotNull(nodeList13);
    }

    @Test
    public void test827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test827");
        javafx.scene.Node[] nodeArray0 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList1 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList1, nodeArray0);
        boolean boolean3 = nodeList1.isEmpty();
        int int5 = nodeList1.lastIndexOf((java.lang.Object) 100);
        boolean boolean6 = nodeList1.isEmpty();
        java.util.stream.Stream<javafx.scene.Node> nodeStream7 = nodeList1.stream();
        java.util.Spliterator<javafx.scene.Node> nodeSpliterator8 = nodeList1.spliterator();
        javafx.scene.Node[] nodeArray9 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList10 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList10, nodeArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = nodeList10.remove(obj12);
        javafx.scene.Node[] nodeArray14 = new javafx.scene.Node[] {};
        java.util.ArrayList<javafx.scene.Node> nodeList15 = new java.util.ArrayList<javafx.scene.Node>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<javafx.scene.Node>) nodeList15, nodeArray14);
        boolean boolean17 = nodeList15.isEmpty();
        int int19 = nodeList15.lastIndexOf((java.lang.Object) 100);
        boolean boolean20 = nodeList15.isEmpty();
        nodeList15.clear();
        boolean boolean22 = nodeList10.removeAll((java.util.Collection<javafx.scene.Node>) nodeList15);
        Interface.WoodTable woodTable23 = null;
        Interface.WoodTotalValues woodTotalValues24 = null;
        Interface.AddWood addWood25 = null; // flaky: new Interface.AddWood(woodTable23, woodTotalValues24);
        java.util.ArrayList<javafx.scene.Node> nodeList26 = null; // flaky: addWood25.getAll();
// flaky:         addWood25.redraw((double) (short) 0, 10.0d);
        java.util.ArrayList<javafx.scene.Node> nodeList30 = null; // flaky: addWood25.getAll();
        boolean boolean31 = false; // flaky: nodeList15.addAll((java.util.Collection<javafx.scene.Node>) nodeList30);
        javafx.scene.Node node33 = null; // flaky: nodeList15.remove((int) (short) 1);
        int int34 = nodeList1.lastIndexOf((java.lang.Object) (short) 1);
        Interface.WoodTable woodTable35 = null;
        Interface.WoodTotalValues woodTotalValues36 = null; // flaky: new Interface.WoodTotalValues(woodTable35);
        java.util.ArrayList<javafx.scene.Node> nodeList37 = null; // flaky: woodTotalValues36.getAll();
        int int39 = 0; // flaky: nodeList37.indexOf((java.lang.Object) (byte) 0);
        java.lang.Object[] objArray40 = null; // flaky: nodeList37.toArray();
        Interface.WoodTable woodTable41 = null;
        Interface.WoodTotalValues woodTotalValues42 = null;
        Interface.AddWood addWood43 = null; // flaky: new Interface.AddWood(woodTable41, woodTotalValues42);
        java.util.ArrayList<javafx.scene.Node> nodeList44 = null; // flaky: addWood43.getAll();
        boolean boolean46 = false; // flaky: nodeList44.equals((java.lang.Object) (byte) 1);
        boolean boolean47 = false; // flaky: nodeList37.addAll((java.util.Collection<javafx.scene.Node>) nodeList44);
        boolean boolean48 = false; // flaky: nodeList37.isEmpty();
        boolean boolean49 = false; // flaky: nodeList1.addAll((java.util.Collection<javafx.scene.Node>) nodeList37);
        javafx.scene.Node node51 = null; // flaky: nodeList37.remove((int) (short) 0);
        org.junit.Assert.assertNotNull(nodeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(nodeStream7);
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(nodeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertNotNull(nodeList26);
// flaky:         org.junit.Assert.assertNotNull(nodeList30);
// flaky:         org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
// flaky:         org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
// flaky:         org.junit.Assert.assertNotNull(nodeList37);
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
// flaky:         org.junit.Assert.assertNotNull(objArray40);
// flaky:         org.junit.Assert.assertNotNull(nodeList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
// flaky:         org.junit.Assert.assertNotNull(node51);
    }
}
